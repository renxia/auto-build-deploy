"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["68067"],{14374:function(n,e,t){t.r(e),t.d(e,{default:()=>f,frontMatter:()=>r,metadata:()=>s,assets:()=>i,toc:()=>l,contentTitle:()=>_});var s=JSON.parse('{"id":"how_to/extend/pass_instrument","title":"\u5982\u4F55\u4F7F\u7528 TVM Pass Instrument","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/docs/how_to/extend/03-pass_instrument.md","sourceDirName":"how_to/extend","slug":"/how_to/extend/pass_instrument","permalink":"/docs/tvm-cn/docs/how_to/extend/pass_instrument","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/docs/how_to/extend/03-pass_instrument.md","tags":[],"version":"current","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":3,"frontMatter":{"title":"\u5982\u4F55\u4F7F\u7528 TVM Pass Instrument"},"sidebar":"tutorialSidebar","previous":{"title":"\u5982\u4F55\u4F7F\u7528 TVM Pass Infra","permalink":"/docs/tvm-cn/docs/how_to/extend/pass_infra"},"next":{"title":"\u5728 TVM \u4E2D\u4F7F\u7528 Bring Your Own Datatypes","permalink":"/docs/tvm-cn/docs/how_to/extend/datatypes"}}'),a=t("74132"),o=t("21494");let r={title:"\u5982\u4F55\u4F7F\u7528 TVM Pass Instrument"},_="\u5982\u4F55\u4F7F\u7528 TVM Pass Instrument",i={},l=[{value:"\u521B\u5EFA Relay \u7A0B\u5E8F\u793A\u4F8B",id:"\u521B\u5EFA-relay-\u7A0B\u5E8F\u793A\u4F8B",level:2},{value:"\u4F7F\u7528 Instrument \u521B\u5EFA PassContext",id:"\u4F7F\u7528-instrument-\u521B\u5EFA-passcontext",level:2},{value:"\u5C06\u5F53\u524D PassContext \u4E0E Instrument \u4E00\u8D77\u4F7F\u7528",id:"\u5C06\u5F53\u524D-passcontext-\u4E0E-instrument-\u4E00\u8D77\u4F7F\u7528",level:2},{value:"\u521B\u5EFA\u81EA\u5B9A\u4E49 Instrument \u7C7B",id:"\u521B\u5EFA\u81EA\u5B9A\u4E49-instrument-\u7C7B",level:2},{value:"\u5E94\u7528 Pass \u548C\u591A\u4E2A Instrument \u7C7B",id:"\u5E94\u7528-pass-\u548C\u591A\u4E2A-instrument-\u7C7B",level:2},{value:"\u5F02\u5E38\u5904\u7406",id:"\u5F02\u5E38\u5904\u7406",level:2}];function d(n){let e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"\u5982\u4F55\u4F7F\u7528-tvm-pass-instrument",children:"\u5982\u4F55\u4F7F\u7528 TVM Pass Instrument"})}),"\n",(0,a.jsx)(e.admonition,{type:"note",children:(0,a.jsxs)(e.p,{children:["\u5355\u51FB ",(0,a.jsx)(e.a,{href:"https://tvm.apache.org/docs/how_to/extend_tvm/use_pass_instrument.html#sphx-glr-download-how-to-extend-tvm-use-pass-instrument-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,a.jsx)(e.a,{href:"https://github.com/chiwwang",children:"Chi-Wei Wang"})]}),"\n",(0,a.jsx)(e.p,{children:"\u968F\u7740\u5B9E\u73B0\u7684 Pass \u8D8A\u6765\u8D8A\u591A\uFF0Cinstrument pass \u6267\u884C\u3001\u5206\u6790\u6BCF\u4E2A Pass \u6548\u679C\u548C\u89C2\u5BDF\u5404\u79CD\u4E8B\u4EF6\u4E5F\u6108\u53D1\u91CD\u8981\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u53EF\u4EE5\u901A\u8FC7\u5411 ",(0,a.jsx)(e.code,{children:"tvm.transform.PassContext"})," \u63D0\u4F9B ",(0,a.jsx)(e.code,{children:"tvm.ir.instrument.PassInstrument"})," \u5B9E\u4F8B\u5217\u8868\u6765\u68C0\u6D4B Pass\u3002\u6211\u4EEC\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7528\u4E8E\u6536\u96C6\u8BA1\u65F6\u4FE1\u606F\u7684 pass \u5DE5\u5177\uFF08",(0,a.jsx)(e.code,{children:"tvm.ir.instrument.PassTimingInstrument"}),"\uFF09\uFF0C\u53EF\u4EE5\u901A\u8FC7 ",(0,a.jsx)(e.code,{children:"tvm.instrument.pass_instrument()"})," \u88C5\u9970\u5668\u4F7F\u7528\u6269\u5C55\u673A\u5236\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u672C\u6559\u7A0B\u6F14\u793A\u5F00\u53D1\u8005\u5982\u4F55\u7528 ",(0,a.jsx)(e.code,{children:"PassContext"})," \u68C0\u6D4B Pass\u3002\u53E6\u8BF7\u53C2\u9605 ",(0,a.jsx)(e.a,{href:"https://tvm.apache.org/docs/arch/pass_infra.html#pass-infra",children:"Pass Infrastructure"}),"\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import tvm\nimport tvm.relay as relay\nfrom tvm.relay.testing import resnet\nfrom tvm.contrib.download import download_testdata\nfrom tvm.relay.build_module import bind_params_by_name\nfrom tvm.ir.instrument import (\n    PassTimingInstrument,\n    pass_instrument,\n)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"\u521B\u5EFA-relay-\u7A0B\u5E8F\u793A\u4F8B",children:"\u521B\u5EFA Relay \u7A0B\u5E8F\u793A\u4F8B"}),"\n",(0,a.jsx)(e.p,{children:"\u5728 Relay \u4E2D\u4F7F\u7528\u9884\u5B9A\u4E49\u7684 ResNet-18 \u7F51\u7EDC\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'batch_size = 1\nnum_of_image_class = 1000\nimage_shape = (3, 224, 224)\noutput_shape = (batch_size, num_of_image_class)\nrelay_mod, relay_params = resnet.get_workload(num_layers=18, batch_size=1, image_shape=image_shape)\nprint("Printing the IR module...")\nprint(relay_mod.astext(show_meta_data=False))\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:'Printing the IR module...\n#[version = "0.0.5"]\ndef @main(%data: Tensor[(1, 3, 224, 224), float32] /* ty=Tensor[(1, 3, 224, 224), float32] */, %bn_data_gamma: Tensor[(3), float32] /* ty=Tensor[(3), float32] */, %bn_data_beta: Tensor[(3), float32] /* ty=Tensor[(3), float32] */, %bn_data_moving_mean: Tensor[(3), float32] /* ty=Tensor[(3), float32] */, %bn_data_moving_var: Tensor[(3), float32] /* ty=Tensor[(3), float32] */, %conv0_weight: Tensor[(64, 3, 7, 7), float32] /* ty=Tensor[(64, 3, 7, 7), float32] */, %bn0_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %bn0_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %bn0_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %bn0_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_bn1_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_bn1_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_bn1_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_bn1_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_conv1_weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %stage1_unit1_bn2_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_bn2_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_bn2_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_bn2_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit1_conv2_weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %stage1_unit1_sc_weight: Tensor[(64, 64, 1, 1), float32] /* ty=Tensor[(64, 64, 1, 1), float32] */, %stage1_unit2_bn1_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_bn1_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_bn1_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_bn1_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_conv1_weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %stage1_unit2_bn2_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_bn2_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_bn2_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_bn2_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage1_unit2_conv2_weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %stage2_unit1_bn1_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage2_unit1_bn1_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage2_unit1_bn1_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage2_unit1_bn1_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %stage2_unit1_conv1_weight: Tensor[(128, 64, 3, 3), float32] /* ty=Tensor[(128, 64, 3, 3), float32] */, %stage2_unit1_bn2_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit1_bn2_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit1_bn2_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit1_bn2_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit1_conv2_weight: Tensor[(128, 128, 3, 3), float32] /* ty=Tensor[(128, 128, 3, 3), float32] */, %stage2_unit1_sc_weight: Tensor[(128, 64, 1, 1), float32] /* ty=Tensor[(128, 64, 1, 1), float32] */, %stage2_unit2_bn1_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_bn1_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_bn1_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_bn1_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_conv1_weight: Tensor[(128, 128, 3, 3), float32] /* ty=Tensor[(128, 128, 3, 3), float32] */, %stage2_unit2_bn2_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_bn2_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_bn2_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_bn2_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage2_unit2_conv2_weight: Tensor[(128, 128, 3, 3), float32] /* ty=Tensor[(128, 128, 3, 3), float32] */, %stage3_unit1_bn1_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage3_unit1_bn1_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage3_unit1_bn1_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage3_unit1_bn1_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %stage3_unit1_conv1_weight: Tensor[(256, 128, 3, 3), float32] /* ty=Tensor[(256, 128, 3, 3), float32] */, %stage3_unit1_bn2_gamma: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit1_bn2_beta: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit1_bn2_moving_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit1_bn2_moving_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit1_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] */, %stage3_unit1_sc_weight: Tensor[(256, 128, 1, 1), float32] /* ty=Tensor[(256, 128, 1, 1), float32] */, %stage3_unit2_bn1_gamma: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_bn1_beta: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_bn1_moving_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_bn1_moving_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_conv1_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] */, %stage3_unit2_bn2_gamma: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_bn2_beta: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_bn2_moving_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_bn2_moving_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage3_unit2_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] */, %stage4_unit1_bn1_gamma: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage4_unit1_bn1_beta: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage4_unit1_bn1_moving_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage4_unit1_bn1_moving_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] */, %stage4_unit1_conv1_weight: Tensor[(512, 256, 3, 3), float32] /* ty=Tensor[(512, 256, 3, 3), float32] */, %stage4_unit1_bn2_gamma: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit1_bn2_beta: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit1_bn2_moving_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit1_bn2_moving_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit1_conv2_weight: Tensor[(512, 512, 3, 3), float32] /* ty=Tensor[(512, 512, 3, 3), float32] */, %stage4_unit1_sc_weight: Tensor[(512, 256, 1, 1), float32] /* ty=Tensor[(512, 256, 1, 1), float32] */, %stage4_unit2_bn1_gamma: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_bn1_beta: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_bn1_moving_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_bn1_moving_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_conv1_weight: Tensor[(512, 512, 3, 3), float32] /* ty=Tensor[(512, 512, 3, 3), float32] */, %stage4_unit2_bn2_gamma: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_bn2_beta: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_bn2_moving_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_bn2_moving_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %stage4_unit2_conv2_weight: Tensor[(512, 512, 3, 3), float32] /* ty=Tensor[(512, 512, 3, 3), float32] */, %bn1_gamma: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %bn1_beta: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %bn1_moving_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %bn1_moving_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] */, %fc1_weight: Tensor[(1000, 512), float32] /* ty=Tensor[(1000, 512), float32] */, %fc1_bias: Tensor[(1000), float32] /* ty=Tensor[(1000), float32] */) -> Tensor[(1, 1000), float32] {\n  %0 = nn.batch_norm(%data, %bn_data_gamma, %bn_data_beta, %bn_data_moving_mean, %bn_data_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1, 3, 224, 224), float32], Tensor[(3), float32], Tensor[(3), float32]) */;\n  %1 = %0.0 /* ty=Tensor[(1, 3, 224, 224), float32] */;\n  %2 = nn.conv2d(%1, %conv0_weight, strides=[2, 2], padding=[3, 3, 3, 3], channels=64, kernel_size=[7, 7]) /* ty=Tensor[(1, 64, 112, 112), float32] */;\n  %3 = nn.batch_norm(%2, %bn0_gamma, %bn0_beta, %bn0_moving_mean, %bn0_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 64, 112, 112), float32], Tensor[(64), float32], Tensor[(64), float32]) */;\n  %4 = %3.0 /* ty=Tensor[(1, 64, 112, 112), float32] */;\n  %5 = nn.relu(%4) /* ty=Tensor[(1, 64, 112, 112), float32] */;\n  %6 = nn.max_pool2d(%5, pool_size=[3, 3], strides=[2, 2], padding=[1, 1, 1, 1]) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %7 = nn.batch_norm(%6, %stage1_unit1_bn1_gamma, %stage1_unit1_bn1_beta, %stage1_unit1_bn1_moving_mean, %stage1_unit1_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 64, 56, 56), float32], Tensor[(64), float32], Tensor[(64), float32]) */;\n  %8 = %7.0 /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %9 = nn.relu(%8) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %10 = nn.conv2d(%9, %stage1_unit1_conv1_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %11 = nn.batch_norm(%10, %stage1_unit1_bn2_gamma, %stage1_unit1_bn2_beta, %stage1_unit1_bn2_moving_mean, %stage1_unit1_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 64, 56, 56), float32], Tensor[(64), float32], Tensor[(64), float32]) */;\n  %12 = %11.0 /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %13 = nn.relu(%12) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %14 = nn.conv2d(%13, %stage1_unit1_conv2_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %15 = nn.conv2d(%9, %stage1_unit1_sc_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %16 = add(%14, %15) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %17 = nn.batch_norm(%16, %stage1_unit2_bn1_gamma, %stage1_unit2_bn1_beta, %stage1_unit2_bn1_moving_mean, %stage1_unit2_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 64, 56, 56), float32], Tensor[(64), float32], Tensor[(64), float32]) */;\n  %18 = %17.0 /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %19 = nn.relu(%18) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %20 = nn.conv2d(%19, %stage1_unit2_conv1_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %21 = nn.batch_norm(%20, %stage1_unit2_bn2_gamma, %stage1_unit2_bn2_beta, %stage1_unit2_bn2_moving_mean, %stage1_unit2_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 64, 56, 56), float32], Tensor[(64), float32], Tensor[(64), float32]) */;\n  %22 = %21.0 /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %23 = nn.relu(%22) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %24 = nn.conv2d(%23, %stage1_unit2_conv2_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %25 = add(%24, %16) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %26 = nn.batch_norm(%25, %stage2_unit1_bn1_gamma, %stage2_unit1_bn1_beta, %stage2_unit1_bn1_moving_mean, %stage2_unit1_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 64, 56, 56), float32], Tensor[(64), float32], Tensor[(64), float32]) */;\n  %27 = %26.0 /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %28 = nn.relu(%27) /* ty=Tensor[(1, 64, 56, 56), float32] */;\n  %29 = nn.conv2d(%28, %stage2_unit1_conv1_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %30 = nn.batch_norm(%29, %stage2_unit1_bn2_gamma, %stage2_unit1_bn2_beta, %stage2_unit1_bn2_moving_mean, %stage2_unit1_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;\n  %31 = %30.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %32 = nn.relu(%31) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %33 = nn.conv2d(%32, %stage2_unit1_conv2_weight, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %34 = nn.conv2d(%28, %stage2_unit1_sc_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %35 = add(%33, %34) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %36 = nn.batch_norm(%35, %stage2_unit2_bn1_gamma, %stage2_unit2_bn1_beta, %stage2_unit2_bn1_moving_mean, %stage2_unit2_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;\n  %37 = %36.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %38 = nn.relu(%37) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %39 = nn.conv2d(%38, %stage2_unit2_conv1_weight, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %40 = nn.batch_norm(%39, %stage2_unit2_bn2_gamma, %stage2_unit2_bn2_beta, %stage2_unit2_bn2_moving_mean, %stage2_unit2_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;\n  %41 = %40.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %42 = nn.relu(%41) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %43 = nn.conv2d(%42, %stage2_unit2_conv2_weight, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %44 = add(%43, %35) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %45 = nn.batch_norm(%44, %stage3_unit1_bn1_gamma, %stage3_unit1_bn1_beta, %stage3_unit1_bn1_moving_mean, %stage3_unit1_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;\n  %46 = %45.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %47 = nn.relu(%46) /* ty=Tensor[(1, 128, 28, 28), float32] */;\n  %48 = nn.conv2d(%47, %stage3_unit1_conv1_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %49 = nn.batch_norm(%48, %stage3_unit1_bn2_gamma, %stage3_unit1_bn2_beta, %stage3_unit1_bn2_moving_mean, %stage3_unit1_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;\n  %50 = %49.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %51 = nn.relu(%50) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %52 = nn.conv2d(%51, %stage3_unit1_conv2_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %53 = nn.conv2d(%47, %stage3_unit1_sc_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %54 = add(%52, %53) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %55 = nn.batch_norm(%54, %stage3_unit2_bn1_gamma, %stage3_unit2_bn1_beta, %stage3_unit2_bn1_moving_mean, %stage3_unit2_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;\n  %56 = %55.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %57 = nn.relu(%56) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %58 = nn.conv2d(%57, %stage3_unit2_conv1_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %59 = nn.batch_norm(%58, %stage3_unit2_bn2_gamma, %stage3_unit2_bn2_beta, %stage3_unit2_bn2_moving_mean, %stage3_unit2_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;\n  %60 = %59.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %61 = nn.relu(%60) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %62 = nn.conv2d(%61, %stage3_unit2_conv2_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %63 = add(%62, %54) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %64 = nn.batch_norm(%63, %stage4_unit1_bn1_gamma, %stage4_unit1_bn1_beta, %stage4_unit1_bn1_moving_mean, %stage4_unit1_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;\n  %65 = %64.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %66 = nn.relu(%65) /* ty=Tensor[(1, 256, 14, 14), float32] */;\n  %67 = nn.conv2d(%66, %stage4_unit1_conv1_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %68 = nn.batch_norm(%67, %stage4_unit1_bn2_gamma, %stage4_unit1_bn2_beta, %stage4_unit1_bn2_moving_mean, %stage4_unit1_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;\n  %69 = %68.0 /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %70 = nn.relu(%69) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %71 = nn.conv2d(%70, %stage4_unit1_conv2_weight, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %72 = nn.conv2d(%66, %stage4_unit1_sc_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %73 = add(%71, %72) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %74 = nn.batch_norm(%73, %stage4_unit2_bn1_gamma, %stage4_unit2_bn1_beta, %stage4_unit2_bn1_moving_mean, %stage4_unit2_bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;\n  %75 = %74.0 /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %76 = nn.relu(%75) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %77 = nn.conv2d(%76, %stage4_unit2_conv1_weight, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %78 = nn.batch_norm(%77, %stage4_unit2_bn2_gamma, %stage4_unit2_bn2_beta, %stage4_unit2_bn2_moving_mean, %stage4_unit2_bn2_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;\n  %79 = %78.0 /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %80 = nn.relu(%79) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %81 = nn.conv2d(%80, %stage4_unit2_conv2_weight, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %82 = add(%81, %73) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %83 = nn.batch_norm(%82, %bn1_gamma, %bn1_beta, %bn1_moving_mean, %bn1_moving_var, epsilon=2e-05f) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;\n  %84 = %83.0 /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %85 = nn.relu(%84) /* ty=Tensor[(1, 512, 7, 7), float32] */;\n  %86 = nn.global_avg_pool2d(%85) /* ty=Tensor[(1, 512, 1, 1), float32] */;\n  %87 = nn.batch_flatten(%86) /* ty=Tensor[(1, 512), float32] */;\n  %88 = nn.dense(%87, %fc1_weight, units=1000) /* ty=Tensor[(1, 1000), float32] */;\n  %89 = nn.bias_add(%88, %fc1_bias, axis=-1) /* ty=Tensor[(1, 1000), float32] */;\n  nn.softmax(%89) /* ty=Tensor[(1, 1000), float32] */\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"\u4F7F\u7528-instrument-\u521B\u5EFA-passcontext",children:"\u4F7F\u7528 Instrument \u521B\u5EFA PassContext"}),"\n",(0,a.jsxs)(e.p,{children:["\u8981\u7528 instrument \u8FD0\u884C\u6240\u6709 Pass\uFF0C\u5C06\u5176\u901A\u8FC7\u53C2\u6570 ",(0,a.jsx)(e.code,{children:"instruments"})," \u4F20\u9012\u7ED9\u6784\u9020\u51FD\u6570 ",(0,a.jsx)(e.code,{children:"PassContext"}),"\u3002",(0,a.jsx)(e.code,{children:"PassTimingInstrument"})," \u7528\u4E8E\u5206\u6790\u6BCF\u4E2A Pass \u6267\u884C\u65F6\u95F4\u7684\u5185\u7F6E\u51FD\u6570\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'timing_inst = PassTimingInstrument()\nwith tvm.transform.PassContext(instruments=[timing_inst]):\n    relay_mod = relay.transform.InferType()(relay_mod)\n    relay_mod = relay.transform.FoldScaleAxis()(relay_mod)\n    # \u5728\u9000\u51FA\u4E0A\u4E0B\u6587\u4E4B\u524D\uFF0C\u83B7\u53D6\u914D\u7F6E\u6587\u4EF6\u7ED3\u679C\u3002\n    profiles = timing_inst.render()\nprint("Printing results of timing profile...")\nprint(profiles)\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"Printing results of timing profile...\nInferType: 6628us [6628us] (46.29%; 46.29%)\nFoldScaleAxis: 7691us [6us] (53.71%; 53.71%)\n        FoldConstant: 7685us [1578us] (53.67%; 99.92%)\n                InferType: 6107us [6107us] (42.65%; 79.47%)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"\u5C06\u5F53\u524D-passcontext-\u4E0E-instrument-\u4E00\u8D77\u4F7F\u7528",children:"\u5C06\u5F53\u524D PassContext \u4E0E Instrument \u4E00\u8D77\u4F7F\u7528"}),"\n",(0,a.jsxs)(e.p,{children:["\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5F53\u524D\u7684 ",(0,a.jsx)(e.code,{children:"PassContext"}),"\uFF0C\u5E76\u901A\u8FC7 ",(0,a.jsx)(e.code,{children:"override_instruments"})," \u65B9\u6CD5\u6CE8\u518C ",(0,a.jsx)(e.code,{children:"PassInstrument"})," \u5B9E\u4F8B\u3002\u6CE8\u610F\uFF0C\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u4E86\u4EFB\u4F55 instrument\uFF0C",(0,a.jsx)(e.code,{children:"override_instruments"})," \u5C06\u6267\u884C ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"})," \u65B9\u6CD5\u3002\u7136\u540E\u5B83\u5207\u6362\u5230\u65B0 instrument\uFF0C\u5E76\u8C03\u7528\u65B0 instrument \u7684 ",(0,a.jsx)(e.code,{children:"enter_pass_ctx"})," \u65B9\u6CD5\u3002\u6709\u5173\u8FD9\u4E9B\u65B9\u6CD5\uFF0C\u53C2\u9605\u4EE5\u4E0B\u90E8\u5206\u548C ",(0,a.jsx)(e.code,{children:"tvm.instrument.pass_instrument()"}),"\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'cur_pass_ctx = tvm.transform.PassContext.current()\ncur_pass_ctx.override_instruments([timing_inst])\nrelay_mod = relay.transform.InferType()(relay_mod)\nrelay_mod = relay.transform.FoldScaleAxis()(relay_mod)\nprofiles = timing_inst.render()\nprint("Printing results of timing profile...")\nprint(profiles)\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"Printing results of timing profile...\nInferType: 6131us [6131us] (44.86%; 44.86%)\nFoldScaleAxis: 7536us [4us] (55.14%; 55.14%)\n        FoldConstant: 7532us [1549us] (55.11%; 99.94%)\n                InferType: 5982us [5982us] (43.77%; 79.43%)\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6CE8\u518C\u7A7A\u5217\u8868\u4EE5\u6E05\u9664\u73B0\u6709 instrument\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u6CE8\u610F\uFF0C",(0,a.jsx)(e.code,{children:"PassTimingInstrument"})," \u7684 ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"})," \u88AB\u8C03\u7528\u4E86\u3002\u914D\u7F6E\u6587\u4EF6\u88AB\u6E05\u9664\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u6253\u5370\u4EFB\u4F55\u5185\u5BB9\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"cur_pass_ctx.override_instruments([])\n# \u53D6\u6D88 .render() \u7684\u6CE8\u91CA\u4EE5\u67E5\u770B\u5982\u4E0B\u8B66\u544A\uFF1A\n# \u8B66\u544A\uFF1A\u6CA1\u6709 Pass \u5206\u6790\uFF0C\u60A8\u662F\u5426\u542F\u7528\u4E86 Pass \u5206\u6790\uFF1F\n# profiles = timing_inst.render()\n"})}),"\n",(0,a.jsx)(e.h2,{id:"\u521B\u5EFA\u81EA\u5B9A\u4E49-instrument-\u7C7B",children:"\u521B\u5EFA\u81EA\u5B9A\u4E49 Instrument \u7C7B"}),"\n",(0,a.jsxs)(e.p,{children:["\u53EF\u4EE5\u4F7F\u7528 ",(0,a.jsx)(e.code,{children:"tvm.instrument.pass_instrument()"})," \u88C5\u9970\u5668\u521B\u5EFA\u81EA\u5B9A\u4E49 instrument \u7C7B\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u521B\u5EFA\u4E00\u4E2A\u5DE5\u5177\u7C7B\uFF08\u8BA1\u7B97\u6BCF\u6B21 Pass \u5F15\u8D77\u7684\u6BCF\u4E2A\u7B97\u5B50\u51FA\u73B0\u6B21\u6570\u7684\u53D8\u5316\uFF09\u3002\u53EF\u4EE5\u5728 Pass \u4E4B\u524D\u548C\u4E4B\u540E\u67E5\u770B ",(0,a.jsx)(e.code,{children:"op.name"})," \u6765\u627E\u5230\u6BCF\u4E2A\u7B97\u5B50\u7684\u540D\u79F0\uFF0C\u4ECE\u800C\u8BA1\u7B97\u5DEE\u5F02\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'@pass_instrument\nclass RelayCallNodeDiffer:\n    def __init__(self):\n        self._op_diff = []\n        # Pass \u53EF\u4EE5\u5D4C\u5957\u3002\n        # \u4F7F\u7528\u5806\u6808\u6765\u786E\u4FDD\u5F97\u5230\u4E4B\u524D/\u4E4B\u540E\u6B63\u786E\u7684 pairs\u3002\n        self._op_cnt_before_stack = []\n\n    def enter_pass_ctx(self):\n        self._op_diff = []\n        self._op_cnt_before_stack = []\n\n    def exit_pass_ctx(self):\n        assert len(self._op_cnt_before_stack) == 0, "The stack is not empty. Something wrong."\n\n    def run_before_pass(self, mod, info):\n        self._op_cnt_before_stack.append((info.name, self._count_nodes(mod)))\n\n    def run_after_pass(self, mod, info):\n        # \u5F39\u51FA\u6700\u65B0\u8BB0\u5F55\u7684 Pass\u3002\n        name_before, op_to_cnt_before = self._op_cnt_before_stack.pop()\n        assert name_before == info.name, "name_before: {}, info.name: {} doesn\'t match".format(\n            name_before, info.name\n        )\n        cur_depth = len(self._op_cnt_before_stack)\n        op_to_cnt_after = self._count_nodes(mod)\n        op_diff = self._diff(op_to_cnt_after, op_to_cnt_before)\n        # \u53EA\u8BB0\u5BFC\u81F4\u5DEE\u5F02\u7684 Pass\u3002\n        if op_diff:\n            self._op_diff.append((cur_depth, info.name, op_diff))\n\n    def get_pass_to_op_diff(self):\n        """\n        return [\n          (depth, pass_name, {op_name: diff_num, ...}), ...\n        ]\n        """\n        return self._op_diff\n\n    @staticmethod\n    def _count_nodes(mod):\n        """Count the number of occurrences of each operator in the module"""\n        ret = {}\n\n        def visit(node):\n            if isinstance(node, relay.expr.Call):\n                if hasattr(node.op, "name"):\n                    op_name = node.op.name\n                else:\n                    # \u67D0\u4E9B CallNode \u53EF\u80FD\u6CA1\u6709\u201C\u540D\u79F0\u201D\uFF0C\u4F8B\u5982 relay.Function\n                    return\n                ret[op_name] = ret.get(op_name, 0) + 1\n\n        relay.analysis.post_order_visit(mod["main"], visit)\n        return ret\n\n    @staticmethod\n    def _diff(d_after, d_before):\n        """Calculate the difference of two dictionary along their keys.\n        The result is values in d_after minus values in d_before.\n        """\n        ret = {}\n        key_after, key_before = set(d_after), set(d_before)\n        for k in key_before & key_after:\n            tmp = d_after[k] - d_before[k]\n            if tmp:\n                ret[k] = d_after[k] - d_before[k]\n        for k in key_after - key_before:\n            ret[k] = d_after[k]\n        for k in key_before - key_after:\n            ret[k] = -d_before[k]\n        return ret\n'})}),"\n",(0,a.jsx)(e.h2,{id:"\u5E94\u7528-pass-\u548C\u591A\u4E2A-instrument-\u7C7B",children:"\u5E94\u7528 Pass \u548C\u591A\u4E2A Instrument \u7C7B"}),"\n",(0,a.jsxs)(e.p,{children:["\u53EF\u4EE5\u5728 ",(0,a.jsx)(e.code,{children:"PassContext"})," \u4E2D\u4F7F\u7528\u591A\u4E2A instrument \u7C7B\u3002\u4F46\u6CE8\u610F\uFF0Cinstrument \u65B9\u6CD5\u662F\u6309 ",(0,a.jsx)(e.code,{children:"instruments"})," \u53C2\u6570\u7684\u987A\u5E8F\u6267\u884C\u7684\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u50CF ",(0,a.jsx)(e.code,{children:"PassTimingInstrument"})," \u8FD9\u6837\u7684 instrument \u7C7B\uFF0C\u4E0D\u53EF\u907F\u514D\u5730\u8981\u5C06\u5176\u4ED6 instrument \u7C7B\u7684\u6267\u884C\u65F6\u95F4\u8BA1\u5165\u6700\u7EC8\u7684\u5206\u6790\u7ED3\u679C\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'call_node_inst = RelayCallNodeDiffer()\ndesired_layouts = {\n    "nn.conv2d": ["NHWC", "HWIO"],\n}\npass_seq = tvm.transform.Sequential(\n    [\n        relay.transform.FoldConstant(),\n        relay.transform.ConvertLayout(desired_layouts),\n        relay.transform.FoldConstant(),\n    ]\n)\nrelay_mod["main"] = bind_params_by_name(relay_mod["main"], relay_params)\n# timing_inst \u653E\u5728 call_node_inst \u4E4B\u540E\u3002\n# \u6240\u4EE5 `call_node.inst.run_after_pass()` \u7684\u6267\u884C\u65F6\u95F4\u4E5F\u7B97\u5728\u5185\u3002\nwith tvm.transform.PassContext(opt_level=3, instruments=[call_node_inst, timing_inst]):\n    relay_mod = pass_seq(relay_mod)\n    profiles = timing_inst.render()\n# \u53D6\u6D88\u6CE8\u91CA\u4E0B\u4E00\u884C\u4EE5\u67E5\u770B\u65F6\u5E8F\u914D\u7F6E\u6587\u4EF6\u7ED3\u679C\u3002\n# print(profiles)\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u53EF\u4EE5\u770B\u5230\u6BCF\u4E2A\u64CD\u4F5C\u7C7B\u578B\u589E\u52A0/\u51CF\u5C11\u4E86\u591A\u5C11 CallNode\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'from pprint import pprint\n\nprint("Printing the change in number of occurrences of each operator caused by each pass...")\npprint(call_node_inst.get_pass_to_op_diff())\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"Printing the change in number of occurrences of each operator caused by each pass...\n[(1, 'CanonicalizeOps', {'add': 1, 'nn.bias_add': -1}),\n (1, 'ConvertLayout', {'expand_dims': 1, 'layout_transform': 23}),\n (1, 'FoldConstant', {'expand_dims': -1, 'layout_transform': -21}),\n (0, 'sequential', {'add': 1, 'layout_transform': 2, 'nn.bias_add': -1})]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"\u5F02\u5E38\u5904\u7406",children:"\u5F02\u5E38\u5904\u7406"}),"\n",(0,a.jsxs)(e.p,{children:["\u4EE5\u4E0B\u6F14\u793A\u4E86 ",(0,a.jsx)(e.code,{children:"PassInstrument"})," \u7684\u65B9\u6CD5\u53D1\u751F\u5F02\u5E38\u7684\u8BE6\u7EC6\u60C5\u51B5\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5B9A\u4E49\u5728\u8FDB\u5165/\u9000\u51FA ",(0,a.jsx)(e.code,{children:"PassContext"})," \u4E2D\u5F15\u53D1\u5F02\u5E38\u7684 ",(0,a.jsx)(e.code,{children:"PassInstrument"})," \u7C7B\uFF1A"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-plain",children:'class PassExampleBase:\n    def __init__(self, name):\n        self._name = name\n\n    def enter_pass_ctx(self):\n        print(self._name, "enter_pass_ctx")\n\n    def exit_pass_ctx(self):\n        print(self._name, "exit_pass_ctx")\n\n    def should_run(self, mod, info):\n        print(self._name, "should_run")\n        return True\n\n    def run_before_pass(self, mod, pass_info):\n        print(self._name, "run_before_pass")\n\n    def run_after_pass(self, mod, pass_info):\n        print(self._name, "run_after_pass")\n\n@pass_instrument\nclass PassFine(PassExampleBase):\n    pass\n\n@pass_instrument\nclass PassBadEnterCtx(PassExampleBase):\n    def enter_pass_ctx(self):\n        print(self._name, "bad enter_pass_ctx!!!")\n        raise ValueError("{} bad enter_pass_ctx".format(self._name))\n\n@pass_instrument\nclass PassBadExitCtx(PassExampleBase):\n    def exit_pass_ctx(self):\n        print(self._name, "bad exit_pass_ctx!!!")\n        raise ValueError("{} bad exit_pass_ctx".format(self._name))\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u82E5 ",(0,a.jsx)(e.code,{children:"enter_pass_ctx"})," \u53D1\u751F\u5F02\u5E38\uFF0C",(0,a.jsx)(e.code,{children:"PassContext"})," \u5C06\u7981\u7528 pass instrumentation\u3002\u5B83\u5C06\u8FD0\u884C\u6BCF\u4E2A\u6210\u529F\u5B8C\u6210 ",(0,a.jsx)(e.code,{children:"enter_pass_ctx"})," \u7684 PassInstrument \u7684 ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"}),"\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u4E0B\u9762\u7684\u4F8B\u5B50\u53EF\u4EE5\u770B\u5230  ",(0,a.jsx)(e.em,{children:"PassFine_0"})," \u7684 ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"})," \u5728\u5F02\u5E38\u540E\u6267\u884C\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'demo_ctx = tvm.transform.PassContext(\n    instruments=[\n        PassFine("PassFine_0"),\n        PassBadEnterCtx("PassBadEnterCtx"),\n        PassFine("PassFine_1"),\n    ]\n)\ntry:\n    with demo_ctx:\n        relay_mod = relay.transform.InferType()(relay_mod)\nexcept ValueError as ex:\n    print("Catching", str(ex).split("\\n")[-1])\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"PassFine_0 enter_pass_ctx\nPassBadEnterCtx bad enter_pass_ctx!!!\nPassFine_0 exit_pass_ctx\nCatching ValueError: PassBadEnterCtx bad enter_pass_ctx\n"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"PassInstrument"})," \u5B9E\u4F8B\u4E2D\u7684\u5F02\u5E38\u4F1A\u5BFC\u81F4\u5F53\u524D\u7684 ",(0,a.jsx)(e.code,{children:"PassContext"})," \u6240\u6709 instrument \u88AB\u6E05\u9664\uFF0C\u56E0\u6B64\u8C03\u7528 ",(0,a.jsx)(e.code,{children:"override_instruments"})," \u65F6\u4E0D\u4F1A\u6253\u5370\u4EFB\u4F55\u5185\u5BB9\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"demo_ctx.override_instruments([])  # \u6CA1\u6709\u6253\u5370 PassFine_0 exit_pass_ctx....\u7B49\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u82E5 ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"})," \u53D1\u751F\u5F02\u5E38\uFF0C\u5219\u7981\u7528 pass  instrument\uFF0C\u7136\u540E\u4F20\u64AD\u5F02\u5E38\u3002\u8FD9\u610F\u5473\u7740 ",(0,a.jsx)(e.code,{children:"PassInstrument"})," \u5728\u629B\u51FA\u5F02\u5E38\u4E4B\u540E\u6CE8\u518C\u7684\u5B9E\u4F8B\u4E0D\u4F1A\u6267\u884C ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"}),"\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'demo_ctx = tvm.transform.PassContext(\n    instruments=[\n        PassFine("PassFine_0"),\n        PassBadExitCtx("PassBadExitCtx"),\n        PassFine("PassFine_1"),\n    ]\n)\ntry:\n    # PassFine_1 \u6267\u884C enter_pass_ctx\uFF0C\u4F46\u4E0D\u6267\u884C exit_pass_ctx\u3002\n    with demo_ctx:\n        relay_mod = relay.transform.InferType()(relay_mod)\nexcept ValueError as ex:\n    print("Catching", str(ex).split("\\n")[-1])\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"PassFine_0 enter_pass_ctx\nPassBadExitCtx enter_pass_ctx\nPassFine_1 enter_pass_ctx\nPassFine_0 should_run\nPassBadExitCtx should_run\nPassFine_1 should_run\nPassFine_0 run_before_pass\nPassBadExitCtx run_before_pass\nPassFine_1 run_before_pass\nPassFine_0 run_after_pass\nPassBadExitCtx run_after_pass\nPassFine_1 run_after_pass\nPassFine_0 exit_pass_ctx\nPassBadExitCtx bad exit_pass_ctx!!!\nCatching ValueError: PassBadExitCtx bad exit_pass_ctx\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u4EE5 ",(0,a.jsx)(e.code,{children:"run_before_pass"}),"\u4E3A\u4F8B\uFF1A"]}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"should_run"}),"\u3001",(0,a.jsx)(e.code,{children:"run_before_pass"})," \u548C ",(0,a.jsx)(e.code,{children:"run_after_pass"})," \u53D1\u751F\u7684\u5F02\u5E38\u6CA1\u6709\u660E\u786E\u5904\u7406\uFF0C\u7528\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\uFF08",(0,a.jsx)(e.code,{children:"with"})," \u8BED\u6CD5\uFF09\u5B89\u5168\u9000\u51FA ",(0,a.jsx)(e.code,{children:"PassContext"}),"\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'@pass_instrument\nclass PassBadRunBefore(PassExampleBase):\n    def run_before_pass(self, mod, pass_info):\n        print(self._name, "bad run_before_pass!!!")\n        raise ValueError("{} bad run_before_pass".format(self._name))\n\ndemo_ctx = tvm.transform.PassContext(\n    instruments=[\n        PassFine("PassFine_0"),\n        PassBadRunBefore("PassBadRunBefore"),\n        PassFine("PassFine_1"),\n    ]\n)\ntry:\n    # \u6240\u6709\u7684 exit_pass_ctx \u90FD\u4F1A\u88AB\u8C03\u7528\u3002\n    with demo_ctx:\n        relay_mod = relay.transform.InferType()(relay_mod)\nexcept ValueError as ex:\n    print("Catching", str(ex).split("\\n")[-1])\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"PassFine_0 enter_pass_ctx\nPassBadRunBefore enter_pass_ctx\nPassFine_1 enter_pass_ctx\nPassFine_0 should_run\nPassBadRunBefore should_run\nPassFine_1 should_run\nPassFine_0 run_before_pass\nPassBadRunBefore bad run_before_pass!!!\nPassFine_0 exit_pass_ctx\nPassBadRunBefore exit_pass_ctx\nPassFine_1 exit_pass_ctx\nCatching ValueError: PassBadRunBefore bad run_before_pass\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u6CE8\u610F\uFF0Cpass instrumentation \u672A\u7981\u7528\u3002\u6240\u4EE5\u82E5\u8C03\u7528 ",(0,a.jsx)(e.code,{children:"override_instruments"}),"\uFF0C",(0,a.jsx)(e.code,{children:"exit_pass_ctx"})," \u5148\u524D\u6CE8\u518C\u7684 ",(0,a.jsx)(e.code,{children:"PassInstrument"})," \u5C06\u88AB\u8C03\u7528\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"demo_ctx.override_instruments([])\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"PassFine_0 exit_pass_ctx\nPassBadRunBefore exit_pass_ctx\nPassFine_1 exit_pass_ctx\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u82E5\u4E0D\u7528 ",(0,a.jsx)(e.code,{children:"with"})," \u8BED\u6CD5\u5305\u88C5 pass \u6267\u884C\uFF0C\u5219\u4E0D\u4F1A\u8C03\u7528  ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"}),"\u3002\u7528\u5F53\u524D\u7684 ",(0,a.jsx)(e.code,{children:"PassContext"}),"\uFF1A"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'cur_pass_ctx = tvm.transform.PassContext.current()\ncur_pass_ctx.override_instruments(\n    [\n        PassFine("PassFine_0"),\n        PassBadRunBefore("PassBadRunBefore"),\n        PassFine("PassFine_1"),\n    ]\n)\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"PassFine_0 enter_pass_ctx\nPassBadRunBefore enter_pass_ctx\nPassFine_1 enter_pass_ctx\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u7136\u540E\u8C03\u7528 Pass\u3002\u5F02\u5E38\u540E ",(0,a.jsx)(e.code,{children:"exit_pass_ctx"})," \u4E0D\u6267\u884C\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'try:\n    # No ``exit_pass_ctx`` got executed.\n    relay_mod = relay.transform.InferType()(relay_mod)\nexcept ValueError as ex:\n    print("Catching", str(ex).split("\\n")[-1])\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"PassFine_0 should_run\nPassBadRunBefore should_run\nPassFine_1 should_run\nPassFine_0 run_before_pass\nPassBadRunBefore bad run_before_pass!!!\nCatching ValueError: PassBadRunBefore bad run_before_pass\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6E05\u9664 instrument\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"cur_pass_ctx.override_instruments([])\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"PassFine_0 exit_pass_ctx\nPassBadRunBefore exit_pass_ctx\nPassFine_1 exit_pass_ctx\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/d0a1817b910da958b41d88afe4d4952d/use_pass_instrument.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Ause_pass_instrument.py"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/f6ff0fbc61d45d2cc0f53ebbf11a5fb5/use_pass_instrument.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Ause_pass_instrument.ipynb"})})]})}function f(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},21494:function(n,e,t){t.d(e,{Z:function(){return _},a:function(){return r}});var s=t(39546);let a={},o=s.createContext(a);function r(n){let e=s.useContext(o);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function _(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);