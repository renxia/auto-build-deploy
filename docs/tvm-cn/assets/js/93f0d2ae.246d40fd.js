"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["57354"],{1681:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>o,metadata:()=>r,assets:()=>l,toc:()=>d,contentTitle:()=>i});var r=JSON.parse('{"id":"how_to/autotune/autotuning_mobile","title":"\u4E3A Mobile GPU \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/how_to/autotune/05-autotuning_mobile.md","sourceDirName":"how_to/autotune","slug":"/how_to/autotune/autotuning_mobile","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/autotune/autotuning_mobile","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/how_to/autotune/05-autotuning_mobile.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":5,"frontMatter":{"title":"\u4E3A Mobile GPU \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC"},"sidebar":"tutorialSidebar","previous":{"title":"\u4E3A ARM CPU \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/autotune/autotuning_arm"},"next":{"title":"\u4F7F\u7528 AutoScheduler \u8FDB\u884C\u65E0\u6A21\u677F\u8C03\u5EA6","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/autoscheduler/"}}'),s=t("74132"),a=t("21494");let o={title:"\u4E3A Mobile GPU \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC"},i="\u4E3A Mobile GPU \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC",l={},d=[{value:"\u5B89\u88C5\u4F9D\u8D56",id:"\u5B89\u88C5\u4F9D\u8D56",level:2},{value:"\u5B9A\u4E49\u7F51\u7EDC",id:"\u5B9A\u4E49\u7F51\u7EDC",level:2},{value:"\u542F\u52A8 RPC Tracker",id:"\u542F\u52A8-rpc-tracker",level:2},{value:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230 RPC Tracker",id:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230-rpc-tracker",level:2},{value:"\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879",id:"\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879",level:2},{value:"\u5982\u4F55\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879",id:"\u5982\u4F55\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879",level:4},{value:"\u5F00\u59CB\u8C03\u4F18",id:"\u5F00\u59CB\u8C03\u4F18",level:2},{value:"\u6837\u672C\u8F93\u51FA",id:"\u6837\u672C\u8F93\u51FA",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\u4E3A-mobile-gpu-\u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC",children:"\u4E3A Mobile GPU \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["\u5355\u51FB ",(0,s.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/tune_with_autotvm/tune_relay_mobile_gpu.html#sphx-glr-download-how-to-tune-with-autotvm-tune-relay-mobile-gpu-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,s.jsx)(n.a,{href:"https://github.com/merrymercy",children:"Lianmin Zheng"}),", ",(0,s.jsx)(n.a,{href:"https://github.com/eqy",children:"Eddie Yan"})]}),"\n",(0,s.jsx)(n.p,{children:"\u9488\u5BF9\u7279\u5B9A\u8BBE\u5907\u7684\u81EA\u52A8\u8C03\u4F18\u5BF9\u4E8E\u83B7\u5F97\u6700\u4F73\u6027\u80FD\u81F3\u5173\u91CD\u8981\u3002\u672C\u6587\u4ECB\u7ECD\u5982\u4F55\u8C03\u4F18\u6574\u4E2A\u5377\u79EF\u7F51\u7EDC\u3002"}),"\n",(0,s.jsx)(n.p,{children:"TVM \u4E2D Mobile GPU \u7684\u7B97\u5B50\u5B9E\u73B0\u662F\u4EE5 template \u5F62\u5F0F\u7F16\u5199\u7684\u3002\u8BE5 template \u6709\u8BB8\u591A\u53EF\u8C03\u53C2\u6570\uFF08tile \u56E0\u5B50\uFF0Cvectorization\uFF0Cunrolling \u7B49\uFF09\u3002\u5BF9\u795E\u7ECF\u7F51\u7EDC\u4E2D\u7684\u6240\u6709\u5377\u79EF\u3001\u6DF1\u5EA6\u5377\u79EF\u548C\u5BC6\u96C6\u7B97\u5B50\u8C03\u4F18\u540E\uFF0C\u4F1A\u751F\u6210\u4E00\u4E2A\u65E5\u5FD7\u6587\u4EF6\uFF0C\u5B83\u5B58\u50A8\u6240\u6709\u5FC5\u9700\u7B97\u5B50\u7684\u6700\u4F73\u53C2\u6570\u503C\u3002\u5F53 TVM \u7F16\u8BD1\u5668\u7F16\u8BD1\u8FD9\u4E9B\u7B97\u5B50\u65F6\uFF0C\u5C06\u67E5\u8BE2\u6B64\u65E5\u5FD7\u6587\u4EF6\u4EE5\u83B7\u53D6\u6700\u4F73\u53C2\u6570\u503C\u3002"}),"\n",(0,s.jsxs)(n.p,{children:["\u6211\u4EEC\u8FD8\u53D1\u5E03\u4E86\u4E00\u4E9B arm \u8BBE\u5907\u7684\u9884\u8C03\u53C2\u6570\uFF0C\u53EF\u4EE5\u524D\u5F80 ",(0,s.jsx)(n.a,{href:"https://github.com/apache/tvm/wiki/Benchmark#mobile-gpu",children:"Mobile GPU Benchmark"})," \u67E5\u770B\u8BE6\u7EC6\u4FE1\u606F\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u6CE8\u610F\uFF0C\u672C\u6559\u7A0B\u65E0\u6CD5\u5728 Windows \u6216\u6700\u65B0\u7248\u672C\u7684 macOS \u4E0A\u8FD0\u884C\u3002\u82E5\u8981\u8FD0\u884C\uFF0C\u9700\u8981\u5C06\u672C\u6559\u7A0B\u7684\u4E3B\u4F53\u5305\u88C5\u5728 ",(0,s.jsx)(n.code,{children:'if __name__ == "__main__":'}),"  \u5757\u4E2D\u3002"]}),"\n",(0,s.jsx)(n.h2,{id:"\u5B89\u88C5\u4F9D\u8D56",children:"\u5B89\u88C5\u4F9D\u8D56"}),"\n",(0,s.jsx)(n.p,{children:"\u8981\u5728 TVM \u4E2D\u4F7F\u7528 autotvm \u5305\uFF0C\u9700\u8981\u5B89\u88C5\u989D\u5916\u7684\u4F9D\u8D56\uFF08\u5982\u679C\u7528\u7684\u662F Python2\uFF0C\u8BF7\u5C06\u300C3\u300D\u66F4\u6539\u4E3A\u300C2\u300D\uFF09\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip3 install --user psutil xgboost tornado cloudpickle\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u4E3A\u4E86\u8BA9 TVM \u5728\u8C03\u4F18\u8FC7\u7A0B\u4E2D\u8FD0\u884C\u66F4\u5FEB\uFF0C\u63A8\u8350\u4F7F\u7528 Cython \u4F5C\u4E3A TVM \u7684 FFI\u3002\u5728 TVM \u7684\u6839\u76EE\u5F55\u4E0B\uFF0C\u6267\u884C\u5982\u4E0B\u547D\u4EE4\uFF1A\uFF08\u82E5\u4F7F\u7528 Python2\uFF0C\u5C06\u300C3\u300D\u6539\u4E3A\u300C2\u300D\uFF09\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip3 install --user cython\nsudo make cython3\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u5728 Python \u4EE3\u7801\u4E2D\u5BFC\u5165\u5305\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import os\nimport numpy as np\n\nimport tvm\nfrom tvm import relay, autotvm\nimport tvm.relay.testing\nfrom tvm.autotvm.tuner import XGBTuner, GATuner, RandomTuner, GridSearchTuner\nfrom tvm.contrib.utils import tempdir\nimport tvm.contrib.graph_executor as runtime\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u5B9A\u4E49\u7F51\u7EDC",children:"\u5B9A\u4E49\u7F51\u7EDC"}),"\n",(0,s.jsxs)(n.p,{children:["\u9996\u5148\u8981\u5728 Relay \u524D\u7AEF API \u4E2D\u5B9A\u4E49\u7F51\u7EDC\uFF0C\u53EF\u4EE5\u4ECE ",(0,s.jsx)(n.code,{children:"relay.testing"})," \u52A0\u8F7D\u4E00\u4E9B\u9884\u5B9A\u4E49\u7684\u7F51\u7EDC\uFF0C\u4E5F\u53EF\u4EE5\u4ECE MXNet\u3001ONNX \u548C TensorFlow \u52A0\u8F7D\u6A21\u578B\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def get_network(name, batch_size):\n    """\u83B7\u53D6\u7F51\u7EDC\u7684\u7B26\u53F7\u5B9A\u4E49\u548C\u968F\u673A\u6743\u91CD"""\n    input_shape = (batch_size, 3, 224, 224)\n    output_shape = (batch_size, 1000)\n\n    if "resnet" in name:\n        n_layer = int(name.split("-")[1])\n        mod, params = relay.testing.resnet.get_workload(\n            num_layers=n_layer, batch_size=batch_size, dtype=dtype\n        )\n    elif "vgg" in name:\n        n_layer = int(name.split("-")[1])\n        mod, params = relay.testing.vgg.get_workload(\n            num_layers=n_layer, batch_size=batch_size, dtype=dtype\n        )\n    elif name == "mobilenet":\n        mod, params = relay.testing.mobilenet.get_workload(batch_size=batch_size, dtype=dtype)\n    elif name == "squeezenet_v1.1":\n        mod, params = relay.testing.squeezenet.get_workload(\n            batch_size=batch_size, version="1.1", dtype=dtype\n        )\n    elif name == "inception_v3":\n        input_shape = (batch_size, 3, 299, 299)\n        mod, params = relay.testing.inception_v3.get_workload(batch_size=batch_size, dtype=dtype)\n    elif name == "mxnet":\n        # MXNet \u6A21\u578B\u7684\u793A\u4F8B\n        from mxnet.gluon.model_zoo.vision import get_model\n\n        block = get_model("resnet18_v1", pretrained=True)\n        mod, params = relay.frontend.from_mxnet(block, shape={"data": input_shape}, dtype=dtype)\n        net = mod["main"]\n        net = relay.Function(\n            net.params, relay.nn.softmax(net.body), None, net.type_params, net.attrs\n        )\n        mod = tvm.IRModule.from_expr(net)\n    else:\n        raise ValueError("Unsupported network: " + name)\n\n    return mod, params, input_shape, output_shape\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\u542F\u52A8-rpc-tracker",children:"\u542F\u52A8 RPC Tracker"}),"\n",(0,s.jsx)(n.p,{children:"TVM \u4F7F\u7528 RPC session \u4E0E ARM \u677F\u8FDB\u884C\u901A\u4FE1\uFF0C\u5728\u8C03\u4F18\u671F\u95F4\uFF0C\u8C03\u4F18\u5668\u4F1A\u5C06\u751F\u6210\u7684\u4EE3\u7801\u53D1\u9001\u5230\u677F\u4E0A\u5E76\u6D4B\u8BD5\u677F\u4E0A\u4EE3\u7801\u7684\u901F\u5EA6\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u4E3A\u4E86\u52A0\u901F\u8C03\u4F18\uFF0CTVM \u4F7F\u7528 RPC Tracker\uFF08\u96C6\u4E2D\u7684\u63A7\u5236\u5668\u8282\u70B9\uFF09\u6765\u7BA1\u7406\u5206\u5E03\u5F0F\u8BBE\u5907\u3002\u4F8B\u5982\uFF0C\u82E5\u6709 10 \u90E8\u624B\u673A\uFF0C\u53EF\u4EE5\u5C06\u5B83\u4EEC\u5168\u90E8\u6CE8\u518C\u5230 Tracker\uFF0C\u5E76\u884C\u8FD0\u884C 10 \u6B21\u6D4B\u8BD5\uFF0C\u4ECE\u800C\u52A0\u5FEB\u8C03\u4F18\u8FC7\u7A0B\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u5728\u6574\u4E2A\u8C03\u4F18\u8FC7\u7A0B\u4E2D\u90FD\u9700\u8981 tracker\uFF0C\u56E0\u6B64\u9700\u8981\u4E3A\u6B64\u547D\u4EE4\u6253\u5F00\u4E00\u4E2A\u65B0\u7EC8\u7AEF\uFF0C\u5728\u4E3B\u673A\u4E0A\u8FD0\u884C\u5982\u4E0B\u547D\u4EE4\u542F\u52A8 RPC tracker\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python -m tvm.exec.rpc_tracker --host=0.0.0.0 --port=9190\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u9884\u671F\u8F93\u51FA\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"INFO:RPCTracker:bind to 0.0.0.0:9190\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230-rpc-tracker",children:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230 RPC Tracker"}),"\n",(0,s.jsx)(n.p,{children:"\u63A5\u4E0B\u6765\u628A\u8BBE\u5907\u6CE8\u518C\u5230 Tracker\u3002\u7B2C\u4E00\u6B65\u662F\u4E3A ARM \u8BBE\u5907\u6784\u5EFA TVM runtime \u3002"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u5BF9\u4E8E Linux\uFF1A\u6309\u7167 ",(0,s.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/deploy_models/deploy_model_on_rasp.html#build-tvm-runtime-on-device",children:"\u5728\u8BBE\u5907\u4E0A\u6784\u5EFA TVM Runtime"})," \u6559\u7A0B\u64CD\u4F5C\uFF0C\u7136\u540E\u5C06\u8BBE\u5907\u6CE8\u518C\u5230 Tracker"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"  python -m tvm.exec.rpc_server --tracker=[HOST_IP]:9190 --key=rk3399\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uFF08\u5C06 ",(0,s.jsx)(n.code,{children:"[HOST_IP]"})," \u66FF\u6362\u4E3A\u4F60\u7684\u4E3B\u673A\u7684 IP \u5730\u5740\uFF09"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u5BF9\u4E8E Android\uFF1A\u6309\u7167\u6B64 ",(0,s.jsx)(n.a,{href:"https://github.com/apache/tvm/tree/main/apps/android_rpc",children:"\u8BF4\u660E"})," \u5728 Android \u8BBE\u5907\u4E0A\u5B89\u88C5 TVM RPC APK\uFF0C\u786E\u4FDD\u53EF\u4EE5\u901A\u8FC7 Android rpc \u6D4B\u8BD5\u3002\u5728\u8C03\u4F18\u671F\u95F4\uFF0C\u6253\u5F00\u624B\u673A\u5F00\u53D1\u8005\u9009\u9879\u5E76\u52FE\u9009\u300C\u5728\u66F4\u6539\u671F\u95F4\u4FDD\u6301\u5C4F\u5E55\u5524\u9192\u300D\uFF0C\u4E3A\u624B\u673A\u63A5\u901A\u7535\u6E90\u3002"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u6CE8\u518C\u8BBE\u5907\u540E\uFF0C\u901A\u8FC7\u67E5\u8BE2 rpc_tracker \u6765\u786E\u8BA4\u662F\u5426\u6CE8\u518C\u6210\u529F"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python -m tvm.exec.query_rpc_tracker --host=0.0.0.0 --port=9190\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u4F8B\u5982\uFF0C\u5982\u679C\u6709 2 \u53F0\u534E\u4E3A mate10 pro\u300111 \u53F0\u6811\u8393\u6D3E 3B \u548C 2 \u53F0 rk3399\uFF0C\u5219\u8F93\u51FA\u662F"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"Queue Status\n----------------------------------\nkey          total  free  pending\n----------------------------------\nmate10pro    2      2     0\nrk3399       2      2     0\nrpi3b        11     11    0\n----------------------------------\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u5C06\u591A\u4E2A\u8BBE\u5907\u6CE8\u518C\u5230 tracker\uFF0C\u4ECE\u800C\u52A0\u5FEB\u8C03\u4F18\u6D4B\u8BD5\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879",children:"\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879"}),"\n",(0,s.jsxs)(n.p,{children:["\u5728\u8C03\u4F18\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u8FDB\u884C\u914D\u7F6E\u3002\u8FD9\u91CC\u4EE5 RK3399 \u677F\u4E3A\u4F8B\u3002\u6839\u636E\u81EA\u5DF1\u7684\u8BBE\u5907\u4FEE\u6539 target \u548C device_key\u3002\u82E5\u7528 Android \u624B\u673A\uFF0C\u8BF7\u5C06 ",(0,s.jsx)(n.code,{children:"use_android"})," \u8BBE\u7F6E\u4E3A True\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'#### \u8BBE\u5907\u914D\u7F6E ####\n# \u5C06 "aarch64-linux-gnu" \u66FF\u6362\u4E3A\u4F60\u7684\u677F\u5B50\u7684\u6B63\u786E target\u3002\n# \u6B64 target \u7528\u4E8E\u4EA4\u53C9\u7F16\u8BD1\u3002\u53EF\u4EE5\u901A\u8FC7\uFF1Acode:`gcc -v` \u6765\u67E5\u8BE2\u3002\ntarget = tvm.target.Target("opencl -device=mali", host="llvm -mtriple=aarch64-linux-gnu")\n\n# \u6839\u636E\u8BBE\u5907\u66FF\u6362 device_key \u7684\u503C\ndevice_key = "rk3399"\n\n# \u82E5\u4F7F\u7528 Android \u624B\u673A\uFF0C\u8BBE\u7F6E use_android \u4E3A True\nuse_android = False\n\n#### \u8C03\u4F18\u9009\u9879 ####\nnetwork = "resnet-18"\nlog_file = "%s.%s.log" % (device_key, network)\ndtype = "float32"\n\ntuning_option = {\n    "log_filename": log_file,\n    "tuner": "xgb",\n    "n_trial": 1000,\n    "early_stopping": 450,\n    "measure_option": autotvm.measure_option(\n        builder=autotvm.LocalBuilder(build_func="ndk" if use_android else "default"),\n        runner=autotvm.RPCRunner(\n            device_key,\n            host="127.0.0.1",\n            port=9190,\n            number=10,\n            timeout=5,\n        ),\n    ),\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.h4,{id:"\u5982\u4F55\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879",children:"\u5982\u4F55\u8BBE\u7F6E\u8C03\u4F18\u9009\u9879"}),(0,s.jsxs)(n.p,{children:["\u901A\u5E38\uFF0C\u63D0\u4F9B\u7684\u9ED8\u8BA4\u503C\u6548\u679C\u5C31\u4E0D\u9519\u3002\u5982\u679C\u8C03\u4F18\u65F6\u95F4\u5145\u8DB3\uFF0C\u53EF\u4EE5\u628A ",(0,s.jsx)(n.code,{children:"n_trial"}),"\uFF0C",(0,s.jsx)(n.code,{children:"early_stopping"})," \u8BBE\u7F6E\u5F97\u5927\u4E00\u4E9B\uFF0C\u8BA9\u8C03\u4F18\u8FD0\u884C\u7684\u65F6\u95F4\u66F4\u957F\u3002\u82E5\u8BBE\u5907\u8FD0\u884C\u901F\u5EA6\u975E\u5E38\u6162\uFF0C\u6216\u8005 conv2d \u7B97\u5B50\u6709\u5F88\u591A GFLOP\uFF0C\u628A timeout \u8BBE\u7F6E\u5927\u4E00\u70B9\u3002"]})]}),"\n",(0,s.jsx)(n.h2,{id:"\u5F00\u59CB\u8C03\u4F18",children:"\u5F00\u59CB\u8C03\u4F18"}),"\n",(0,s.jsx)(n.p,{children:"\u4E0B\u9762\u5F00\u59CB\u4ECE\u7F51\u7EDC\u4E2D\u63D0\u53D6\u8C03\u4F18\u4EFB\u52A1\uFF0C\u5E76\u5F00\u59CB\u8C03\u4F18\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u63D0\u4F9B\u4E00\u4E2A\u7B80\u5355\u7684\u5B9E\u7528\u51FD\u6570\u3002\u5B83\u53EA\u662F\u4E00\u4E2A\u521D\u59CB\u5B9E\u73B0\uFF0C\u6309\u987A\u5E8F\u5BF9\u4EFB\u52A1\u5217\u8868\u8FDB\u884C\u8C03\u4F18\u3002\u672A\u6765\u4F1A\u5F15\u5165\u66F4\u590D\u6742\u7684\u8C03\u4F18 scheduler\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u53EF\u8DF3\u8FC7\u6B64\u51FD\u6570\u7684\u5B9E\u73B0\u3002\ndef tune_tasks(\n    tasks,\n    measure_option,\n    tuner="xgb",\n    n_trial=1000,\n    early_stopping=None,\n    log_filename="tuning.log",\n    use_transfer_learning=True,\n):\n    # \u521B\u5EFA tmp \u65E5\u5FD7\u6587\u4EF6\n    tmp_log_file = log_filename + ".tmp"\n    if os.path.exists(tmp_log_file):\n        os.remove(tmp_log_file)\n\n    for i, tsk in enumerate(reversed(tasks)):\n        prefix = "[Task %2d/%2d] " % (i + 1, len(tasks))\n\n        # \u521B\u5EFA\u8C03\u4F18\u5668\n        if tuner == "xgb" or tuner == "xgb-rank":\n            tuner_obj = XGBTuner(tsk, loss_type="rank")\n        elif tuner == "ga":\n            tuner_obj = GATuner(tsk, pop_size=50)\n        elif tuner == "random":\n            tuner_obj = RandomTuner(tsk)\n        elif tuner == "gridsearch":\n            tuner_obj = GridSearchTuner(tsk)\n        else:\n            raise ValueError("Invalid tuner: " + tuner)\n\n        if use_transfer_learning:\n            if os.path.isfile(tmp_log_file):\n                tuner_obj.load_history(autotvm.record.load_from_file(tmp_log_file))\n\n        # \u5F00\u59CB\u8C03\u4F18\n        tsk_trial = min(n_trial, len(tsk.config_space))\n        tuner_obj.tune(\n            n_trial=tsk_trial,\n            early_stopping=early_stopping,\n            measure_option=measure_option,\n            callbacks=[\n                autotvm.callback.progress_bar(tsk_trial, prefix=prefix),\n                autotvm.callback.log_to_file(tmp_log_file),\n            ],\n        )\n\n    # \u9009\u62E9\u6700\u4F73\u8BB0\u5F55\u5230\u7F13\u5B58\u6587\u4EF6\n    autotvm.record.pick_best(tmp_log_file, log_filename)\n    os.remove(tmp_log_file)\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u6700\u540E\u542F\u52A8\u8C03\u4F18\u4EFB\u52A1\uFF0C\u5E76\u8BC4\u4F30\u7AEF\u5230\u7AEF\u6027\u80FD\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def tune_and_evaluate(tuning_opt):\n    # \u4ECE Relay \u7A0B\u5E8F\u4E2D\u63D0\u53D6\u5DE5\u4F5C\u8D1F\u8F7D\n    print("Extract tasks...")\n    mod, params, input_shape, _ = get_network(network, batch_size=1)\n    tasks = autotvm.task.extract_from_program(\n        mod["main"],\n        target=target,\n        params=params,\n        ops=(relay.op.get("nn.conv2d"),),\n    )\n\n    # \u8FD0\u884C\u8C03\u4F18\u4EFB\u52A1\n    print("Tuning...")\n    tune_tasks(tasks, **tuning_opt)\n\n    # \u7F16\u8BD1\u5177\u6709\u5386\u53F2\u6700\u4F73\u8BB0\u5F55\u7684\u5185\u6838\n    with autotvm.apply_history_best(log_file):\n        print("Compile...")\n        with tvm.transform.PassContext(opt_level=3):\n            lib = relay.build_module.build(mod, target=target, params=params)\n        # \u5BFC\u51FA\u5E93\n        tmp = tempdir()\n        if use_android:\n            from tvm.contrib import ndk\n\n            filename = "net.so"\n            lib.export_library(tmp.relpath(filename), ndk.create_shared)\n        else:\n            filename = "net.tar"\n            lib.export_library(tmp.relpath(filename))\n\n        # \u4E0A\u4F20\u6A21\u5757\u5230\u8BBE\u5907\n        print("Upload...")\n        remote = autotvm.measure.request_remote(device_key, "127.0.0.1", 9190, timeout=10000)\n        remote.upload(tmp.relpath(filename))\n        rlib = remote.load_module(filename)\n\n        # \u4E0A\u4F20\u53C2\u6570\u5230\u8BBE\u5907\n        dev = remote.device(str(target), 0)\n        module = runtime.GraphModule(rlib["default"](dev))\n        data_tvm = tvm.nd.array((np.random.uniform(size=input_shape)).astype(dtype))\n        module.set_input("data", data_tvm)\n\n        # \u8BC4\u4F30\n        print("Evaluate inference time cost...")\n        print(module.benchmark(dev, number=1, repeat=30))\n\n# \u4E0D\u5728\u7F51\u9875\u670D\u52A1\u5668\u4E2D\u8FD0\u884C\u8C03\u4F18\uFF0C\u56E0\u4E3A\u5B83\u9700\u8981\u7684\u65F6\u95F4\u592A\u957F\u3002\n# \u53D6\u6D88\u6CE8\u91CA\u8FD0\u884C\u4E0B\u4E00\u884C\n# tune_and_evaluate(tuning_option)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\u6837\u672C\u8F93\u51FA",children:"\u6837\u672C\u8F93\u51FA"}),"\n",(0,s.jsx)(n.p,{children:"\u8C03\u4F18\u9700\u8981\u7F16\u8BD1\u8BB8\u591A\u7A0B\u5E8F\uFF0C\u5E76\u4ECE\u4E2D\u63D0\u53D6\u7279\u5F81\uFF0C\u6240\u4EE5\u63A8\u8350\u4F7F\u7528\u9AD8\u6027\u80FD\u7684 CPU\u3002\u4E0B\u9762\u5217\u51FA\u4E86\u4E00\u4E2A\u8F93\u51FA\u793A\u4F8B\u3002\u5728 32T AMD Ryzen Threadripper \u8BBE\u5907\u4E0A\uFF0C\u5927\u7EA6\u9700\u8981 3 \u4E2A\u5C0F\u65F6\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"Extract tasks...\nTuning...\n[Task  1/17]  Current/Best:   25.30/  39.12 GFLOPS | Progress: (992/1000) | 751.22 s Done.\n[Task  2/17]  Current/Best:   40.70/  45.50 GFLOPS | Progress: (736/1000) | 545.46 s Done.\n[Task  3/17]  Current/Best:   38.83/  42.35 GFLOPS | Progress: (992/1000) | 1549.85 s Done.\n[Task  4/17]  Current/Best:   23.31/  31.02 GFLOPS | Progress: (640/1000) | 1059.31 s Done.\n[Task  5/17]  Current/Best:    0.06/   2.34 GFLOPS | Progress: (544/1000) | 305.45 s Done.\n[Task  6/17]  Current/Best:   10.97/  17.20 GFLOPS | Progress: (992/1000) | 1050.00 s Done.\n[Task  7/17]  Current/Best:    8.98/  10.94 GFLOPS | Progress: (928/1000) | 421.36 s Done.\n[Task  8/17]  Current/Best:    4.48/  14.86 GFLOPS | Progress: (704/1000) | 582.60 s Done.\n[Task  9/17]  Current/Best:   10.30/  25.99 GFLOPS | Progress: (864/1000) | 899.85 s Done.\n[Task 10/17]  Current/Best:   11.73/  12.52 GFLOPS | Progress: (608/1000) | 304.85 s Done.\n[Task 11/17]  Current/Best:   15.26/  18.68 GFLOPS | Progress: (800/1000) | 747.52 s Done.\n[Task 12/17]  Current/Best:   17.48/  26.71 GFLOPS | Progress: (1000/1000) | 1166.40 s Done.\n[Task 13/17]  Current/Best:    0.96/  11.43 GFLOPS | Progress: (960/1000) | 611.65 s Done.\n[Task 14/17]  Current/Best:   17.88/  20.22 GFLOPS | Progress: (672/1000) | 670.29 s Done.\n[Task 15/17]  Current/Best:   11.62/  13.98 GFLOPS | Progress: (736/1000) | 449.25 s Done.\n[Task 16/17]  Current/Best:   19.90/  23.83 GFLOPS | Progress: (608/1000) | 708.64 s Done.\n[Task 17/17]  Current/Best:   17.98/  22.75 GFLOPS | Progress: (736/1000) | 1122.60 s Done.\nCompile...\nUpload...\nEvaluate inference time cost...\nMean inference time (std dev): 128.05 ms (7.74 ms)\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u9047\u5230\u56F0\u96BE\uFF1F"})}),(0,s.jsx)(n.p,{children:"\u81EA\u52A8\u8C03\u4F18\u6A21\u5757\u5BB9\u6613\u51FA\u9519\uFF0C\u82E5\u603B\u662F\u770B\u5230\u300C0.00/ 0.00 GFLOPS\u300D\uFF0C\u5219\u610F\u5473\u7740\u6709\u95EE\u9898\u3002\u9996\u5148\u786E\u4FDD\u8BBE\u7F6E\u4E86\u6B63\u786E\u7684\u8BBE\u5907\u914D\u7F6E\uFF0C\u7136\u540E\uFF0C\u5728\u811A\u672C\u5F00\u5934\u6DFB\u52A0\u5982\u4E0B\u884C\u6765\u6253\u5370\u8C03\u8BD5\u4FE1\u606F\uFF0C\u6253\u5370\u6240\u6709\u6D4B\u8BD5\u7ED3\u679C\uFF0C\u53EF\u4ECE\u4E2D\u627E\u5230\u6709\u7528\u7684\u62A5\u9519\u6D88\u606F\u3002"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import logging\nlogging.getLogger('autotvm').setLevel(logging.DEBUG)\n"})}),(0,s.jsxs)(n.p,{children:["\u968F\u65F6\u5728 ",(0,s.jsx)(n.a,{href:"https://discuss.tvm.apache.org",children:"https://discuss.tvm.apache.org"})," \u4E0A\u5411\u793E\u533A\u5BFB\u6C42\u5E2E\u52A9\u3002"]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/644d28fc67dfb3099fb0d275ffcf1c7c/tune_relay_mobile_gpu.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Atune_relay_mobile_gpu.py"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/6b0f549107f73f2e48c894372be08bcb/tune_relay_mobile_gpu.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Atune_relay_mobile_gpu.ipynb"})})]})}function p(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},21494:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return o}});var r=t(39546);let s={},a=r.createContext(s);function o(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);