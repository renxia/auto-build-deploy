"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["53786"],{42102:function(e,t,n){n.r(t),n.d(t,{default:()=>c,frontMatter:()=>s,metadata:()=>i,assets:()=>o,toc:()=>d,contentTitle:()=>l});var i=JSON.parse('{"id":"how_to/te_schedules/compute_reduce","title":"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\uFF08Tuple Inputs\uFF09\u8FDB\u884C\u8BA1\u7B97\u548C\u5F52\u7EA6","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.10.0/how_to/te_schedules/07-compute_reduce.md","sourceDirName":"how_to/te_schedules","slug":"/how_to/te_schedules/compute_reduce","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/te_schedules/compute_reduce","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.10.0/how_to/te_schedules/07-compute_reduce.md","tags":[],"version":"0.10.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":7,"frontMatter":{"title":"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\uFF08Tuple Inputs\uFF09\u8FDB\u884C\u8BA1\u7B97\u548C\u5F52\u7EA6"},"sidebar":"tutorialSidebar","previous":{"title":"\u4F7F\u7528 Tensorize \u6765\u5229\u7528\u786C\u4EF6\u5185\u8054\u51FD\u6570","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/te_schedules/tensorize"},"next":{"title":"\u7528 TEDD \u8FDB\u884C\u53EF\u89C6\u5316","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/te_schedules/tedd_visualization"}}'),r=n("74132"),a=n("21494");let s={title:"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\uFF08Tuple Inputs\uFF09\u8FDB\u884C\u8BA1\u7B97\u548C\u5F52\u7EA6"},l="\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\uFF08Tuple Inputs\uFF09\u8FDB\u884C\u8BA1\u7B97\u548C\u5F52\u7EA6",o={},d=[{value:"\u63CF\u8FF0\u6279\u91CF\u8BA1\u7B97",id:"\u63CF\u8FF0\u6279\u91CF\u8BA1\u7B97",level:2},{value:"\u4F7F\u7528\u534F\u540C\u8F93\u5165\uFF08Collaborative Inputs\uFF09\u63CF\u8FF0\u5F52\u7EA6",id:"\u4F7F\u7528\u534F\u540C\u8F93\u5165collaborative-inputs\u63CF\u8FF0\u5F52\u7EA6",level:2},{value:"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\u8C03\u5EA6\u64CD\u4F5C",id:"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\u8C03\u5EA6\u64CD\u4F5C",level:2},{value:"\u603B\u7ED3",id:"\u603B\u7ED3",level:2}];function _(e){let t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165tuple-inputs\u8FDB\u884C\u8BA1\u7B97\u548C\u5F52\u7EA6",children:"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\uFF08Tuple Inputs\uFF09\u8FDB\u884C\u8BA1\u7B97\u548C\u5F52\u7EA6"})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["\u5355\u51FB ",(0,r.jsx)(t.a,{href:"https://tvm.apache.org/docs/how_to/work_with_schedules/tuple_inputs.html#sphx-glr-download-how-to-work-with-schedules-tuple-inputs-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,r.jsx)(t.a,{href:"https://github.com/ZihengJiang",children:"Ziheng Jiang"})]}),"\n",(0,r.jsxs)(t.p,{children:["\u82E5\u8981\u5728\u5355\u4E2A\u5FAA\u73AF\u4E2D\u8BA1\u7B97\u5177\u6709\u76F8\u540C shape \u7684\u591A\u4E2A\u8F93\u51FA\uFF0C\u6216\u6267\u884C\u591A\u4E2A\u503C\u7684\u5F52\u7EA6\uFF0C\u4F8B\u5982 ",(0,r.jsx)(t.code,{children:"argmax"}),"\u3002\u8FD9\u4E9B\u95EE\u9898\u53EF\u4EE5\u901A\u8FC7\u5143\u7EC4\u8F93\u5165\u6765\u89E3\u51B3\u3002"]}),"\n",(0,r.jsx)(t.p,{children:"\u672C\u6559\u7A0B\u4ECB\u7ECD\u4E86 TVM \u4E2D\u5143\u7EC4\u8F93\u5165\u7684\u7528\u6CD5\u3002"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-plain",children:"from __future__ import absolute_import, print_function\n\nimport tvm\nfrom tvm import te\nimport numpy as np\n"})}),"\n",(0,r.jsx)(t.h2,{id:"\u63CF\u8FF0\u6279\u91CF\u8BA1\u7B97",children:"\u63CF\u8FF0\u6279\u91CF\u8BA1\u7B97"}),"\n",(0,r.jsxs)(t.p,{children:["\u5BF9\u4E8E shape \u76F8\u540C\u7684\u7B97\u5B50\uFF0C\u82E5\u8981\u5728\u4E0B\u4E00\u4E2A\u8C03\u5EA6\u8FC7\u7A0B\u4E2D\u4E00\u8D77\u8C03\u5EA6\uFF0C\u53EF\u4EE5\u5C06\u5B83\u4EEC\u653E\u5728\u4E00\u8D77\u4F5C\u4E3A ",(0,r.jsx)(t.code,{children:"te.compute"})," \u7684\u8F93\u5165\u3002"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'n = te.var("n")\nm = te.var("m")\nA0 = te.placeholder((m, n), name="A0")\nA1 = te.placeholder((m, n), name="A1")\nB0, B1 = te.compute((m, n), lambda i, j: (A0[i, j] + 2, A1[i, j] * 3), name="B")\n\n# \u751F\u6210\u7684 IR \u4EE3\u7801\uFF1A\ns = te.create_schedule(B0.op)\nprint(tvm.lower(s, [A0, A1, B0, B1], simple_mode=True))\n'})}),"\n",(0,r.jsx)(t.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'@main = primfn(A0_1: handle, A1_1: handle, B_2: handle, B_3: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A0: Buffer(A0_2: Pointer(float32), float32, [(stride: int32*m: int32)], [], type="auto"),\n             A1: Buffer(A1_2: Pointer(float32), float32, [(stride_1: int32*m)], [], type="auto"),\n             B: Buffer(B_4: Pointer(float32), float32, [(stride_2: int32*m)], [], type="auto"),\n             B_1: Buffer(B_5: Pointer(float32), float32, [(stride_3: int32*m)], [], type="auto")}\n  buffer_map = {A0_1: A0, A1_1: A1, B_2: B, B_3: B_1}\n  preflattened_buffer_map = {A0_1: A0_3: Buffer(A0_2, float32, [m, n: int32], [stride, stride_4: int32], type="auto"), A1_1: A1_3: Buffer(A1_2, float32, [m, n], [stride_1, stride_5: int32], type="auto"), B_2: B_6: Buffer(B_4, float32, [m, n], [stride_2, stride_6: int32], type="auto"), B_3: B_7: Buffer(B_5, float32, [m, n], [stride_3, stride_7: int32], type="auto")} {\n  for (i: int32, 0, m) {\n    for (j: int32, 0, n) {\n      B[((i*stride_2) + (j*stride_6))] = (A0[((i*stride) + (j*stride_4))] + 2f32)\n      B_1[((i*stride_3) + (j*stride_7))] = (A1[((i*stride_1) + (j*stride_5))]*3f32)\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"\u4F7F\u7528\u534F\u540C\u8F93\u5165collaborative-inputs\u63CF\u8FF0\u5F52\u7EA6",children:"\u4F7F\u7528\u534F\u540C\u8F93\u5165\uFF08Collaborative Inputs\uFF09\u63CF\u8FF0\u5F52\u7EA6"}),"\n",(0,r.jsxs)(t.p,{children:["\u6709\u65F6\u9700\u8981\u591A\u4E2A\u8F93\u5165\u6765\u8868\u8FBE\u5F52\u7EA6\u7B97\u5B50\uFF0C\u5E76\u4E14\u8F93\u5165\u4F1A\u534F\u540C\u5DE5\u4F5C\uFF0C\u4F8B\u5982 ",(0,r.jsx)(t.code,{children:"argmax"}),"\u3002\u5728\u5F52\u7EA6\u8FC7\u7A0B\u4E2D\uFF0C",(0,r.jsx)(t.code,{children:"argmax"})," \u8981\u6BD4\u8F83\u64CD\u4F5C\u6570\u7684\u503C\uFF0C\u8FD8\u9700\u8981\u4FDD\u7559\u64CD\u4F5C\u6570\u7684\u7D22\u5F15\uFF0C\u53EF\u7528 ",(0,r.jsx)(t.code,{children:"te.comm_reducer()"})," \u8868\u793A\uFF1A"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'# x \u548C y \u662F\u5F52\u7EA6\u7684\u64CD\u4F5C\u6570\uFF0C\u5B83\u4EEC\u90FD\u662F\u5143\u7EC4\u7684\u7D22\u5F15\u548C\u503C\u3002\ndef fcombine(x, y):\n    lhs = tvm.tir.Select((x[1] >= y[1]), x[0], y[0])\n    rhs = tvm.tir.Select((x[1] >= y[1]), x[1], y[1])\n    return lhs, rhs\n\n# \u8EAB\u4EFD\u5143\u7D20\u4E5F\u8981\u662F\u4E00\u4E2A\u5143\u7EC4\uFF0C\u6240\u4EE5 `fidentity` \u63A5\u6536\u4E24\u79CD\u7C7B\u578B\u4F5C\u4E3A\u8F93\u5165\u3002\ndef fidentity(t0, t1):\n    return tvm.tir.const(-1, t0), tvm.te.min_value(t1)\n\nargmax = te.comm_reducer(fcombine, fidentity, name="argmax")\n\n# \u63CF\u8FF0\u5F52\u7EA6\u8BA1\u7B97\nm = te.var("m")\nn = te.var("n")\nidx = te.placeholder((m, n), name="idx", dtype="int32")\nval = te.placeholder((m, n), name="val", dtype="int32")\nk = te.reduce_axis((0, n), "k")\nT0, T1 = te.compute((m,), lambda i: argmax((idx[i, k], val[i, k]), axis=k), name="T")\n\n# \u751F\u6210\u7684 IR \u4EE3\u7801\uFF1A\ns = te.create_schedule(T0.op)\nprint(tvm.lower(s, [idx, val, T0, T1], simple_mode=True))\n'})}),"\n",(0,r.jsx)(t.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'@main = primfn(idx_1: handle, val_1: handle, T_2: handle, T_3: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {idx: Buffer(idx_2: Pointer(int32), int32, [(stride: int32*m: int32)], [], type="auto"),\n             val: Buffer(val_2: Pointer(int32), int32, [(stride_1: int32*m)], [], type="auto"),\n             T: Buffer(T_4: Pointer(int32), int32, [(stride_2: int32*m)], [], type="auto"),\n             T_1: Buffer(T_5: Pointer(int32), int32, [(stride_3: int32*m)], [], type="auto")}\n  buffer_map = {idx_1: idx, val_1: val, T_2: T, T_3: T_1}\n  preflattened_buffer_map = {idx_1: idx_3: Buffer(idx_2, int32, [m, n: int32], [stride, stride_4: int32], type="auto"), val_1: val_3: Buffer(val_2, int32, [m, n], [stride_1, stride_5: int32], type="auto"), T_2: T_6: Buffer(T_4, int32, [m], [stride_2], type="auto"), T_3: T_7: Buffer(T_5, int32, [m], [stride_3], type="auto")} {\n  for (i: int32, 0, m) {\n    T[(i*stride_2)] = -1\n    T_1[(i*stride_3)] = -2147483648\n    for (k: int32, 0, n) {\n      T[(i*stride_2)] = @tir.if_then_else((val[((i*stride_1) + (k*stride_5))] <= T_1[(i*stride_3)]), T[(i*stride_2)], idx[((i*stride) + (k*stride_4))], dtype=int32)\n      T_1[(i*stride_3)] = @tir.if_then_else((val[((i*stride_1) + (k*stride_5))] <= T_1[(i*stride_3)]), T_1[(i*stride_3)], val[((i*stride_1) + (k*stride_5))], dtype=int32)\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["\u82E5\u5BF9\u5F52\u7EA6\u4E0D\u719F\u6089\uFF0C\u53EF\u4EE5\u53C2\u8003 ",(0,r.jsx)(t.a,{href:"https://tvm.apache.org/docs/how_to/work_with_schedules/reduction.html#general-reduction",children:"\u5B9A\u4E49\u901A\u7528\u4EA4\u6362\u5F52\u7EA6\u8FD0\u7B97"}),"\u3002"]})}),"\n",(0,r.jsx)(t.h2,{id:"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\u8C03\u5EA6\u64CD\u4F5C",children:"\u4F7F\u7528\u5143\u7EC4\u8F93\u5165\u8C03\u5EA6\u64CD\u4F5C"}),"\n",(0,r.jsx)(t.p,{children:"\u867D\u7136\u4E00\u6B21 batch \u64CD\u4F5C\u4F1A\u6709\u591A\u4E2A\u8F93\u51FA\uFF0C\u4F46\u5B83\u4EEC\u53EA\u80FD\u4E00\u8D77\u8C03\u5EA6\u3002"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'n = te.var("n")\nm = te.var("m")\nA0 = te.placeholder((m, n), name="A0")\nB0, B1 = te.compute((m, n), lambda i, j: (A0[i, j] + 2, A0[i, j] * 3), name="B")\nA1 = te.placeholder((m, n), name="A1")\nC = te.compute((m, n), lambda i, j: A1[i, j] + B0[i, j], name="C")\n\ns = te.create_schedule(C.op)\ns[B0].compute_at(s[C], C.op.axis[0])\n# \u751F\u6210\u7684 IR \u4EE3\u7801\uFF1A\nprint(tvm.lower(s, [A0, A1, C], simple_mode=True))\n'})}),"\n",(0,r.jsx)(t.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'@main = primfn(A0_1: handle, A1_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A0: Buffer(A0_2: Pointer(float32), float32, [(stride: int32*m: int32)], [], type="auto"),\n             A1: Buffer(A1_2: Pointer(float32), float32, [(stride_1: int32*m)], [], type="auto"),\n             C: Buffer(C_2: Pointer(float32), float32, [(stride_2: int32*m)], [], type="auto")}\n  buffer_map = {A0_1: A0, A1_1: A1, C_1: C}\n  preflattened_buffer_map = {A0_1: A0_3: Buffer(A0_2, float32, [m, n: int32], [stride, stride_3: int32], type="auto"), A1_1: A1_3: Buffer(A1_2, float32, [m, n], [stride_1, stride_4: int32], type="auto"), C_1: C_3: Buffer(C_2, float32, [m, n], [stride_2, stride_5: int32], type="auto")} {\n  allocate(B.v0: Pointer(global float32), float32, [n]), storage_scope = global;\n  allocate(B.v1: Pointer(global float32), float32, [n]), storage_scope = global;\n  for (i: int32, 0, m) {\n    for (j: int32, 0, n) {\n      B.v0_1: Buffer(B.v0, float32, [n], [])[j] = (A0[((i*stride) + (j*stride_3))] + 2f32)\n      B.v1_1: Buffer(B.v1, float32, [n], [])[j] = (A0[((i*stride) + (j*stride_3))]*3f32)\n    }\n    for (j_1: int32, 0, n) {\n      C[((i*stride_2) + (j_1*stride_5))] = (A1[((i*stride_1) + (j_1*stride_4))] + B.v0_1[j_1])\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"\u603B\u7ED3",children:"\u603B\u7ED3"}),"\n",(0,r.jsx)(t.p,{children:"\u672C\u6559\u7A0B\u4ECB\u7ECD\u5143\u7EC4\u8F93\u5165\u64CD\u4F5C\u7684\u7528\u6CD5\u3002"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"\u63CF\u8FF0\u5E38\u89C4\u7684\u6279\u91CF\u8BA1\u7B97\u3002"}),"\n",(0,r.jsx)(t.li,{children:"\u7528\u5143\u7EC4\u8F93\u5165\u63CF\u8FF0\u5F52\u7EA6\u64CD\u4F5C\u3002"}),"\n",(0,r.jsx)(t.li,{children:"\u6CE8\u610F\uFF0C\u53EA\u80FD\u6839\u636E\u64CD\u4F5C\u800C\u4E0D\u662F\u5F20\u91CF\u6765\u8C03\u5EA6\u8BA1\u7B97\u3002"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://tvm.apache.org/docs/_downloads/68abf665197871646fffcd0955bddad7/tuple_inputs.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Atuple_inputs.py"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://tvm.apache.org/docs/_downloads/a1417396e306d987107a7a39376ec261/tuple_inputs.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Atuple_inputs.ipynb"})})]})}function c(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(_,{...e})}):_(e)}},21494:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return s}});var i=n(39546);let r={},a=i.createContext(r);function s(e){let t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);