"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["67345"],{99479:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>i,metadata:()=>r,assets:()=>o,toc:()=>d,contentTitle:()=>s});var r=JSON.parse('{"id":"tutorial/tensor_expr","title":"\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u5904\u7406\u7B97\u5B50","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/tutorial/06-tensor_expr.md","sourceDirName":"tutorial","slug":"/tutorial/tensor_expr","permalink":"/docs/tvm-cn/docs/0.12.0/tutorial/tensor_expr","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/tutorial/06-tensor_expr.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":6,"frontMatter":{"title":"\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u5904\u7406\u7B97\u5B50"},"sidebar":"tutorialSidebar","previous":{"title":"\u4F7F\u7528 Python \u63A5\u53E3\uFF08AutoTVM\uFF09\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B","permalink":"/docs/tvm-cn/docs/0.12.0/tutorial/python_AutoTVM"},"next":{"title":"\u7528 Schedule \u6A21\u677F\u548C AutoTVM \u4F18\u5316\u7B97\u5B50","permalink":"/docs/tvm-cn/docs/0.12.0/tutorial/ops_AutoTVM"}}'),a=t("74132"),l=t("21494");let i={title:"\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u5904\u7406\u7B97\u5B50"},s="\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u5904\u7406\u7B97\u5B50",o={},d=[{value:"\u793A\u4F8B 1\uFF1A\u5728 TE \u4E2D\u4E3A CPU \u7F16\u5199\u5E76\u8C03\u5EA6\u5411\u91CF\u52A0\u6CD5",id:"\u793A\u4F8B-1\u5728-te-\u4E2D\u4E3A-cpu-\u7F16\u5199\u5E76\u8C03\u5EA6\u5411\u91CF\u52A0\u6CD5",level:2},{value:"\u63CF\u8FF0\u5411\u91CF\u8BA1\u7B97",id:"\u63CF\u8FF0\u5411\u91CF\u8BA1\u7B97",level:3},{value:"\u4E3A\u8BA1\u7B97\u521B\u5EFA\u9ED8\u8BA4 schedule",id:"\u4E3A\u8BA1\u7B97\u521B\u5EFA\u9ED8\u8BA4-schedule",level:3},{value:"\u7F16\u8BD1\u548C\u8BC4\u4F30\u9ED8\u8BA4 schedule",id:"\u7F16\u8BD1\u548C\u8BC4\u4F30\u9ED8\u8BA4-schedule",level:3},{value:"\u66F4\u65B0 schedule \u4EE5\u4F7F\u7528\u5E76\u884C\u6027",id:"\u66F4\u65B0-schedule-\u4EE5\u4F7F\u7528\u5E76\u884C\u6027",level:3},{value:"\u66F4\u65B0 schedule \u4EE5\u4F7F\u7528\u5411\u91CF\u5316",id:"\u66F4\u65B0-schedule-\u4EE5\u4F7F\u7528\u5411\u91CF\u5316",level:3},{value:"\u6BD4\u8F83\u4E0D\u540C\u7684 schedule",id:"\u6BD4\u8F83\u4E0D\u540C\u7684-schedule",level:3},{value:"GPU \u7684\u76EE\u6807\u5411\u91CF\u52A0\u6CD5\uFF08\u53EF\u9009\uFF09",id:"gpu-\u7684\u76EE\u6807\u5411\u91CF\u52A0\u6CD5\u53EF\u9009",level:3},{value:"\u4FDD\u5B58\u548C\u52A0\u8F7D\u5DF2\u7F16\u8BD1\u7684\u6A21\u5757",id:"\u4FDD\u5B58\u548C\u52A0\u8F7D\u5DF2\u7F16\u8BD1\u7684\u6A21\u5757",level:2},{value:"\u52A0\u8F7D\u7F16\u8BD1\u6A21\u5757",id:"\u52A0\u8F7D\u7F16\u8BD1\u6A21\u5757",level:3},{value:"\u5C06\u6240\u6709\u5185\u5BB9\u6253\u5305\u5230\u4E00\u4E2A\u5E93\u4E2D",id:"\u5C06\u6240\u6709\u5185\u5BB9\u6253\u5305\u5230\u4E00\u4E2A\u5E93\u4E2D",level:3},{value:"\u751F\u6210 OpenCL \u4EE3\u7801",id:"\u751F\u6210-opencl-\u4EE3\u7801",level:2},{value:"\u793A\u4F8B 2\uFF1A\u4F7F\u7528 TE \u624B\u52A8\u4F18\u5316\u77E9\u9635\u4E58\u6CD5",id:"\u793A\u4F8B-2\u4F7F\u7528-te-\u624B\u52A8\u4F18\u5316\u77E9\u9635\u4E58\u6CD5",level:2},{value:"\u51C6\u5907\u548C\u6027\u80FD\u57FA\u7EBF",id:"\u51C6\u5907\u548C\u6027\u80FD\u57FA\u7EBF",level:3},{value:"\u4F18\u5316\u4E00\uFF1A\u5757\u64CD\u4F5C",id:"\u4F18\u5316\u4E00\u5757\u64CD\u4F5C",level:3},{value:"\u4F18\u5316\u4E8C\uFF1A\u5411\u91CF\u5316",id:"\u4F18\u5316\u4E8C\u5411\u91CF\u5316",level:3},{value:"\u4F18\u5316\u4E09\uFF1A\u5FAA\u73AF\u7F6E\u6362",id:"\u4F18\u5316\u4E09\u5FAA\u73AF\u7F6E\u6362",level:3},{value:"\u4F18\u5316\u56DB\uFF1A\u6570\u7EC4\u6253\u5305",id:"\u4F18\u5316\u56DB\u6570\u7EC4\u6253\u5305",level:3},{value:"\u4F18\u5316\u4E94\uFF1A\u901A\u8FC7\u7F13\u5B58\u4F18\u5316\u5757\u5199\u5165",id:"\u4F18\u5316\u4E94\u901A\u8FC7\u7F13\u5B58\u4F18\u5316\u5757\u5199\u5165",level:3},{value:"\u4F18\u5316\u516D\uFF1A\u5E76\u884C\u5316",id:"\u4F18\u5316\u516D\u5E76\u884C\u5316",level:3},{value:"\u77E9\u9635\u4E58\u6CD5\u793A\u4F8B\u603B\u7ED3",id:"\u77E9\u9635\u4E58\u6CD5\u793A\u4F8B\u603B\u7ED3",level:3},{value:"\u603B\u7ED3",id:"\u603B\u7ED3",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u5904\u7406\u7B97\u5B50",children:"\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u5904\u7406\u7B97\u5B50"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["\u5355\u51FB ",(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/tutorial/tensor_expr_get_started.html#sphx-glr-download-tutorial-tensor-expr-get-started-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,a.jsx)(n.a,{href:"https://tqchen.github.io/",children:"Tianqi Chen"})]}),"\n",(0,a.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u91CD\u70B9\u5173\u6CE8 TVM \u5982\u4F55\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\uFF08TE\uFF09\u6765\u5B9A\u4E49\u5F20\u91CF\u8BA1\u7B97\u5E76\u5E94\u7528\u5FAA\u73AF\u4F18\u5316\u3002 TE \u7528\u7EAF\u51FD\u6570\u5F0F\u8BED\u8A00\u63CF\u8FF0\u5F20\u91CF\u8BA1\u7B97\uFF08\u5373\u6BCF\u4E2A\u51FD\u6570\u8868\u8FBE\u5F0F\u90FD\u4E0D\u4F1A\u4EA7\u751F\u526F\u4F5C\u7528\uFF08side effect\uFF09\uFF09\u3002\u4ECE TVM \u7684\u6574\u4F53\u6765\u770B\uFF0CRelay \u5C06\u8BA1\u7B97\u63CF\u8FF0\u4E3A\u4E00\u7EC4\u7B97\u5B50\uFF0C\u6BCF\u4E2A\u7B97\u5B50\u90FD\u53EF\u4EE5\u8868\u793A\u4E3A\u4E00\u4E2A TE \u8868\u8FBE\u5F0F\uFF0C\u5176\u4E2D\u6BCF\u4E2A TE \u8868\u8FBE\u5F0F\u63A5\u6536\u8F93\u5165\u5F20\u91CF\u5E76\u4EA7\u751F\u4E00\u4E2A\u8F93\u51FA\u5F20\u91CF\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u8FD9\u662F TVM \u4E2D\u5F20\u91CF\u8868\u8FBE\u5F0F\u8BED\u8A00\u7684\u5165\u95E8\u6559\u7A0B\u3002 TVM \u4F7F\u7528\u7279\u5B9A\u9886\u57DF\u7684\u5F20\u91CF\u8868\u8FBE\u5F0F\u6765\u8FDB\u884C\u6709\u6548\u7684\u5185\u6838\u6784\u5EFA\u3002\u4E0B\u9762\u5C06\u901A\u8FC7\u4E24\u4E2A\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u8BED\u8A00\u7684\u793A\u4F8B\uFF0C\u6765\u6F14\u793A\u57FA\u672C\u5DE5\u4F5C\u6D41\u7A0B\u3002\u7B2C\u4E00\u4E2A\u4F8B\u5B50\u4ECB\u7ECD\u4E86 TE \u548C\u5E26\u6709\u5411\u91CF\u52A0\u6CD5\u7684\u8C03\u5EA6\u3002\u901A\u8FC7\u9010\u6B65\u8BB2\u89E3\u5982\u4F55\u7528 TE \u4F18\u5316\u77E9\u9635\u4E58\u6CD5\uFF0C\u5BF9\u7B2C\u4E8C\u4E2A\u4F8B\u5B50\u7684\u8FD9\u4E9B\u6982\u5FF5\u8FDB\u884C\u4E86\u6269\u5C55\u3002\u540E\u7EED\u6D89\u53CA\u5230\u66F4\u9AD8\u9636\u7684 TVM \u529F\u80FD\u6559\u7A0B\uFF0C\u5C06\u57FA\u4E8E\u6B64\u77E9\u9635\u4E58\u6CD5\u793A\u4F8B\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u793A\u4F8B-1\u5728-te-\u4E2D\u4E3A-cpu-\u7F16\u5199\u5E76\u8C03\u5EA6\u5411\u91CF\u52A0\u6CD5",children:"\u793A\u4F8B 1\uFF1A\u5728 TE \u4E2D\u4E3A CPU \u7F16\u5199\u5E76\u8C03\u5EA6\u5411\u91CF\u52A0\u6CD5"}),"\n",(0,a.jsx)(n.p,{children:"\u4EE5\u4E0B Python \u793A\u4F8B\u5C55\u793A\u4E86\u5982\u4F55\u5B9E\u73B0\u7528\u4E8E\u5411\u91CF\u52A0\u6CD5\u7684 TE\uFF0C\u4EE5\u53CA\u9488\u5BF9 CPU \u7684\u8C03\u5EA6\u3002\u9996\u5148\u521D\u59CB\u5316\u4E00\u4E2A TVM \u73AF\u5883\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import tvm\nimport tvm.testing\nfrom tvm import te\nimport numpy as np\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u4E3A\u4E86\u63D0\u9AD8\u6027\u80FD\uFF0C\u53EF\u4EE5\u6307\u5B9A\u76EE\u6807 CPU\u3002\u5982\u679C\u4F7F\u7528\u7684\u662F LLVM\uFF0C\u53EF\u8F93\u5165\u547D\u4EE4 ",(0,a.jsx)(n.code,{children:"llc --version"})," \u6765\u83B7\u53D6 CPU \u7C7B\u578B\uFF0C\u5E76\u901A\u8FC7\u67E5\u770B ",(0,a.jsx)(n.code,{children:"/proc/cpuinfo"})," \u83B7\u53D6\u5904\u7406\u5668\u652F\u6301\u7684\u5176\u4ED6\u6269\u5C55\u3002\u4F8B\u5982\uFF0C\u5982\u679C CPU \u652F\u6301 AVX-512 \u6307\u4EE4\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528 ",(0,a.jsx)(n.code,{children:"llvm -mcpu=skylake-avx512"}),"\u3002"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'tgt = tvm.target.Target(target="llvm", host="llvm")\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u63CF\u8FF0\u5411\u91CF\u8BA1\u7B97",children:"\u63CF\u8FF0\u5411\u91CF\u8BA1\u7B97"}),"\n",(0,a.jsxs)(n.p,{children:["TVM \u91C7\u7528\u5F20\u91CF\u8BED\u4E49\uFF0C\u6BCF\u4E2A\u4E2D\u95F4\u7ED3\u679C\u8868\u793A\u4E3A\u4E00\u4E2A\u591A\u7EF4\u6570\u7EC4\u3002\u7528\u6237\u9700\u8981\u63CF\u8FF0\u751F\u6210\u5F20\u91CF\u7684\u8BA1\u7B97\u89C4\u5219\u3002\u9996\u5148\u5B9A\u4E49\u4E00\u4E2A\u7B26\u53F7\u53D8\u91CF ",(0,a.jsx)(n.code,{children:"n"})," \u6765\u8868\u793A shape\u3002\u7136\u540E\u5B9A\u4E49\u4E24\u4E2A\u5360\u4F4D\u7B26\u5F20\u91CF\uFF0C",(0,a.jsx)(n.code,{children:"A"})," \u548C ",(0,a.jsx)(n.code,{children:"B"}),"\uFF0C\u7ED9\u5B9A shape \u90FD\u4E3A ",(0,a.jsx)(n.code,{children:"(n,)"}),"\u3002\u7136\u540E\u7528 ",(0,a.jsx)(n.code,{children:"compute"})," \u64CD\u4F5C\u63CF\u8FF0\u7ED3\u679C\u5F20\u91CF ",(0,a.jsx)(n.code,{children:"C"}),"\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"compute"})," \u5B9A\u4E49\u4E86\u4E00\u4E2A\u8BA1\u7B97\uFF0C\u5176\u8F93\u51FA\u7B26\u5408\u6307\u5B9A\u7684\u5F20\u91CF shape\uFF0C\u8BA1\u7B97\u5C06\u5728 lambda \u51FD\u6570\u5B9A\u4E49\u7684\u5F20\u91CF\u4E2D\u7684\u6BCF\u4E2A\u4F4D\u7F6E\u6267\u884C\u3002\u6CE8\u610F\uFF0C\u867D\u7136 ",(0,a.jsx)(n.code,{children:"n"})," \u662F\u4E00\u4E2A\u53D8\u91CF\uFF0C\u4F46\u5B83\u5B9A\u4E49\u4E86 ",(0,a.jsx)(n.code,{children:"A"}),"\u3001",(0,a.jsx)(n.code,{children:"B"})," \u548C ",(0,a.jsx)(n.code,{children:"C"})," \u5F20\u91CF\u4E4B\u95F4\u7684\u4E00\u81F4\u7684 shape\u3002\u6CE8\u610F\uFF0C\u6B64\u8FC7\u7A0B\u53EA\u662F\u5728\u58F0\u660E\u5E94\u8BE5\u5982\u4F55\u8FDB\u884C\u8BA1\u7B97\uFF0C\u4E0D\u4F1A\u53D1\u751F\u5B9E\u9645\u7684\u8BA1\u7B97\u3002"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'n = te.var("n")\nA = te.placeholder((n,), name="A")\nB = te.placeholder((n,), name="B")\nC = te.compute(A.shape, lambda i: A[i] + B[i], name="C")\n'})}),"\n",(0,a.jsx)(n.admonition,{title:"Lambda \u51FD\u6570",type:"note",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"te.compute"})," \u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6267\u884C\u8BA1\u7B97\u7684\u51FD\u6570\u3002\u6B64\u793A\u4F8B\u4F7F\u7528\u533F\u540D\u51FD\u6570\uFF08\u4E5F\u79F0 ",(0,a.jsx)(n.code,{children:"lambda"})," \u51FD\u6570\uFF09\u6765\u5B9A\u4E49\u8BA1\u7B97\uFF0C\u5728\u672C\u4F8B\u4E2D\u662F\u5BF9 ",(0,a.jsx)(n.code,{children:"A"})," \u548C ",(0,a.jsx)(n.code,{children:"B"})," \u7684\u7B2C ",(0,a.jsx)(n.code,{children:"i"})," \u4E2A\u5143\u7D20\u8FDB\u884C\u52A0\u6CD5\u8FD0\u7B97\u3002"]})}),"\n",(0,a.jsx)(n.h3,{id:"\u4E3A\u8BA1\u7B97\u521B\u5EFA\u9ED8\u8BA4-schedule",children:"\u4E3A\u8BA1\u7B97\u521B\u5EFA\u9ED8\u8BA4 schedule"}),"\n",(0,a.jsxs)(n.p,{children:["\u867D\u7136\u4E0A\u9762\u63CF\u8FF0\u4E86\u8BA1\u7B97\u89C4\u5219\uFF0C\u4F46\u4E3A\u9002\u5E94\u4E0D\u540C\u7684\u8BBE\u5907\uFF0C\u53EF\u7528\u4E0D\u540C\u7684\u65B9\u5F0F\u6765\u8BA1\u7B97 ",(0,a.jsx)(n.code,{children:"C"}),"\u3002\u5BF9\u4E8E\u5177\u6709\u591A\u4E2A\u8F74\uFF08axis\uFF09\u7684\u5F20\u91CF\uFF0C\u53EF\u4EE5\u9009\u62E9\u9996\u5148\u8FED\u4EE3\u54EA\u4E2A\u8F74\uFF0C\u6216\u5C06\u8BA1\u7B97\u62C6\u5206\u5230\u4E0D\u540C\u7684\u7EBF\u7A0B\u3002 TVM \u8981\u6C42\u7528\u6237\u63D0\u4F9B schedule\uFF0C\u8FD9\u662F\u5BF9\u5982\u4F55\u6267\u884C\u8BA1\u7B97\u7684\u63CF\u8FF0\u3002 TE \u4E2D\u7684\u8C03\u5EA6\u64CD\u4F5C\u53EF\u4EE5\u5728\u5176\u4ED6\u64CD\u4F5C\u4E2D\u66F4\u6539\u5FAA\u73AF\u987A\u5E8F\u3001\u8DE8\u4E0D\u540C\u7EBF\u7A0B\u62C6\u5206\u8BA1\u7B97\u4EE5\u53CA\u5C06\u6570\u636E\u5757\u7EC4\u5408\u5728\u4E00\u8D77\u3002\u8C03\u5EA6\u80CC\u540E\u7684\u4E00\u4E2A\u91CD\u8981\u6982\u5FF5\u662F\u5B83\u4EEC\u53EA\u63CF\u8FF0\u5982\u4F55\u6267\u884C\u8BA1\u7B97\uFF0C\u56E0\u6B64\u540C\u4E00 TE \u7684\u4E0D\u540C\u8C03\u5EA6\u5C06\u4EA7\u751F\u76F8\u540C\u7684\u7ED3\u679C\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:["TVM \u5141\u8BB8\u521B\u5EFA\u4E00\u4E2A\u901A\u8FC7\u6309\u884C\u8FED\u4EE3\u8BA1\u7B97 ",(0,a.jsx)(n.code,{children:"C"})," \u7684 schedule\uFF1A"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"for (int i = 0; i < n; ++i) {\n  C[i] = A[i] + B[i];\n}\ns = te.create_schedule(C.op)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"\u7F16\u8BD1\u548C\u8BC4\u4F30\u9ED8\u8BA4-schedule",children:"\u7F16\u8BD1\u548C\u8BC4\u4F30\u9ED8\u8BA4 schedule"}),"\n",(0,a.jsx)(n.p,{children:"\u7528 TE \u8868\u8FBE\u5F0F\u548C schedule \u53EF\u4E3A\u76EE\u6807\u8BED\u8A00\u548C\u67B6\u6784\uFF08\u672C\u4F8B\u4E3A LLVM \u548C CPU\uFF09\u751F\u6210\u53EF\u8FD0\u884C\u7684\u4EE3\u7801\u3002TVM \u63D0\u4F9B schedule\u3001schedule \u4E2D\u7684 TE \u8868\u8FBE\u5F0F\u5217\u8868\u3001target \u548C host\uFF0C\u4EE5\u53CA\u6B63\u5728\u751F\u6210\u7684\u51FD\u6570\u540D\u3002\u8F93\u51FA\u7ED3\u679C\u662F\u4E00\u4E2A\u7C7B\u578B\u64E6\u9664\u51FD\u6570\uFF08type-erased function\uFF09\uFF0C\u53EF\u76F4\u63A5\u4ECE Python \u8C03\u7528\u3002"}),"\n",(0,a.jsxs)(n.p,{children:["\u4E0B\u9762\u5C06\u4F7F\u7528 ",(0,a.jsx)(n.code,{children:"tvm.build"})," \u521B\u5EFA\u51FD\u6570\u3002 build \u51FD\u6570\u63A5\u6536 schedule\u3001\u6240\u9700\u7684\u51FD\u6570\u7B7E\u540D\uFF08\u5305\u62EC\u8F93\u5165\u548C\u8F93\u51FA\uFF09\u4EE5\u53CA\u8981\u7F16\u8BD1\u5230\u7684\u76EE\u6807\u8BED\u8A00\u3002"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'fadd = tvm.build(s, [A, B, C], tgt, name="myadd")\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8FD0\u884C\u8BE5\u51FD\u6570\uFF0C\u5E76\u5C06\u8F93\u51FA\u4E0E numpy \u4E2D\u7684\u76F8\u540C\u8BA1\u7B97\u8FDB\u884C\u6BD4\u8F83\u3002\u7F16\u8BD1\u540E\u7684 TVM \u51FD\u6570\u63D0\u4F9B\u4E86\u4E00\u4E2A\u4EFB\u4F55\u8BED\u8A00\u90FD\u53EF\u8C03\u7528\u7684 C API\u3002\u9996\u5148\u521B\u5EFA TVM \u7F16\u8BD1\u8C03\u5EA6\u7684\u76EE\u6807\u8BBE\u5907\uFF08\u672C\u4F8B\u4E3A CPU\uFF09\u3002\u8FD9\u4E2A\u4F8B\u5B50\u7684\u76EE\u6807\u8BBE\u5907\u4E3A LLVM CPU\u3002\u7136\u540E\u521D\u59CB\u5316\u8BBE\u5907\u4E2D\u7684\u5F20\u91CF\uFF0C\u5E76\u6267\u884C\u81EA\u5B9A\u4E49\u7684\u52A0\u6CD5\u64CD\u4F5C\u3002\u4E3A\u4E86\u9A8C\u8BC1\u8BA1\u7B97\u662F\u5426\u6B63\u786E\uFF0C\u53EF\u5C06 C \u5F20\u91CF\u7684\u8F93\u51FA\u7ED3\u679C\u4E0E numpy \u6267\u884C\u76F8\u540C\u8BA1\u7B97\u7684\u7ED3\u679C\u8FDB\u884C\u6BD4\u8F83\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"dev = tvm.device(tgt.kind.name, 0)\n\nn = 1024\na = tvm.nd.array(np.random.uniform(size=n).astype(A.dtype), dev)\nb = tvm.nd.array(np.random.uniform(size=n).astype(B.dtype), dev)\nc = tvm.nd.array(np.zeros(n, dtype=C.dtype), dev)\nfadd(a, b, c)\ntvm.testing.assert_allclose(c.numpy(), a.numpy() + b.numpy())\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u521B\u5EFA\u4E00\u4E2A\u8F85\u52A9\u51FD\u6570\u6765\u8FD0\u884C TVM \u751F\u6210\u7684\u4EE3\u7801\u7684\u914D\u7F6E\u6587\u4EF6\uFF0C\u4ECE\u800C\u6BD4\u8F83\u8FD9\u4E2A\u7248\u672C\u548C numpy \u7684\u8FD0\u884C\u901F\u5EA6\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import timeit\n\nnp_repeat = 100\nnp_running_time = timeit.timeit(\n    setup="import numpy\\n"\n    "n = 32768\\n"\n    \'dtype = "float32"\\n\'\n    "a = numpy.random.rand(n, 1).astype(dtype)\\n"\n    "b = numpy.random.rand(n, 1).astype(dtype)\\n",\n    stmt="answer = a + b",\n    number=np_repeat,\n)\nprint("Numpy running time: %f" % (np_running_time / np_repeat))\n\ndef evaluate_addition(func, target, optimization, log):\n    dev = tvm.device(target.kind.name, 0)\n    n = 32768\n    a = tvm.nd.array(np.random.uniform(size=n).astype(A.dtype), dev)\n    b = tvm.nd.array(np.random.uniform(size=n).astype(B.dtype), dev)\n    c = tvm.nd.array(np.zeros(n, dtype=C.dtype), dev)\n\n    evaluator = func.time_evaluator(func.entry_name, dev, number=10)\n    mean_time = evaluator(a, b, c).mean\n    print("%s: %f" % (optimization, mean_time))\n\n    log.append((optimization, mean_time))\n\nlog = [("numpy", np_running_time / np_repeat)]\nevaluate_addition(fadd, tgt, "naive", log=log)\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:"Numpy running time: 0.000008\nnaive: 0.000006\n"})}),"\n",(0,a.jsx)(n.h3,{id:"\u66F4\u65B0-schedule-\u4EE5\u4F7F\u7528\u5E76\u884C\u6027",children:"\u66F4\u65B0 schedule \u4EE5\u4F7F\u7528\u5E76\u884C\u6027"}),"\n",(0,a.jsx)(n.p,{children:"\u524D\u9762\u5DF2\u7ECF\u8BB2\u89E3\u4E86 TE \u7684\u57FA\u7840\u77E5\u8BC6\uFF0C\u4E0B\u9762\u5C06\u66F4\u6DF1\u5165\u5730\u4E86\u89E3\u8C03\u5EA6\u7684\u4F5C\u7528\uFF0C\u4EE5\u53CA\u5982\u4F55\u4F7F\u7528\u5B83\u4EEC\u6765\u4F18\u5316\u4E0D\u540C\u67B6\u6784\u7684\u5F20\u91CF\u8868\u8FBE\u5F0F\u3002schedule \u662F\u7528\u591A\u79CD\u65B9\u5F0F\u6765\u8F6C\u6362\u8868\u8FBE\u5F0F\u7684\u4E00\u7CFB\u5217\u6B65\u9AA4\u3002\u5F53\u8C03\u5EA6\u5E94\u7528\u4E8E TE \u4E2D\u7684\u8868\u8FBE\u5F0F\u65F6\uFF0C\u8F93\u5165\u548C\u8F93\u51FA\u4FDD\u6301\u4E0D\u53D8\uFF0C\u4F46\u5728\u7F16\u8BD1\u65F6\uFF0C\u8868\u8FBE\u5F0F\u7684\u5B9E\u73B0\u4F1A\u53D1\u751F\u53D8\u5316\u3002\u9ED8\u8BA4\u8C03\u5EA6\u7684\u8FD9\u79CD\u5F20\u91CF\u52A0\u6CD5\u662F\u4E32\u884C\u8FD0\u884C\u7684\uFF0C\u4E0D\u8FC7\u53EF\u4EE5\u5F88\u5BB9\u6613\u5B9E\u73B0\u5728\u6240\u6709\u5904\u7406\u5668\u7EBF\u7A0B\u4E0A\u5E76\u884C\u5316\u3002\u5C06\u5E76\u884C\u8C03\u5EA6\u64CD\u4F5C\u5E94\u7528\u4E8E\u6211\u4EEC\u7684\u8BA1\u7B97\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"s[C].parallel(C.op.axis[0])\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"tvm.lower"})," \u547D\u4EE4\u4F1A\u751F\u6210 TE \u7684\u4E2D\u95F4\u8868\u793A\uFF08IR\uFF09\uFF0C\u4EE5\u53CA\u76F8\u5E94\u7684 schedule\u3002\u5E94\u7528\u4E0D\u540C\u7684\u8C03\u5EA6\u64CD\u4F5C\u65F6\u964D\u4F4E\u8868\u8FBE\u5F0F\uFF0C\u53EF\u4EE5\u770B\u5230\u8C03\u5EA6\u5BF9\u8BA1\u7B97\u987A\u5E8F\u7684\u5F71\u54CD\u3002\u7528\u6807\u5FD7 ",(0,a.jsx)(n.code,{children:"simple_mode=True"})," \u6765\u8FD4\u56DE\u53EF\u8BFB\u7684 C \u98CE\u683C\u8BED\u53E5\uFF1A"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"print(tvm.lower(s, [A, B, C], simple_mode=True))\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [(stride: int32*n: int32)], [], type="auto"),\n             B: Buffer(B_2: Pointer(float32), float32, [(stride_1: int32*n)], [], type="auto"),\n             C: Buffer(C_2: Pointer(float32), float32, [(stride_2: int32*n)], [], type="auto")}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [n], [stride], type="auto"), B_1: B_3: Buffer(B_2, float32, [n], [stride_1], type="auto"), C_1: C_3: Buffer(C_2, float32, [n], [stride_2], type="auto")} {\n  for (i: int32, 0, n) "parallel" {\n    C[(i*stride_2)] = (A[(i*stride)] + B[(i*stride_1)])\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"TVM \u73B0\u5728\u53EF\u4EE5\u5728\u72EC\u7ACB\u7684\u7EBF\u7A0B\u4E0A\u8FD0\u884C\u8FD9\u4E9B\u4EE3\u7801\u5757\u3002\u4E0B\u9762\u5C06\u5E76\u884C\u7F16\u8BD1\u5E76\u8FD0\u884C\u8FD9\u4E2A\u65B0\u7684 schedule\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'fadd_parallel = tvm.build(s, [A, B, C], tgt, name="myadd_parallel")\nfadd_parallel(a, b, c)\n\ntvm.testing.assert_allclose(c.numpy(), a.numpy() + b.numpy())\n\nevaluate_addition(fadd_parallel, tgt, "parallel", log=log)\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nparallel: 0.000006\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u66F4\u65B0-schedule-\u4EE5\u4F7F\u7528\u5411\u91CF\u5316",children:"\u66F4\u65B0 schedule \u4EE5\u4F7F\u7528\u5411\u91CF\u5316"}),"\n",(0,a.jsx)(n.p,{children:"\u73B0\u4EE3 CPU \u53EF\u4EE5\u5BF9\u6D6E\u70B9\u503C\u6267\u884C SIMD \u64CD\u4F5C\uFF0C\u5229\u7528\u8FD9\u4E00\u4F18\u52BF\uFF0C\u53EF\u5C06\u53E6\u4E00\u4E2A\u8C03\u5EA6\u5E94\u7528\u4E8E\u8BA1\u7B97\u8868\u8FBE\u5F0F\u4E2D\u3002\u5B9E\u73B0\u8FD9\u4E00\u70B9\u9700\u8981\u591A\u4E2A\u6B65\u9AA4\uFF1A\u9996\u5148\uFF0C\u7528\u62C6\u5206\u8C03\u5EA6\u539F\u8BED\u5C06\u8C03\u5EA6\u62C6\u5206\u4E3A\u5185\u90E8\u5FAA\u73AF\u548C\u5916\u90E8\u5FAA\u73AF\u3002\u5185\u90E8\u5FAA\u73AF\u53EF\u7528\u5411\u91CF\u5316\u8C03\u5EA6\u539F\u8BED\u6765\u8C03\u7528 SIMD \u6307\u4EE4\uFF0C\u7136\u540E\u53EF\u7528\u5E76\u884C\u8C03\u5EA6\u539F\u8BED\u5BF9\u5916\u90E8\u5FAA\u73AF\u8FDB\u884C\u5E76\u884C\u5316\u3002\u9009\u62E9\u62C6\u5206\u56E0\u5B50\u4F5C\u4E3A CPU \u4E0A\u7684\u7EBF\u7A0B\u6570\u91CF\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# \u91CD\u65B0\u521B\u5EFA schedule, \u56E0\u4E3A\u524D\u9762\u7684\u4F8B\u5B50\u5728\u5E76\u884C\u64CD\u4F5C\u4E2D\u4FEE\u6539\u4E86\u5B83\nn = te.var("n")\nA = te.placeholder((n,), name="A")\nB = te.placeholder((n,), name="B")\nC = te.compute(A.shape, lambda i: A[i] + B[i], name="C")\n\ns = te.create_schedule(C.op)\n\n# \u8FD9\u4E2A\u56E0\u5B50\u5E94\u8BE5\u548C\u9002\u5408 CPU \u7684\u7EBF\u7A0B\u6570\u91CF\u5339\u914D\u3002\n# \u8FD9\u4F1A\u56E0\u67B6\u6784\u5DEE\u5F02\u800C\u6709\u6240\u4E0D\u540C\uFF0C\u4E0D\u8FC7\u597D\u7684\u89C4\u5219\u662F\n# \u5C06\u8FD9\u4E2A\u56E0\u5B50\u8BBE\u7F6E\u4E3A CPU \u53EF\u7528\u5185\u6838\u6570\u91CF\u3002\nfactor = 4\n\nouter, inner = s[C].split(C.op.axis[0], factor=factor)\ns[C].parallel(outer)\ns[C].vectorize(inner)\n\nfadd_vector = tvm.build(s, [A, B, C], tgt, name="myadd_parallel")\n\nevaluate_addition(fadd_vector, tgt, "vector", log=log)\n\nprint(tvm.lower(s, [A, B, C], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nvector: 0.000024\n@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [(stride: int32*n: int32)], [], type="auto"),\n             B: Buffer(B_2: Pointer(float32), float32, [(stride_1: int32*n)], [], type="auto"),\n             C: Buffer(C_2: Pointer(float32), float32, [(stride_2: int32*n)], [], type="auto")}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [n], [stride], type="auto"), B_1: B_3: Buffer(B_2, float32, [n], [stride_1], type="auto"), C_1: C_3: Buffer(C_2, float32, [n], [stride_2], type="auto")} {\n  for (i.outer: int32, 0, floordiv((n + 3), 4)) "parallel" {\n    for (i.inner.s: int32, 0, 4) {\n      if @tir.likely((((i.outer*4) + i.inner.s) < n), dtype=bool) {\n        let cse_var_1: int32 = ((i.outer*4) + i.inner.s)\n        C[(cse_var_1*stride_2)] = (A[(cse_var_1*stride)] + B[(cse_var_1*stride_1)])\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u6BD4\u8F83\u4E0D\u540C\u7684-schedule",children:"\u6BD4\u8F83\u4E0D\u540C\u7684 schedule"}),"\n",(0,a.jsx)(n.p,{children:"\u73B0\u5728\u53EF\u4EE5\u5BF9\u4E0D\u540C\u7684 schedule \u8FDB\u884C\u6BD4\u8F83\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'baseline = log[0][1]\nprint("%s\\t%s\\t%s" % ("Operator".rjust(20), "Timing".rjust(20), "Performance".rjust(20)))\nfor result in log:\n    print(\n        "%s\\t%s\\t%s"\n        % (result[0].rjust(20), str(result[1]).rjust(20), str(result[1] / baseline).rjust(20))\n    )\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:"Operator                  Timing             Performance\n   numpy    7.816320003257716e-06                    1.0\n   naive    6.4633000000000004e-06    0.8268980795702072\nparallel              6.0509e-06       0.774136677807214\n  vector             2.39039e-05      3.0582038593656913\n"})}),"\n",(0,a.jsxs)(n.admonition,{title:"Code Specialization",type:"note",children:[(0,a.jsxs)(n.p,{children:["\u7531\u524D\u9762\u53EF\u77E5\uFF0C",(0,a.jsx)(n.code,{children:"A"}),"\u3001",(0,a.jsx)(n.code,{children:"B"})," \u548C ",(0,a.jsx)(n.code,{children:"C"})," \u7684\u58F0\u660E\u90FD\u91C7\u7528\u76F8\u540C\u7684 shape \u53C2\u6570 ",(0,a.jsx)(n.code,{children:"n"}),"\u3002\u57FA\u4E8E\u6B64\uFF0CTVM \u53EA\u9700\u5C06\u5355\u4E2A shape \u53C2\u6570\u4F20\u9012\u7ED9\u5185\u6838\uFF08\u5982\u4E0A\u9762\u6253\u5370\u7684\u8BBE\u5907\u4EE3\u7801\u6240\u793A\uFF09\uFF0C\u8FD9\u662F code specialization \u7684\u4E00\u79CD\u5F62\u5F0F\u3002"]}),(0,a.jsx)(n.p,{children:"\u5728\u5BBF\u4E3B\u673A\u4E0A\uFF0CTVM \u81EA\u52A8\u751F\u6210\u68C0\u67E5\u4EE3\u7801\u6765\u68C0\u67E5\u53C2\u6570\u4E2D\u7684\u7EA6\u675F\u3002\u56E0\u6B64\uFF0C\u5982\u679C\u5C06\u4E0D\u540C shape \u7684\u6570\u7EC4\u4F20\u9012\u7ED9 fadd\uFF0C\u5219\u4F1A\u5F15\u53D1\u9519\u8BEF\u3002"}),(0,a.jsxs)(n.p,{children:["\u6B64\u5916\uFF0C\u4EE3\u7801\u8FD8\u53EF\u4EE5\u5B9E\u73B0\u66F4\u591A specialization\u3002\u4F8B\u5982\uFF0C\u5728\u8BA1\u7B97\u58F0\u660E\u4E2D\u5199\u6210 ",(0,a.jsx)(n.code,{children:"n = tvm.runtime.convert(1024)"}),"\uFF0C\u800C\u4E0D\u662F ",(0,a.jsx)(n.code,{children:'n = te.var("n")'}),"\u3002\u751F\u6210\u7684\u51FD\u6570\u53EA\u4F1A\u63A5\u6536\u957F\u5EA6\u4E3A 1024 \u7684\u5411\u91CF\u3002"]})]}),"\n",(0,a.jsx)(n.p,{children:"\u7ECF\u8FC7\u4E0A\u8FF0\u6B65\u9AA4\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5BF9\u5411\u91CF\u52A0\u6CD5\u7B97\u5B50\uFF08vector addition operator\uFF09\u8FDB\u884C\u4E86\u5B9A\u4E49\u3001\u8C03\u5EA6\u548C\u7F16\u8BD1\uFF0C\u63A5\u4E0B\u6765\u5728 TVM runtime \u6267\u884C\u3002\u5C06\u7B97\u5B50\u4FDD\u5B58\u4E3A\u4E00\u4E2A\u5E93\uFF0C\u4E4B\u540E\u53EF\u4EE5\u5728 TVM runtime \u4E2D\u52A0\u8F7D\u3002"}),"\n",(0,a.jsx)(n.h3,{id:"gpu-\u7684\u76EE\u6807\u5411\u91CF\u52A0\u6CD5\u53EF\u9009",children:"GPU \u7684\u76EE\u6807\u5411\u91CF\u52A0\u6CD5\uFF08\u53EF\u9009\uFF09"}),"\n",(0,a.jsx)(n.p,{children:"TVM \u9002\u7528\u4E8E\u591A\u79CD\u67B6\u6784\u3002\u4E0B\u9762\u7684\u793A\u4F8B\u5C06\u9488\u5BF9 GPU \u7684\u5411\u91CF\u52A0\u6CD5\u8FDB\u884C\u7F16\u8BD1\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# \u8981\u8FD0\u884C\u8FD9\u4E2A\u4EE3\u7801, \u66F4\u6539\u4E3A `run_cuda = True`\n# \u6CE8\u610F\uFF1A\u9ED8\u8BA4\u8FD9\u4E2A\u793A\u4F8B\u4E0D\u5728 CI \u6587\u6863\u4E0A\u8FD0\u884C\n\nrun_cuda = False\nif run_cuda:\n    # \u5C06\u8FD9\u4E2A target \u6539\u4E3A\u4F60 GPU \u7684\u6B63\u786E\u540E\u7AEF\u3002\u4F8B\u5982\uFF1ANVIDIA GPUs\uFF1Acuda\uFF1BRadeon GPUS\uFF1Arocm\uFF1Bopencl\uFF1AOpenCL\n    tgt_gpu = tvm.target.Target(target="cuda", host="llvm")\n\n    # \u91CD\u65B0\u521B\u5EFA schedule\n    n = te.var("n")\n    A = te.placeholder((n,), name="A")\n    B = te.placeholder((n,), name="B")\n    C = te.compute(A.shape, lambda i: A[i] + B[i], name="C")\n    print(type(C))\n\n    s = te.create_schedule(C.op)\n\n    bx, tx = s[C].split(C.op.axis[0], factor=64)\n\n    ################################################################################\n    # \u6700\u7EC8\u5FC5\u987B\u5C06\u8FED\u4EE3\u8F74 bx \u548C tx \u548C GPU \u8BA1\u7B97\u7F51\u683C\u7ED1\u5B9A\u3002\n    # \u539F\u751F schedule \u5BF9 GPU \u662F\u65E0\u6548\u7684, \u8FD9\u4E9B\u662F\u5141\u8BB8\u6211\u4EEC\u751F\u6210\u53EF\u5728 GPU \u4E0A\u8FD0\u884C\u7684\u4EE3\u7801\u7684\u7279\u6B8A\u6784\u9020\n\n    s[C].bind(bx, te.thread_axis("blockIdx.x"))\n    s[C].bind(tx, te.thread_axis("threadIdx.x"))\n\n    ######################################################################\n    # \u7F16\u8BD1\n    # -----------\n    # \u6307\u5B9A schedule \u540E, \u53EF\u5C06\u5B83\u7F16\u8BD1\u4E3A TVM \u51FD\u6570\u3002\n    # \u9ED8\u8BA4 TVM \u7F16\u8BD1\u4E3A\u53EF\u76F4\u63A5\u4ECE Python \u7AEF\u8C03\u7528\u7684\u7C7B\u578B\u64E6\u9664\u51FD\u6570\u3002\n    #\n    # \u4E0B\u9762\u5C06\u7528 tvm.build \u6765\u521B\u5EFA\u51FD\u6570\u3002\n    # build \u51FD\u6570\u63A5\u6536 schedule\u3001\u6240\u9700\u7684\u51FD\u6570\u7B7E\u540D\uFF08\u5305\u62EC\u8F93\u5165\u548C\u8F93\u51FA\uFF09\u4EE5\u53CA\u8981\u7F16\u8BD1\u5230\u7684\u76EE\u6807\u8BED\u8A00\u3002\n    #\n    # fadd \u7684\u7F16\u8BD1\u7ED3\u679C\u662F GPU \u8BBE\u5907\u51FD\u6570\uFF08\u5982\u679C\u5229\u7528\u4E86 GPU\uFF09\u4EE5\u53CA\u8C03\u7528 GPU \u51FD\u6570\u7684\u4E3B\u673A wrapper\u3002\n    # fadd \u662F\u751F\u6210\u7684\u4E3B\u673A wrapper \u51FD\u6570\uFF0C\u5B83\u5305\u542B\u5BF9\u5185\u90E8\u751F\u6210\u7684\u8BBE\u5907\u51FD\u6570\u7684\u5F15\u7528\u3002\n\n    fadd = tvm.build(s, [A, B, C], target=tgt_gpu, name="myadd")\n\n    ################################################################################\n    # \u7F16\u8BD1\u540E\u7684 TVM \u51FD\u6570\u63D0\u4F9B\u4E86\u4E00\u4E2A\u4EFB\u4F55\u8BED\u8A00\u90FD\u53EF\u8C03\u7528\u7684 C API\u3002\n    #\n    # \u6211\u4EEC\u5728 Python \u4E2D\u63D0\u4F9B\u4E86\u6700\u5C0F\u6570\u7EC4 API \u6765\u8FDB\u884C\u5FEB\u901F\u6D4B\u8BD5\u4EE5\u53CA\u5236\u4F5C\u539F\u578B\u3002\n    # \u6570\u7EC4 API \u57FA\u4E8E `DLPack [https://github.com/dmlc/dlpack](https://github.com/dmlc/dlpack)`_ \u6807\u51C6\u3002\n    #\n    # - \u9996\u5148\u521B\u5EFA GPU \u8BBE\u5907\u3002\n    # - \u7136\u540E tvm.nd.array \u5C06\u6570\u636E\u590D\u5236\u5230 GPU \u4E0A\u3002\n    # - `fadd` \u8FD0\u884C\u771F\u5B9E\u7684\u8BA1\u7B97\u3002\n    # - `numpy()` \u5C06 GPU \u6570\u7EC4\u590D\u5236\u56DE CPU \u4E0A\uFF08\u7136\u540E\u9A8C\u8BC1\u6B63\u786E\u6027\uFF09\u3002\n    #\n    # \u6CE8\u610F\u5C06\u6570\u636E\u590D\u5236\u8FDB\u51FA\u5185\u5B58\u662F\u5FC5\u8981\u6B65\u9AA4\u3002\n\n    dev = tvm.device(tgt_gpu.kind.name, 0)\n\n    n = 1024\n    a = tvm.nd.array(np.random.uniform(size=n).astype(A.dtype), dev)\n    b = tvm.nd.array(np.random.uniform(size=n).astype(B.dtype), dev)\n    c = tvm.nd.array(np.zeros(n, dtype=C.dtype), dev)\n    fadd(a, b, c)\n    tvm.testing.assert_allclose(c.numpy(), a.numpy() + b.numpy())\n\n    ################################################################################\n    # \u68C0\u67E5\u751F\u6210\u7684 GPU \u4EE3\u7801\n    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    # \u53EF\u4EE5\u5728 TVM \u4E2D\u68C0\u67E5\u751F\u6210\u7684\u4EE3\u7801\u3002tvm.build \u7684\u7ED3\u679C\u662F\u4E00\u4E2A TVM \u6A21\u5757\u3002fadd \u662F\u5305\u542B\u4E3B\u673A\u6A21\u5757\u7684\u4E3B\u673A wrapper\uFF0C\u5BF9 CUDA\uFF08GPU\uFF09\u51FD\u6570\u6765\u8BF4\u5B83\u8FD8\u5305\u542B\u8BBE\u5907\u6A21\u5757\u3002\n    #\n    # \u4E0B\u9762\u7684\u4EE3\u7801\u4ECE\u8BBE\u5907\u6A21\u5757\u4E2D\u53D6\u51FA\u5E76\u6253\u5370\u5185\u5BB9\u4EE3\u7801\u3002\n\n    if (\n        tgt_gpu.kind.name == "cuda"\n        or tgt_gpu.kind.name == "rocm"\n        or tgt_gpu.kind.name.startswith("opencl")\n    ):\n        dev_module = fadd.imported_modules[0]\n        print("-----GPU code-----")\n        print(dev_module.get_source())\n    else:\n        print(fadd.get_source())\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u4FDD\u5B58\u548C\u52A0\u8F7D\u5DF2\u7F16\u8BD1\u7684\u6A21\u5757",children:"\u4FDD\u5B58\u548C\u52A0\u8F7D\u5DF2\u7F16\u8BD1\u7684\u6A21\u5757"}),"\n",(0,a.jsx)(n.p,{children:"\u9664\u4E86 runtime \u7F16\u8BD1\u5916\uFF0C\u8FD8\u53EF\u5C06\u7F16\u8BD1\u540E\u7684\u6A21\u5757\u4FDD\u5B58\u5230\u6587\u4EF6\u4E2D\uFF0C\u4E4B\u540E\u518D\u8FDB\u884C\u52A0\u8F7D\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u4EE5\u4E0B\u4EE3\u7801\u9996\u5148\u6267\u884C\uFF1A"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u5C06\u7F16\u8BD1\u7684\u4E3B\u673A\u6A21\u5757\u4FDD\u5B58\u5230\u76EE\u6807\u6587\u4EF6\u4E2D\u3002"}),"\n",(0,a.jsx)(n.li,{children:"\u7136\u540E\u5C06\u8BBE\u5907\u6A21\u5757\u4FDD\u5B58\u5230 ptx \u6587\u4EF6\u4E2D\u3002"}),"\n",(0,a.jsx)(n.li,{children:"cc.create_shared \u8C03\u7528\u7F16\u8BD1\u5668\uFF08gcc\uFF09\u6765\u521B\u5EFA\u5171\u4EAB\u5E93\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from tvm.contrib import cc\nfrom tvm.contrib import utils\n\ntemp = utils.tempdir()\nfadd.save(temp.relpath("myadd.o"))\nif tgt.kind.name == "cuda":\n    fadd.imported_modules[0].save(temp.relpath("myadd.ptx"))\nif tgt.kind.name == "rocm":\n    fadd.imported_modules[0].save(temp.relpath("myadd.hsaco"))\nif tgt.kind.name.startswith("opencl"):\n    fadd.imported_modules[0].save(temp.relpath("myadd.cl"))\ncc.create_shared(temp.relpath("myadd.so"), [temp.relpath("myadd.o")])\nprint(temp.listdir())\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:"['myadd.o', 'myadd.so']\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u6A21\u5757\u5B58\u50A8\u683C\u5F0F\uFF1A"}),"\n",(0,a.jsx)(n.p,{children:"CPU\uFF08\u4E3B\u673A\uFF09\u6A21\u5757\u76F4\u63A5\u4FDD\u5B58\u4E3A\u5171\u4EAB\u5E93\uFF08.so\uFF09\u3002\u8BBE\u5907\u4EE3\u7801\u6709\u591A\u79CD\u81EA\u5B9A\u4E49\u683C\u5F0F\u3002\u5728\u6211\u4EEC\u7684\u793A\u4F8B\u4E2D\uFF0C\u8BBE\u5907\u4EE3\u7801\u5B58\u50A8\u5728 ptx \u4EE5\u53CA\u5143\u6570\u636E json \u6587\u4EF6\u4E2D\u3002\u5B83\u4EEC\u53EF\u4EE5\u5206\u522B\u5BFC\u5165\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5355\u72EC\u52A0\u8F7D\u548C\u94FE\u63A5\u3002"}),"\n",(0,a.jsx)(n.h3,{id:"\u52A0\u8F7D\u7F16\u8BD1\u6A21\u5757",children:"\u52A0\u8F7D\u7F16\u8BD1\u6A21\u5757"}),"\n",(0,a.jsx)(n.p,{children:"\u53EF\u4ECE\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u52A0\u8F7D\u7F16\u8BD1\u597D\u7684\u6A21\u5757\u5E76\u8FD0\u884C\u4EE3\u7801\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u5206\u522B\u52A0\u8F7D\u4E3B\u673A\u548C\u8BBE\u5907\u6A21\u5757\uFF0C\u5E76\u5C06\u5B83\u4EEC\u94FE\u63A5\u5728\u4E00\u8D77\u3002\u53EF\u4EE5\u9A8C\u8BC1\u65B0\u52A0\u8F7D\u7684\u51FD\u6570\u662F\u5426\u6709\u6548\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'fadd1 = tvm.runtime.load_module(temp.relpath("myadd.so"))\nif tgt.kind.name == "cuda":\n    fadd1_dev = tvm.runtime.load_module(temp.relpath("myadd.ptx"))\n    fadd1.import_module(fadd1_dev)\n\nif tgt.kind.name == "rocm":\n    fadd1_dev = tvm.runtime.load_module(temp.relpath("myadd.hsaco"))\n    fadd1.import_module(fadd1_dev)\n\nif tgt.kind.name.startswith("opencl"):\n    fadd1_dev = tvm.runtime.load_module(temp.relpath("myadd.cl"))\n    fadd1.import_module(fadd1_dev)\n\nfadd1(a, b, c)\ntvm.testing.assert_allclose(c.numpy(), a.numpy() + b.numpy())\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u5C06\u6240\u6709\u5185\u5BB9\u6253\u5305\u5230\u4E00\u4E2A\u5E93\u4E2D",children:"\u5C06\u6240\u6709\u5185\u5BB9\u6253\u5305\u5230\u4E00\u4E2A\u5E93\u4E2D"}),"\n",(0,a.jsx)(n.p,{children:"\u4E0A\u9762\u7684\u793A\u4F8B\u5206\u522B\u5B58\u50A8\u4E86\u8BBE\u5907\u548C\u4E3B\u673A\u4EE3\u7801\u3002 TVM \u8FD8\u652F\u6301\u5C06\u6240\u6709\u5185\u5BB9\u5BFC\u51FA\u4E3A\u4E00\u4E2A\u5171\u4EAB\u5E93\u3002\u5728\u540E\u53F0\uFF0C\u5C06\u8BBE\u5907\u6A21\u5757\u6253\u5305\u6210\u4E8C\u8FDB\u5236 blob\uFF0C\u5E76\u5C06\u5B83\u4EEC\u4E0E\u4E3B\u673A\u4EE3\u7801\u94FE\u63A5\u5728\u4E00\u8D77\u3002\u76EE\u524D\u652F\u6301 Metal\u3001OpenCL \u548C CUDA \u6A21\u5757\u7684\u6253\u5305\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'fadd.export_library(temp.relpath("myadd_pack.so"))\nfadd2 = tvm.runtime.load_module(temp.relpath("myadd_pack.so"))\nfadd2(a, b, c)\ntvm.testing.assert_allclose(c.numpy(), a.numpy() + b.numpy())\n'})}),"\n",(0,a.jsxs)(n.admonition,{title:"runtime API \u548C\u7EBF\u7A0B\u5B89\u5168",type:"note",children:[(0,a.jsx)(n.p,{children:"TVM \u7684\u7F16\u8BD1\u6A21\u5757\u4E0D\u4F9D\u8D56\u4E8E TVM \u7F16\u8BD1\u5668\uFF0C\u5B83\u4EEC\u53EA\u4F9D\u8D56\u4E8E\u6700\u5C0F\u7684 runtime \u5E93\u3002 TVM runtime \u5E93\u5C01\u88C5\u4E86\u8BBE\u5907\u9A71\u52A8\u7A0B\u5E8F\uFF0C\u5E76\u5728\u7F16\u8BD1\u540E\u7684\u51FD\u6570\u4E2D\u63D0\u4F9B\u7EBF\u7A0B\u5B89\u5168\u548C device-agnostic \u7684\u8C03\u7528\u3002"}),(0,a.jsx)(n.p,{children:"\u8FD9\u610F\u5473\u7740\uFF0C\u53EF\u4EE5\u4ECE\u4EFB\u4F55\u7EBF\u7A0B\uFF0C\u5728\u4EFB\u4F55\u5DF2\u7ECF\u7F16\u8BD1\u4E86\u4EE3\u7801\u7684 GPU \u4E0A\u8C03\u7528\u5DF2\u7F16\u8BD1\u7684 TVM \u51FD\u6570\u3002"})]}),"\n",(0,a.jsx)(n.h2,{id:"\u751F\u6210-opencl-\u4EE3\u7801",children:"\u751F\u6210 OpenCL \u4EE3\u7801"}),"\n",(0,a.jsx)(n.p,{children:"TVM \u4E3A\u591A\u4E2A\u540E\u7AEF\u63D0\u4F9B\u4EE3\u7801\u751F\u6210\u529F\u80FD\u3002\u53EF\u4EE5\u751F\u6210\u5728 CPU \u540E\u7AEF\u8FD0\u884C\u7684 OpenCL \u4EE3\u7801\u6216 LLVM \u4EE3\u7801\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u4E0B\u9762\u7684\u4EE3\u7801\u5757\u9996\u5148\u751F\u6210 OpenCL \u4EE3\u7801\uFF0C\u7136\u540E\u5728 OpenCL \u8BBE\u5907\u4E0A\u521B\u5EFA\u6570\u7EC4\uFF0C\u6700\u540E\u9A8C\u8BC1\u4EE3\u7801\u7684\u6B63\u786E\u6027\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'if tgt.kind.name.startswith("opencl"):\n    fadd_cl = tvm.build(s, [A, B, C], tgt, name="myadd")\n    print("------opencl code------")\n    print(fadd_cl.imported_modules[0].get_source())\n    dev = tvm.cl(0)\n    n = 1024\n    a = tvm.nd.array(np.random.uniform(size=n).astype(A.dtype), dev)\n    b = tvm.nd.array(np.random.uniform(size=n).astype(B.dtype), dev)\n    c = tvm.nd.array(np.zeros(n, dtype=C.dtype), dev)\n    fadd_cl(a, b, c)\n    tvm.testing.assert_allclose(c.numpy(), a.numpy() + b.numpy())\n'})}),"\n",(0,a.jsxs)(n.admonition,{title:"TE \u8C03\u5EA6\u539F\u8BED",type:"note",children:[(0,a.jsx)(n.p,{children:"TVM \u7684\u8C03\u5EA6\u539F\u8BED\u5305\u62EC\uFF1A"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"split\uFF1A\u5C06\u6307\u5B9A\u7684\u8F74\u6309\u5B9A\u4E49\u7684\u56E0\u5B50\u62C6\u5206\u4E3A\u4E24\u4E2A\u8F74\u3002"}),"\n",(0,a.jsx)(n.li,{children:"tile\uFF1A\u901A\u8FC7\u5B9A\u4E49\u7684\u56E0\u5B50\u5C06\u8BA1\u7B97\u62C6\u5206\u5230\u4E24\u4E2A\u8F74\u4E0A\u3002"}),"\n",(0,a.jsx)(n.li,{children:"fuse\uFF1A\u5C06\u4E00\u4E2A\u8BA1\u7B97\u7684\u4E24\u4E2A\u8FDE\u7EED\u8F74\u878D\u5408\u3002"}),"\n",(0,a.jsx)(n.li,{children:"reorder\uFF1A\u53EF\u4EE5\u5C06\u8BA1\u7B97\u7684\u8F74\u91CD\u65B0\u6392\u5E8F\u4E3A\u5B9A\u4E49\u7684\u987A\u5E8F\u3002"}),"\n",(0,a.jsx)(n.li,{children:"bind\uFF1A\u53EF\u4EE5\u5C06\u8BA1\u7B97\u7ED1\u5B9A\u5230\u7279\u5B9A\u7EBF\u7A0B\uFF0C\u5728 GPU \u7F16\u7A0B\u4E2D\u5F88\u6709\u7528\u3002"}),"\n",(0,a.jsx)(n.li,{children:"compute_at\uFF1ATVM \u9ED8\u8BA4\u5C06\u5728\u51FD\u6570\u7684\u6700\u5916\u5C42\u6216\u6839\u90E8\u8BA1\u7B97\u5F20\u91CF\u3002 compute_at \u6307\u5B9A\u5E94\u8BE5\u5728\u53E6\u4E00\u4E2A\u7B97\u5B50\u7684\u7B2C\u4E00\u4E2A\u8BA1\u7B97\u8F74\u4E0A\u8BA1\u7B97\u4E00\u4E2A\u5F20\u91CF\u3002"}),"\n",(0,a.jsx)(n.li,{children:"compute_inline\uFF1A\u5F53\u6807\u8BB0\u4E3A inline \u65F6\uFF0C\u8BA1\u7B97\u5C06\u88AB\u6269\u5C55\uFF0C\u7136\u540E\u63D2\u5165\u5230\u9700\u8981\u5F20\u91CF\u7684\u5730\u5740\u4E2D\u3002"}),"\n",(0,a.jsx)(n.li,{children:"compute_root\uFF1A\u5C06\u8BA1\u7B97\u79FB\u52A8\u5230\u51FD\u6570\u7684\u6700\u5916\u5C42\u6216\u6839\u90E8\u3002\u8FD9\u610F\u5473\u7740\u5F53\u524D\u9636\u6BB5\u7684\u8BA1\u7B97\u5B8C\u5168\u5B8C\u6210\u540E\u624D\u53EF\u8FDB\u5165\u4E0B\u4E00\u9636\u6BB5\u3002"}),"\n"]}),(0,a.jsxs)(n.p,{children:["\u539F\u8BED\u7684\u5B8C\u6574\u63CF\u8FF0\u53C2\u8003 ",(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/work_with_schedules/schedule_primitives.html#schedule-primitives",children:"Schedule Primitives"})," \u6587\u6863\u3002"]})]}),"\n",(0,a.jsx)(n.h2,{id:"\u793A\u4F8B-2\u4F7F\u7528-te-\u624B\u52A8\u4F18\u5316\u77E9\u9635\u4E58\u6CD5",children:"\u793A\u4F8B 2\uFF1A\u4F7F\u7528 TE \u624B\u52A8\u4F18\u5316\u77E9\u9635\u4E58\u6CD5"}),"\n",(0,a.jsx)(n.p,{children:"\u73B0\u5728\u6765\u770B\u7B2C\u4E8C\u4E2A\u66F4\u9AD8\u7EA7\u7684\u793A\u4F8B\uFF0C\u6F14\u793A\u4E86 TVM \u5982\u4F55\u4EC5\u4F7F\u7528 18 \u884C Python \u4EE3\u7801\uFF0C\u5C06\u5E38\u89C1\u7684\u77E9\u9635\u4E58\u6CD5\u8FD0\u7B97\u901F\u5EA6\u63D0\u9AD8 18 \u500D\u3002"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"\u77E9\u9635\u4E58\u6CD5\u662F\u8BA1\u7B97\u5BC6\u96C6\u578B\u8FD0\u7B97\u3002\u4E3A\u53D6\u5F97\u826F\u597D\u7684 CPU \u6027\u80FD\uFF0C\u6709\u4E24\u4E2A\u91CD\u8981\u7684\u4F18\u5316\uFF1A"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"\u63D0\u9AD8\u5185\u5B58\u8BBF\u95EE\u7684\u7F13\u5B58\u547D\u4E2D\u7387\u3002\u9AD8\u7F13\u5B58\u547D\u4E2D\u7387\u53EF\u4EE5\u52A0\u901F\u590D\u6742\u7684\u6570\u503C\u8BA1\u7B97\u548C\u70ED\u70B9\u5185\u5B58\u8BBF\u95EE\u3002\u8FD9\u9700\u8981\u5C06\u539F\u59CB\u5185\u5B58\u8BBF\u95EE\u6A21\u5F0F\u8F6C\u6362\u4E3A\u9002\u5408\u7F13\u5B58\u7B56\u7565\u7684\u6A21\u5F0F\u3002"}),"\n",(0,a.jsx)(n.li,{children:"SIMD\uFF08\u5355\u6307\u4EE4\u591A\u6570\u636E\uFF09\uFF0C\u53C8\u79F0\u5411\u91CF\u5904\u7406\u5355\u5143\u3002\u5728\u6BCF\u4E2A\u5FAA\u73AF\u4E2D\uFF0CSIMD \u53EF\u4EE5\u5904\u7406\u4E00\u5C0F\u6279\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u5904\u7406\u5355\u4E2A\u503C\u3002\u8FD9\u9700\u8981\u5C06\u5FAA\u73AF\u4F53\u4E2D\u7684\u6570\u636E\u8BBF\u95EE\u6A21\u5F0F\u8F6C\u6362\u4E3A\u7EDF\u4E00\u6A21\u5F0F\uFF0C\u4EE5\u4FBF LLVM \u540E\u7AEF\u53EF\u5C06\u5176\u964D\u4F4E\u5230 SIMD\u3002"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["\u672C\u6559\u7A0B\u4F7F\u7528\u7684\u6280\u672F\u51FA\u81EA\u6B64 ",(0,a.jsx)(n.a,{href:"https://github.com/flame/how-to-optimize-gemm",children:"\u4ED3\u5E93"}),"\u3002\u5176\u4E2D\u4E00\u4E9B\u5DF2\u7ECF\u81EA\u52A8\u88AB TVM \u62BD\u8C61\u5730\u5E94\u7528\uFF0C\u4F46\u53E6\u4E00\u4E9B\u7531\u4E8E TVM \u7684\u9650\u5236\u800C\u65E0\u6CD5\u81EA\u52A8\u5E94\u7528\u3002"]}),"\n",(0,a.jsx)(n.h3,{id:"\u51C6\u5907\u548C\u6027\u80FD\u57FA\u7EBF",children:"\u51C6\u5907\u548C\u6027\u80FD\u57FA\u7EBF"}),"\n",(0,a.jsx)(n.p,{children:"\u9996\u5148\u6536\u96C6\u6709\u5173\u77E9\u9635\u4E58\u6CD5\u7684 numpy \u5B9E\u73B0\u7684\u6027\u80FD\u6570\u636E\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import tvm\nimport tvm.testing\nfrom tvm import te\nimport numpy\n\n# \u77E9\u9635\u7684\u5927\u5C0F\n# (M, K) x (K, N)\n# \u53EF\u5C1D\u8BD5\u4E0D\u540C\u7684 shape\uFF0CTVM \u4F18\u5316\u7684\u6027\u80FD\u6709\u65F6\u6BD4 numpy + MKL \u66F4\u597D\nM = 1024\nK = 1024\nN = 1024\n\n# TVM \u9ED8\u8BA4\u5F20\u91CF\u6570\u636E\u7C7B\u578B\ndtype = "float32"\n\n# \u4F60\u53EF\u80FD\u60F3\u8C03\u6574 target \u4F7F\u5176\u548C\u4F60\u7684\u4EFB\u4F55 CPU \u5411\u91CF\u6269\u5C55\u5339\u914D\n# \u4F8B\u5982\uFF0C\u5982\u679C\u4F60\u4E3A SIMD \u7528\u7684\u662F Intel AVX2\uFF08\u9AD8\u7EA7\u5411\u91CF\u6269\u5C55\uFF09ISA\uFF0C\u628A\u4E0B\u9762\u8FD9\u884C\u6362\u6210 `llvm -mcpu=core-avx2` \u53EF\u4EE5\u53D6\u5F97\u6700\u4F73\u6027\u80FD\uFF08\u6216\u8005\u4F60\u6240\u7528 CPU \u7684\u5177\u4F53\u7C7B\u578B\uFF09\n# \u8BB0\u4F4F\u4F60\u7528\u7684\u662F llvm, \u53EF\u4EE5\u7528 `llc --version` \u547D\u4EE4\u6765\u83B7\u53D6 CPU \u7C7B\u578B\uFF0C\u4E5F\u53EF\u4EE5\u67E5\u770B `/proc/cpuinfo` \u6765\u83B7\u53D6\u4F60\u5904\u7406\u5668\u652F\u6301\u7684\u66F4\u591A\u6269\u5C55\n\ntarget = tvm.target.Target(target="llvm", host="llvm")\ndev = tvm.device(target.kind.name, 0)\n\n# \u4E3A\u6D4B\u8BD5\u968F\u673A\u751F\u6210\u7684\u5F20\u91CF\na = tvm.nd.array(numpy.random.rand(M, K).astype(dtype), dev)\nb = tvm.nd.array(numpy.random.rand(K, N).astype(dtype), dev)\n\n# \u91CD\u590D\u6267\u884C\u77E9\u9635\u4E58\u6CD5\u4EE5\u83B7\u5F97\u9ED8\u8BA4 numpy \u5B9E\u73B0\u7684\u6027\u80FD\u57FA\u7EBF\nnp_repeat = 100\nnp_running_time = timeit.timeit(\n    setup="import numpy\\n"\n    "M = " + str(M) + "\\n"\n    "K = " + str(K) + "\\n"\n    "N = " + str(N) + "\\n"\n    \'dtype = "float32"\\n\'\n    "a = numpy.random.rand(M, K).astype(dtype)\\n"\n    "b = numpy.random.rand(K, N).astype(dtype)\\n",\n    stmt="answer = numpy.dot(a, b)",\n    number=np_repeat,\n)\nprint("Numpy running time: %f" % (np_running_time / np_repeat))\n\nanswer = numpy.dot(a.numpy(), b.numpy())\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:"Numpy running time: 0.019016\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u7528 TVM TE \u7F16\u5199\u4E00\u4E2A\u57FA\u672C\u7684\u77E9\u9635\u4E58\u6CD5\uFF0C\u5E76\u9A8C\u8BC1\u5B83\u662F\u5426\u4EA7\u751F\u4E0E numpy \u5B9E\u73B0\u76F8\u540C\u7684\u7ED3\u679C\u3002\u518D\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u8F85\u52A9\u8BC4\u4F30\u8C03\u5EA6\u4F18\u5316\u7684\u6027\u80FD\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# \u7528 TE \u7684 TVM \u77E9\u9635\u4E58\u6CD5\nk = te.reduce_axis((0, K), "k")\nA = te.placeholder((M, K), name="A")\nB = te.placeholder((K, N), name="B")\nC = te.compute((M, N), lambda x, y: te.sum(A[x, k] * B[k, y], axis=k), name="C")\n\n# \u9ED8\u8BA4 schedule\ns = te.create_schedule(C.op)\nfunc = tvm.build(s, [A, B, C], target=target, name="mmult")\n\nc = tvm.nd.array(numpy.zeros((M, N), dtype=dtype), dev)\nfunc(a, b, c)\ntvm.testing.assert_allclose(c.numpy(), answer, rtol=1e-5)\n\ndef evaluate_operation(s, vars, target, name, optimization, log):\n    func = tvm.build(s, [A, B, C], target=target, name="mmult")\n    assert func\n\n    c = tvm.nd.array(numpy.zeros((M, N), dtype=dtype), dev)\n    func(a, b, c)\n    tvm.testing.assert_allclose(c.numpy(), answer, rtol=1e-5)\n\n    evaluator = func.time_evaluator(func.entry_name, dev, number=10)\n    mean_time = evaluator(a, b, c).mean\n    print("%s: %f" % (optimization, mean_time))\n    log.append((optimization, mean_time))\n\nlog = []\n\nevaluate_operation(s, [A, B, C], target=target, name="mmult", optimization="none", log=log)\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nnone: 3.256676\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u67E5\u770B\u7528 TVM \u5E95\u5C42\u51FD\u6570\u7684\u7B97\u5B50\u548C\u9ED8\u8BA4\u8C03\u5EA6\u7684\u4E2D\u95F4\u8868\u793A\u3002\u6CE8\u610F\uFF0C\u8BE5\u5B9E\u73B0\u672C\u8D28\u4E0A\u662F\u77E9\u9635\u4E58\u6CD5\u7684\u7B80\u5355\u5B9E\u73B0\uFF0C\u5728 A \u548C B \u77E9\u9635\u7684\u7D22\u5F15\u4E0A\u4F7F\u7528\u4E09\u4E2A\u5D4C\u5957\u5FAA\u73AF\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"print(tvm.lower(s, [A, B, C], simple_mode=True))\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [1048576], []),\n             B: Buffer(B_2: Pointer(float32), float32, [1048576], []),\n             C: Buffer(C_2: Pointer(float32), float32, [1048576], [])}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [1024, 1024], []), B_1: B_3: Buffer(B_2, float32, [1024, 1024], []), C_1: C_3: Buffer(C_2, float32, [1024, 1024], [])} {\n  for (x: int32, 0, 1024) {\n    for (y: int32, 0, 1024) {\n      C[((x*1024) + y)] = 0f32\n      for (k: int32, 0, 1024) {\n        let cse_var_2: int32 = (x*1024)\n        let cse_var_1: int32 = (cse_var_2 + y)\n        C[cse_var_1] = (C[cse_var_1] + (A[(cse_var_2 + k)]*B[((k*1024) + y)]))\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u4F18\u5316\u4E00\u5757\u64CD\u4F5C",children:"\u4F18\u5316\u4E00\uFF1A\u5757\u64CD\u4F5C"}),"\n",(0,a.jsxs)(n.p,{children:["\u63D0\u9AD8\u7F13\u5B58\u547D\u4E2D\u7387\u7684\u4E00\u4E2A\u91CD\u8981\u6280\u5DE7\u662F\u5757\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u5728\u5176\u4E2D\u6784\u9020\u5185\u5B58\u8BBF\u95EE\uFF0C\u4F7F\u5757\u5185\u90E8\u662F\u4E00\u4E2A\u5177\u6709\u9AD8\u5185\u5B58\u5C40\u90E8\u6027\u7684\u5C0F\u90BB\u57DF\u3002\u672C\u6559\u7A0B\u9009\u62E9\u4E00\u4E2A 32 \u7684\u5757\u56E0\u5B50\uFF0C\u4F7F\u5F97\u4E00\u4E2A\u5757\u5C06\u586B\u5145 32",(0,a.jsx)(n.em,{children:"32"}),"sizeof(float) \u7684\u5185\u5B58\u533A\u57DF\u3002\u8FD9\u5BF9\u5E94\u4E8E 4KB \u7684\u7F13\u5B58\u5927\u5C0F\uFF0C\u800C L1 \u7F13\u5B58\u7684\u53C2\u8003\u7F13\u5B58\u5927\u5C0F\u4E3A 32 KB\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:["\u9996\u5148\u4E3A ",(0,a.jsx)(n.code,{children:"C"})," \u64CD\u4F5C\u521B\u5EFA\u4E00\u4E2A\u9ED8\u8BA4 schedule\uFF0C\u7136\u540E\u7528\u6307\u5B9A\u7684\u5757\u56E0\u5B50\u5BF9\u5176\u5E94\u7528 ",(0,a.jsx)(n.code,{children:"tile"})," \u8C03\u5EA6\u539F\u8BED\uFF0C\u8C03\u5EA6\u539F\u8BED\u8FD4\u56DE\u5411\u91CF ",(0,a.jsx)(n.code,{children:"[x_outer, y_outer, x_inner, y_inner]"}),"\uFF08\u4ECE\u6700\u5916\u5C42\u5230\u6700\u5185\u5C42\u7684\u7ED3\u679C\u5FAA\u73AF\u7684\u987A\u5E8F\uFF09\u3002\u7136\u540E\u5F97\u5230\u64CD\u4F5C\u8F93\u51FA\u7684\u5F52\u7EA6\u8F74\uFF0C\u5E76\u7528\u56E0\u5B50 4 \u5BF9\u5176\u6267\u884C\u62C6\u5206\u64CD\u4F5C\u3002\u8FD9\u4E2A\u56E0\u5B50\u5E76\u4E0D\u76F4\u63A5\u5F71\u54CD\u73B0\u5728\u6B63\u5728\u5904\u7406\u7684\u5757\u4F18\u5316\uFF0C\u4F46\u5728\u5E94\u7528\u5411\u91CF\u5316\u65F6\u5F88\u6709\u7528\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u65E2\u7136\u64CD\u4F5C\u5DF2\u7ECF\u5757\u7EA7\u5316\u4E86\uFF0C\u53EF\u5BF9\u8BA1\u7B97\u8FDB\u884C\u91CD\u65B0\u6392\u5E8F\uFF0C\u5C06\u5F52\u7EA6\u64CD\u4F5C\u653E\u5230\u8BA1\u7B97\u7684\u6700\u5916\u5C42\u5FAA\u73AF\u4E2D\uFF0C\u4FDD\u8BC1\u5757\u6570\u636E\u4FDD\u7559\u5728\u7F13\u5B58\u4E2D\u3002\u5B8C\u6210 schedule \u540E\uFF0C\u5C31\u53EF\u4EE5\u6784\u5EFA\u548C\u6D4B\u8BD5\u4E0E\u539F\u59CB schedule \u76F8\u6BD4\u7684\u6027\u80FD\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'bn = 32\n\n# \u901A\u8FC7\u5FAA\u73AF\u5207\u5206\u5B9E\u73B0\u5757\u7EA7\u5316\nxo, yo, xi, yi = s[C].tile(C.op.axis[0], C.op.axis[1], bn, bn)\n(k,) = s[C].op.reduce_axis\nko, ki = s[C].split(k, factor=4)\n\n# \u5C06\u5F52\u7EA6\u57DF\u63D0\u5347\u5230\u5757\u5FAA\u73AF\u5916\ns[C].reorder(xo, yo, ko, ki, xi, yi)\n\nevaluate_operation(s, [A, B, C], target=target, name="mmult", optimization="blocking", log=log)\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nblocking: 0.297447\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u5229\u7528\u7F13\u5B58\u5BF9\u8BA1\u7B97\u91CD\u65B0\u6392\u5E8F\uFF0C\u53EF\u53D1\u73B0\u8BA1\u7B97\u6027\u80FD\u7684\u663E\u7740\u63D0\u9AD8\u3002\u73B0\u5728\uFF0C\u6253\u5370\u5185\u90E8\u8868\u793A\uFF0C\u5E76\u5C06\u5176\u4E0E\u539F\u59CB\u8868\u793A\u8FDB\u884C\u6BD4\u8F83\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"print(tvm.lower(s, [A, B, C], simple_mode=True))\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [1048576], []),\n             B: Buffer(B_2: Pointer(float32), float32, [1048576], []),\n             C: Buffer(C_2: Pointer(float32), float32, [1048576], [])}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [1024, 1024], []), B_1: B_3: Buffer(B_2, float32, [1024, 1024], []), C_1: C_3: Buffer(C_2, float32, [1024, 1024], [])} {\n  for (x.outer: int32, 0, 32) {\n    for (y.outer: int32, 0, 32) {\n      for (x.inner.init: int32, 0, 32) {\n        for (y.inner.init: int32, 0, 32) {\n          C[((((x.outer*32768) + (x.inner.init*1024)) + (y.outer*32)) + y.inner.init)] = 0f32\n        }\n      }\n      for (k.outer: int32, 0, 256) {\n        for (k.inner: int32, 0, 4) {\n          for (x.inner: int32, 0, 32) {\n            for (y.inner: int32, 0, 32) {\n              let cse_var_3: int32 = (y.outer*32)\n              let cse_var_2: int32 = ((x.outer*32768) + (x.inner*1024))\n              let cse_var_1: int32 = ((cse_var_2 + cse_var_3) + y.inner)\n              C[cse_var_1] = (C[cse_var_1] + (A[((cse_var_2 + (k.outer*4)) + k.inner)]*B[((((k.outer*4096) + (k.inner*1024)) + cse_var_3) + y.inner)]))\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u4F18\u5316\u4E8C\u5411\u91CF\u5316",children:"\u4F18\u5316\u4E8C\uFF1A\u5411\u91CF\u5316"}),"\n",(0,a.jsxs)(n.p,{children:["\u53E6\u4E00\u4E2A\u91CD\u8981\u7684\u4F18\u5316\u6280\u5DE7\u662F\u5411\u91CF\u5316\u3002\u5F53\u5185\u5B58\u8BBF\u95EE\u6A21\u5F0F\u4E00\u81F4\u65F6\uFF0C\u7F16\u8BD1\u5668\u53EF\u4EE5\u68C0\u6D4B\u5230\u8FD9\u79CD\u6A21\u5F0F\uFF0C\u5E76\u5C06\u8FDE\u7EED\u5185\u5B58\u4F20\u9012\u7ED9 SIMD \u5411\u91CF\u5904\u7406\u5668\u3002\u5229\u7528 TVM \u4E2D\u8FD9\u4E2A\u786C\u4EF6\u7279\u6027\uFF0C\u53EF\u7528 ",(0,a.jsx)(n.code,{children:"vectorize"})," \u63A5\u53E3\u6765\u63D0\u793A\u7F16\u8BD1\u5668\u8FD9\u4E2A\u6A21\u5F0F\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u9009\u62E9\u5BF9\u5185\u90E8\u5FAA\u73AF\u884C\u6570\u636E\u8FDB\u884C\u5411\u91CF\u5316\uFF0C\u56E0\u4E3A\u5B83\u5728\u4E4B\u524D\u7684\u4F18\u5316\u4E2D\u5DF2\u7ECF\u53EF\u4EE5\u5F88\u597D\u5730\u7F13\u5B58\u4E86\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Apply the vectorization optimization\ns[C].vectorize(yi)\n\nevaluate_operation(s, [A, B, C], target=target, name="mmult", optimization="vectorization", log=log)\n\n# The generalized IR after vectorization\nprint(tvm.lower(s, [A, B, C], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nvectorization: 0.332722\n@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [1048576], []),\n             B: Buffer(B_2: Pointer(float32), float32, [1048576], []),\n             C: Buffer(C_2: Pointer(float32), float32, [1048576], [])}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [1024, 1024], []), B_1: B_3: Buffer(B_2, float32, [1024, 1024], []), C_1: C_3: Buffer(C_2, float32, [1024, 1024], [])} {\n  for (x.outer: int32, 0, 32) {\n    for (y.outer: int32, 0, 32) {\n      for (x.inner.init: int32, 0, 32) {\n        C[ramp((((x.outer*32768) + (x.inner.init*1024)) + (y.outer*32)), 1, 32)] = broadcast(0f32, 32)\n      }\n      for (k.outer: int32, 0, 256) {\n        for (k.inner: int32, 0, 4) {\n          for (x.inner: int32, 0, 32) {\n            let cse_var_3: int32 = (y.outer*32)\n            let cse_var_2: int32 = ((x.outer*32768) + (x.inner*1024))\n            let cse_var_1: int32 = (cse_var_2 + cse_var_3)\n            C[ramp(cse_var_1, 1, 32)] = (C[ramp(cse_var_1, 1, 32)] + (broadcast(A[((cse_var_2 + (k.outer*4)) + k.inner)], 32)*B[ramp((((k.outer*4096) + (k.inner*1024)) + cse_var_3), 1, 32)]))\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u4F18\u5316\u4E09\u5FAA\u73AF\u7F6E\u6362",children:"\u4F18\u5316\u4E09\uFF1A\u5FAA\u73AF\u7F6E\u6362"}),"\n",(0,a.jsxs)(n.p,{children:["\u67E5\u770B\u4E0A\u9762\u7684 IR\uFF0C\u53EF\u770B\u5230\u5185\u90E8\u5FAA\u73AF\u884C\u6570\u636E\u88AB\u5411\u91CF\u5316\uFF0C\u5E76\u4E14 B \u88AB\u8F6C\u6362\u4E3A PackedB\uFF08\u901A\u8FC7\u5185\u90E8\u5FAA\u73AF\u7684 ",(0,a.jsx)(n.em,{children:"(float32x32"}),")B2* \u90E8\u5206\u53EF\u660E\u663E\u770B\u51FA\uFF09\u3002 PackedB \u7684\u904D\u5386\u73B0\u5728\u662F\u987A\u5E8F\u7684\u3002\u5728\u5F53\u524D schedule \u4E2D\uFF0CA \u662F\u9010\u5217\u8BBF\u95EE\u7684\uFF0C\u8FD9\u5BF9\u7F13\u5B58\u4E0D\u5229\u3002\u5982\u679C\u6211\u4EEC\u6539\u53D8 ",(0,a.jsx)(n.em,{children:"ki"})," \u548C\u5185\u8F74 ",(0,a.jsx)(n.em,{children:"xi"})," \u7684\u5D4C\u5957\u5FAA\u73AF\u987A\u5E8F\uFF0CA \u77E9\u9635\u7684\u8BBF\u95EE\u6A21\u5F0F\u5C06\u66F4\u5229\u4E8E\u7F13\u5B58\u3002"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'s = te.create_schedule(C.op)\nxo, yo, xi, yi = s[C].tile(C.op.axis[0], C.op.axis[1], bn, bn)\n(k,) = s[C].op.reduce_axis\nko, ki = s[C].split(k, factor=4)\n\n# re-ordering\n# \u91CD\u65B0\u6392\u5E8F\ns[C].reorder(xo, yo, ko, xi, ki, yi)\ns[C].vectorize(yi)\n\nevaluate_operation(\n    s, [A, B, C], target=target, name="mmult", optimization="loop permutation", log=log\n)\n\n# Again, print the new generalized IR\n# \u518D\u6B21\u6253\u5370\u65B0\u751F\u6210\u7684 IR\nprint(tvm.lower(s, [A, B, C], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nloop permutation: 0.114844\n@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [1048576], []),\n             B: Buffer(B_2: Pointer(float32), float32, [1048576], []),\n             C: Buffer(C_2: Pointer(float32), float32, [1048576], [])}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [1024, 1024], []), B_1: B_3: Buffer(B_2, float32, [1024, 1024], []), C_1: C_3: Buffer(C_2, float32, [1024, 1024], [])} {\n  for (x.outer: int32, 0, 32) {\n    for (y.outer: int32, 0, 32) {\n      for (x.inner.init: int32, 0, 32) {\n        C[ramp((((x.outer*32768) + (x.inner.init*1024)) + (y.outer*32)), 1, 32)] = broadcast(0f32, 32)\n      }\n      for (k.outer: int32, 0, 256) {\n        for (x.inner: int32, 0, 32) {\n          for (k.inner: int32, 0, 4) {\n            let cse_var_3: int32 = (y.outer*32)\n            let cse_var_2: int32 = ((x.outer*32768) + (x.inner*1024))\n            let cse_var_1: int32 = (cse_var_2 + cse_var_3)\n            C[ramp(cse_var_1, 1, 32)] = (C[ramp(cse_var_1, 1, 32)] + (broadcast(A[((cse_var_2 + (k.outer*4)) + k.inner)], 32)*B[ramp((((k.outer*4096) + (k.inner*1024)) + cse_var_3), 1, 32)]))\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u4F18\u5316\u56DB\u6570\u7EC4\u6253\u5305",children:"\u4F18\u5316\u56DB\uFF1A\u6570\u7EC4\u6253\u5305"}),"\n",(0,a.jsx)(n.p,{children:"\u53E6\u4E00\u4E2A\u91CD\u8981\u7684\u6280\u5DE7\u662F\u6570\u7EC4\u6253\u5305\u3002\u5B83\u5BF9\u6570\u7EC4\u7684\u5B58\u50A8\u7EF4\u5EA6\u8FDB\u884C\u91CD\u65B0\u6392\u5E8F\uFF0C\u5C06\u67D0\u4E2A\u7EF4\u5EA6\u4E0A\u7684\u8FDE\u7EED\u8BBF\u95EE\u6A21\u5F0F\u8F6C\u6362\u4E3A\u5C55\u5F00\u540E\u7684\u987A\u5E8F\u6A21\u5F0F\u3002"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://github.com/dmlc/web-data/raw/main/tvm/tutorial/array-packing.png",alt:"https://github.com/dmlc/web-data/raw/main/tvm/tutorial/array-packing.png"})}),"\n",(0,a.jsxs)(n.p,{children:["\u5982\u4E0A\u56FE\u6240\u793A\uFF0C\u5C06\u8BA1\u7B97\u5757\u7EA7\u5316\uFF08block\uFF09\u540E\uFF0C\u53EF\u4EE5\u770B\u5230 B \u7684\u6570\u7EC4\u8BBF\u95EE\u6A21\u5F0F\uFF08\u5C55\u5F00\u540E\uFF09\u662F\u6709\u89C4\u5F8B\u4F46\u4E0D\u8FDE\u7EED\u7684\u3002\u6211\u4EEC\u671F\u671B\u7ECF\u8FC7\u4E00\u4E9B\u8F6C\u6362\u540E\uFF0C\u53EF\u5F97\u5230\u4E00\u4E2A\u6301\u7EED\u8BBF\u95EE\u6A21\u5F0F\u3002\u901A\u8FC7\u5C06 ",(0,a.jsx)(n.code,{children:"[16] [16]"})," \u6570\u7EC4\u91CD\u65B0\u6392\u5E8F\u4E3A ",(0,a.jsx)(n.code,{children:"[16/4] [16][4]"})," \u6570\u7EC4\uFF0C\u5F53\u4ECE\u6253\u5305\u6570\u7EC4\u4E2D\u83B7\u53D6\u76F8\u5E94\u503C\u65F6\uFF0CB \u7684\u8BBF\u95EE\u6A21\u5F0F\u662F\u987A\u5E8F\u7684\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u8003\u8651\u5230 B \u7684\u65B0\u5305\u88C5\uFF0C\u5FC5\u987B\u4ECE\u4E00\u4E2A\u65B0\u7684\u9ED8\u8BA4 schedule \u5F00\u59CB\u6765\u5B9E\u73B0\u8FD9\u4E00\u70B9\u3002\u503C\u5F97\u8BA8\u8BBA\u7684\u662F\uFF1ATE \u662F\u4E00\u79CD\u7528\u4E8E\u7F16\u5199\u4F18\u5316\u7B97\u5B50\u7684\u5F3A\u5927\u4E14\u5BCC\u6709\u8868\u73B0\u529B\u7684\u8BED\u8A00\uFF0C\u4F46\u5B83\u901A\u5E38\u9700\u8981\u4E00\u4E9B\u5173\u4E8E\u4F60\u6B63\u5728\u7F16\u5199\u7684\u5E95\u5C42\u7B97\u6CD5\u3001\u6570\u636E\u7ED3\u6784\u548C\u786C\u4EF6\u76EE\u6807\u7684\u77E5\u8BC6\u3002\u672C\u6559\u7A0B\u540E\u9762\u5C06\u8BA8\u8BBA\uFF0C\u5982\u4F55\u501F\u52A9 TVM \u5B8C\u6210\u90E8\u5206\u4EFB\u52A1\u3002\u4E0B\u9762\u7EE7\u7EED\u65B0\u7684\u4F18\u5316 schedule\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# We have to re-write the algorithm slightly.\n# \u6211\u4EEC\u5FC5\u987B\u7A0D\u4F5C\u6539\u52A8\u4EE5\u91CD\u5199\u7B97\u6CD5\u3002\npackedB = te.compute((N / bn, K, bn), lambda x, y, z: B[y, x * bn + z], name="packedB")\nC = te.compute(\n    (M, N),\n    lambda x, y: te.sum(A[x, k] * packedB[y // bn, k, tvm.tir.indexmod(y, bn)], axis=k),\n    name="C",\n)\n\ns = te.create_schedule(C.op)\n\nxo, yo, xi, yi = s[C].tile(C.op.axis[0], C.op.axis[1], bn, bn)\n(k,) = s[C].op.reduce_axis\nko, ki = s[C].split(k, factor=4)\n\ns[C].reorder(xo, yo, ko, xi, ki, yi)\ns[C].vectorize(yi)\n\nx, y, z = s[packedB].op.axis\ns[packedB].vectorize(z)\ns[packedB].parallel(x)\n\nevaluate_operation(s, [A, B, C], target=target, name="mmult", optimization="array packing", log=log)\n\n# Here is the generated IR after array packing.\n# \u6570\u7EC4\u6253\u5305\u540E\u751F\u6210\u7684 IR\u3002\nprint(tvm.lower(s, [A, B, C], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\narray packing: 0.106744\n@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [1048576], []),\n             B: Buffer(B_2: Pointer(float32), float32, [1048576], []),\n             C: Buffer(C_2: Pointer(float32), float32, [1048576], [])}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [1024, 1024], []), B_1: B_3: Buffer(B_2, float32, [1024, 1024], []), C_1: C_3: Buffer(C_2, float32, [1024, 1024], [])} {\n  allocate(packedB: Pointer(global float32x32), float32x32, [32768]), storage_scope = global {\n    for (x: int32, 0, 32) "parallel" {\n      for (y: int32, 0, 1024) {\n        packedB_1: Buffer(packedB, float32x32, [32768], [])[((x*1024) + y)] = B[ramp(((y*1024) + (x*32)), 1, 32)]\n      }\n    }\n    for (x.outer: int32, 0, 32) {\n      for (y.outer: int32, 0, 32) {\n        for (x.inner.init: int32, 0, 32) {\n          C[ramp((((x.outer*32768) + (x.inner.init*1024)) + (y.outer*32)), 1, 32)] = broadcast(0f32, 32)\n        }\n        for (k.outer: int32, 0, 256) {\n          for (x.inner: int32, 0, 32) {\n            for (k.inner: int32, 0, 4) {\n              let cse_var_3: int32 = ((x.outer*32768) + (x.inner*1024))\n              let cse_var_2: int32 = (k.outer*4)\n              let cse_var_1: int32 = (cse_var_3 + (y.outer*32))\n              C[ramp(cse_var_1, 1, 32)] = (C[ramp(cse_var_1, 1, 32)] + (broadcast(A[((cse_var_3 + cse_var_2) + k.inner)], 32)*packedB_1[(((y.outer*1024) + cse_var_2) + k.inner)]))\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u4F18\u5316\u4E94\u901A\u8FC7\u7F13\u5B58\u4F18\u5316\u5757\u5199\u5165",children:"\u4F18\u5316\u4E94\uFF1A\u901A\u8FC7\u7F13\u5B58\u4F18\u5316\u5757\u5199\u5165"}),"\n",(0,a.jsx)(n.p,{children:"\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u6240\u6709\u7684\u4F18\u5316\u90FD\u96C6\u4E2D\u5728\u6709\u6548\u5730\u8BBF\u95EE\u548C\u8BA1\u7B97\u6765\u81EA A \u548C B \u77E9\u9635\u7684\u6570\u636E\uFF0C\u4ECE\u800C\u8BA1\u7B97 C \u77E9\u9635\u3002\u5206\u5757\u4F18\u5316\u540E\uFF0C\u7B97\u5B50\u4F1A\u9010\u5757\u5C06\u7ED3\u679C\u5199\u5165C\uFF0C\u8BBF\u95EE\u6A21\u5F0F\u4E0D\u662F\u987A\u5E8F\u7684\u3002\u53EF\u7528\u987A\u5E8F\u7F13\u5B58\u6570\u7EC4\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u7528 cache_write\u3001compute_at \u548C unroll \u7684\u7EC4\u5408\u6765\u4FDD\u5B58\u5757\u7ED3\u679C\uFF0C\u5E76\u5728\u6240\u6709\u5757\u7ED3\u679C\u51C6\u5907\u597D\u65F6\u5199\u5165 C\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'s = te.create_schedule(C.op)\n\n# Allocate write cache\n# \u5206\u914D\u5199\u7F13\u5B58\nCC = s.cache_write(C, "global")\n\nxo, yo, xi, yi = s[C].tile(C.op.axis[0], C.op.axis[1], bn, bn)\n\n# Write cache is computed at yo\n# \u5199\u7F13\u5B58\u5728 yo \u5904\u88AB\u8BA1\u7B97\ns[CC].compute_at(s[C], yo)\n\n# New inner axes\n# \u65B0\u7684\u5185\u90E8\u8F74\nxc, yc = s[CC].op.axis\n\n(k,) = s[CC].op.reduce_axis\nko, ki = s[CC].split(k, factor=4)\ns[CC].reorder(ko, xc, ki, yc)\ns[CC].unroll(ki)\ns[CC].vectorize(yc)\n\nx, y, z = s[packedB].op.axis\ns[packedB].vectorize(z)\ns[packedB].parallel(x)\n\nevaluate_operation(s, [A, B, C], target=target, name="mmult", optimization="block caching", log=log)\n\n# Here is the generated IR after write cache blocking.\n# \u5199\u7F13\u5B58\u5757\u7EA7\u5316\u540E\u751F\u6210\u7684 IR\u3002\nprint(tvm.lower(s, [A, B, C], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nblock caching: 0.108552\n@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [1048576], []),\n             B: Buffer(B_2: Pointer(float32), float32, [1048576], []),\n             C: Buffer(C_2: Pointer(float32), float32, [1048576], [])}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [1024, 1024], []), B_1: B_3: Buffer(B_2, float32, [1024, 1024], []), C_1: C_3: Buffer(C_2, float32, [1024, 1024], [])} {\n  allocate(packedB: Pointer(global float32x32), float32x32, [32768]), storage_scope = global;\n  allocate(C.global: Pointer(global float32), float32, [1024]), storage_scope = global {\n    for (x: int32, 0, 32) "parallel" {\n      for (y: int32, 0, 1024) {\n        packedB_1: Buffer(packedB, float32x32, [32768], [])[((x*1024) + y)] = B[ramp(((y*1024) + (x*32)), 1, 32)]\n      }\n    }\n    for (x.outer: int32, 0, 32) {\n      for (y.outer: int32, 0, 32) {\n        for (x.c.init: int32, 0, 32) {\n          C.global_1: Buffer(C.global, float32, [1024], [])[ramp((x.c.init*32), 1, 32)] = broadcast(0f32, 32)\n        }\n        for (k.outer: int32, 0, 256) {\n          for (x.c: int32, 0, 32) {\n            let cse_var_4: int32 = (k.outer*4)\n            let cse_var_3: int32 = (x.c*32)\n            let cse_var_2: int32 = ((y.outer*1024) + cse_var_4)\n            let cse_var_1: int32 = (((x.outer*32768) + (x.c*1024)) + cse_var_4)\n             {\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[cse_var_1], 32)*packedB_1[cse_var_2]))\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[(cse_var_1 + 1)], 32)*packedB_1[(cse_var_2 + 1)]))\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[(cse_var_1 + 2)], 32)*packedB_1[(cse_var_2 + 2)]))\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[(cse_var_1 + 3)], 32)*packedB_1[(cse_var_2 + 3)]))\n            }\n          }\n        }\n        for (x.inner: int32, 0, 32) {\n          for (y.inner: int32, 0, 32) {\n            C[((((x.outer*32768) + (x.inner*1024)) + (y.outer*32)) + y.inner)] = C.global_1[((x.inner*32) + y.inner)]\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u4F18\u5316\u516D\u5E76\u884C\u5316",children:"\u4F18\u5316\u516D\uFF1A\u5E76\u884C\u5316"}),"\n",(0,a.jsx)(n.p,{children:"\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u4EC5\u8BBE\u8BA1\u4E86\u7528\u5355\u6838\u6765\u8BA1\u7B97\u3002\u51E0\u4E4E\u6240\u6709\u73B0\u4EE3\u5904\u7406\u5668\u90FD\u6709\u591A\u4E2A\u5185\u6838\uFF0C\u8BA1\u7B97\u53EF\u4EE5\u4ECE\u5E76\u884C\u8BA1\u7B97\u4E2D\u53D7\u76CA\u3002\u6700\u540E\u7684\u4F18\u5316\u5C06\u5229\u7528\u7EBF\u7A0B\u7EA7\u5E76\u884C\uFF08thread-level parallelization\uFF09\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# parallel\n# \u5E76\u884C\u5316\ns[C].parallel(xo)\n\nx, y, z = s[packedB].op.axis\ns[packedB].vectorize(z)\ns[packedB].parallel(x)\n\nevaluate_operation(\n    s, [A, B, C], target=target, name="mmult", optimization="parallelization", log=log\n)\n\n# Here is the generated IR after parallelization.\n# \u5E76\u884C\u5316\u540E\u751F\u6210\u7684 IR\u3002\nprint(tvm.lower(s, [A, B, C], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nparallelization: 0.141811\n@main = primfn(A_1: handle, B_1: handle, C_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [1048576], []),\n             B: Buffer(B_2: Pointer(float32), float32, [1048576], []),\n             C: Buffer(C_2: Pointer(float32), float32, [1048576], [])}\n  buffer_map = {A_1: A, B_1: B, C_1: C}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [1024, 1024], []), B_1: B_3: Buffer(B_2, float32, [1024, 1024], []), C_1: C_3: Buffer(C_2, float32, [1024, 1024], [])} {\n  allocate(packedB: Pointer(global float32x32), float32x32, [32768]), storage_scope = global {\n    for (x: int32, 0, 32) "parallel" {\n      for (y: int32, 0, 1024) {\n        packedB_1: Buffer(packedB, float32x32, [32768], [])[((x*1024) + y)] = B[ramp(((y*1024) + (x*32)), 1, 32)]\n      }\n    }\n    for (x.outer: int32, 0, 32) "parallel" {\n      allocate(C.global: Pointer(global float32), float32, [1024]), storage_scope = global;\n      for (y.outer: int32, 0, 32) {\n        for (x.c.init: int32, 0, 32) {\n          C.global_1: Buffer(C.global, float32, [1024], [])[ramp((x.c.init*32), 1, 32)] = broadcast(0f32, 32)\n        }\n        for (k.outer: int32, 0, 256) {\n          for (x.c: int32, 0, 32) {\n            let cse_var_4: int32 = (k.outer*4)\n            let cse_var_3: int32 = (x.c*32)\n            let cse_var_2: int32 = ((y.outer*1024) + cse_var_4)\n            let cse_var_1: int32 = (((x.outer*32768) + (x.c*1024)) + cse_var_4)\n             {\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[cse_var_1], 32)*packedB_1[cse_var_2]))\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[(cse_var_1 + 1)], 32)*packedB_1[(cse_var_2 + 1)]))\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[(cse_var_1 + 2)], 32)*packedB_1[(cse_var_2 + 2)]))\n              C.global_1[ramp(cse_var_3, 1, 32)] = (C.global_1[ramp(cse_var_3, 1, 32)] + (broadcast(A[(cse_var_1 + 3)], 32)*packedB_1[(cse_var_2 + 3)]))\n            }\n          }\n        }\n        for (x.inner: int32, 0, 32) {\n          for (y.inner: int32, 0, 32) {\n            C[((((x.outer*32768) + (x.inner*1024)) + (y.outer*32)) + y.inner)] = C.global_1[((x.inner*32) + y.inner)]\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u77E9\u9635\u4E58\u6CD5\u793A\u4F8B\u603B\u7ED3",children:"\u77E9\u9635\u4E58\u6CD5\u793A\u4F8B\u603B\u7ED3"}),"\n",(0,a.jsx)(n.p,{children:"\u4EC5\u7528 18 \u884C\u4EE3\u7801\u5E94\u7528\u4E0A\u8FF0\u7B80\u5355\u4F18\u5316\u540E\uFF0C\u751F\u6210\u7684\u4EE3\u7801\u5F00\u59CB\u63A5\u8FD1\u5E26\u6709\u6570\u5B66\u5185\u6838\u5E93\uFF08MKL\uFF09\u7684 numpy \u7684\u6027\u80FD\u3002\u7531\u4E8E\u4E00\u76F4\u5728\u8BB0\u5F55\u6027\u80FD\uFF0C\u56E0\u6B64\u53EF\u6BD4\u8F83\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'baseline = log[0][1]\nprint("%s\\t%s\\t%s" % ("Operator".rjust(20), "Timing".rjust(20), "Performance".rjust(20)))\nfor result in log:\n    print(\n        "%s\\t%s\\t%s"\n        % (result[0].rjust(20), str(result[1]).rjust(20), str(result[1] / baseline).rjust(20))\n    )\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",children:"        Operator                  Timing             Performance\n            none      3.2566761794000003                     1.0\n        blocking     0.29744742350000003     0.09133466366152523\n   vectorization     0.33272212060000006     0.10216616644437143\nloop permutation     0.11484386070000001     0.03526413262283832\n   array packing     0.10674374140000001    0.032776897523678926\n   block caching            0.1085523429     0.03333224948388923\n parallelization            0.1418105982     0.04354458054411991\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u6CE8\u610F\uFF0C\u7F51\u9875\u4E0A\u7684\u8F93\u51FA\u53CD\u6620\u7684\u662F\u975E\u4E13\u7528 Docker \u5BB9\u5668\u4E0A\u7684\u8FD0\u884C\u65F6\u95F4\uFF0C\u8FD9\u662F\u4E0D\u53EF\u9760\u7684\u3002\u5F3A\u70C8\u63A8\u8350\u4F60\u8FD0\u884C\u672C\u6559\u7A0B\uFF0C\u89C2\u5BDF TVM \u83B7\u5F97\u7684\u6027\u80FD\u63D0\u5347\uFF0C\u5E76\u4ED4\u7EC6\u7814\u7A76\u6BCF\u4E2A\u793A\u4F8B\uFF0C\u6765\u4E86\u89E3\u5BF9\u77E9\u9635\u4E58\u6CD5\u8FD0\u7B97\u6240\u505A\u7684\u8FED\u4EE3\u6539\u8FDB\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u603B\u7ED3",children:"\u603B\u7ED3"}),"\n",(0,a.jsx)(n.p,{children:"\u5982\u524D\u6240\u8FF0\uFF0C\u5982\u4F55\u4F7F\u7528 TE \u548C\u8C03\u5EA6\u539F\u8BED\u6765\u5E94\u7528\u4F18\u5316\uFF0C\u9700\u8981\u4E00\u4E9B\u5E95\u5C42\u67B6\u6784\u548C\u7B97\u6CD5\u7684\u77E5\u8BC6\u3002\u4F46\u662F\uFF0CTE \u662F\u80FD\u641C\u7D22\u6F5C\u5728\u4F18\u5316\u7684\u3001\u66F4\u590D\u6742\u7B97\u6CD5\u7684\u57FA\u7840\u3002\u5B66\u5B8C\u672C\u7AE0\u8282\u5BF9 TE \u7684\u4ECB\u7ECD\uFF0C\u73B0\u5728\u53EF\u4EE5\u5F00\u59CB\u63A2\u7D22 TVM \u5982\u4F55\u81EA\u52A8\u5316\u8C03\u5EA6\u4F18\u5316\u8FC7\u7A0B\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u7528\u5411\u91CF\u52A0\u6CD5\u548C\u77E9\u9635\u4E58\u6CD5\u8FD9\u4E24\u4E2A\u793A\u4F8B\u8BB2\u89E3\u4E86 TVM \u5F20\u91CF\u8868\u8FBE\u5F0F\uFF08TE\uFF09\u7684\u5DE5\u4F5C\u6D41\u7A0B\u3002\u4E00\u822C\u5DE5\u4F5C\u6D41\u7A0B\u5982\u4E0B\uFF1A"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u901A\u8FC7\u4E00\u7CFB\u5217\u64CD\u4F5C\u63CF\u8FF0\u8BA1\u7B97\u3002"}),"\n",(0,a.jsx)(n.li,{children:"\u63CF\u8FF0\u5982\u4F55\u7528\u8C03\u5EA6\u539F\u8BED\u8FDB\u884C\u8BA1\u7B97\u3002"}),"\n",(0,a.jsx)(n.li,{children:"\u7F16\u8BD1\u6210\u60F3\u8981\u7684\u76EE\u6807\u51FD\u6570\u3002"}),"\n",(0,a.jsx)(n.li,{children:"\u4FDD\u5B58\u4E4B\u540E\u8981\u52A0\u8F7D\u7684\u51FD\u6570\uFF08\u53EF\u9009\uFF09\u3002\n\u63A5\u4E0B\u6765\u7684\u6559\u7A0B\u5C06\u8BE6\u7EC6\u4ECB\u7ECD\u77E9\u9635\u4E58\u6CD5\u793A\u4F8B\uFF0C\u5E76\u5C55\u793A\u5982\u4F55\u7528\u53EF\u8C03\u53C2\u6570\u6784\u5EFA\u77E9\u9635\u4E58\u6CD5\u548C\u5176\u4ED6\u64CD\u4F5C\u7684\u901A\u7528\u6A21\u677F\uFF0C\u4ECE\u800C\u81EA\u52A8\u4F18\u5316\u7279\u5B9A\u5E73\u53F0\u7684\u8BA1\u7B97\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/40a01cffb015a67aaec0fad7e27cf80d/tensor_expr_get_started.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Atensor_expr_get_started.py"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/4459ebf5b03d332f7f380abdaef81c05/tensor_expr_get_started.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Atensor_expr_get_started.ipynb"})})]})}function p(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},21494:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return i}});var r=t(39546);let a={},l=r.createContext(a);function i(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);