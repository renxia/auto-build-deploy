"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["63220"],{71466:function(e,a,n){n.r(a),n.d(a,{default:()=>s,frontMatter:()=>t,metadata:()=>r,assets:()=>o,toc:()=>c,contentTitle:()=>i});var r=JSON.parse('{"id":"how_to/autoscheduler/autoschedule_arm","title":"\u4E3A ARM CPU \u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.10.0/how_to/autoscheduler/04-autoschedule_arm.md","sourceDirName":"how_to/autoscheduler","slug":"/how_to/autoscheduler/autoschedule_arm","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/autoscheduler/autoschedule_arm","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.10.0/how_to/autoscheduler/04-autoschedule_arm.md","tags":[],"version":"0.10.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":4,"frontMatter":{"title":"\u4E3A ARM CPU \u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC"},"sidebar":"tutorialSidebar","previous":{"title":"\u4E3A NVIDIA GPU \u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/autoscheduler/autoschedule_nvidia"},"next":{"title":"\u4E3A Mali GPU \u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/autoscheduler/autoschedule_mali"}}'),d=n("74132"),l=n("21494");let t={title:"\u4E3A ARM CPU \u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC"},i="\u4E3A ARM CPU \u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC",o={},c=[{value:"\u5B9A\u4E49\u7F51\u7EDC",id:"\u5B9A\u4E49\u7F51\u7EDC",level:2},{value:"\u542F\u52A8 RPC \u8DDF\u8E2A\u5668",id:"\u542F\u52A8-rpc-\u8DDF\u8E2A\u5668",level:2},{value:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230 RPC \u8DDF\u8E2A\u5668",id:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230-rpc-\u8DDF\u8E2A\u5668",level:2},{value:"\u8BBE\u7F6E\u8C03\u4F18\u914D\u7F6E",id:"\u8BBE\u7F6E\u8C03\u4F18\u914D\u7F6E",level:2},{value:"\u63D0\u53D6\u641C\u7D22\u4EFB\u52A1",id:"\u63D0\u53D6\u641C\u7D22\u4EFB\u52A1",level:2},{value:"\u8C03\u4F18\u53CA\u8BC4\u4F30",id:"\u8C03\u4F18\u53CA\u8BC4\u4F30",level:2},{value:"\u5176\u4ED6\u6280\u5DE7",id:"\u5176\u4ED6\u6280\u5DE7",level:2}];function x(e){let a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(a.header,{children:(0,d.jsx)(a.h1,{id:"\u4E3A-arm-cpu-\u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC",children:"\u4E3A ARM CPU \u81EA\u52A8\u8C03\u5EA6\u795E\u7ECF\u7F51\u7EDC"})}),"\n",(0,d.jsx)(a.admonition,{type:"note",children:(0,d.jsxs)(a.p,{children:["\u5355\u51FB ",(0,d.jsx)(a.a,{href:"https://tvm.apache.org/docs/how_to/tune_with_autoscheduler/tune_network_arm.html#sphx-glr-download-how-to-tune-with-autoscheduler-tune-network-arm-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,d.jsxs)(a.p,{children:[(0,d.jsx)(a.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,d.jsx)(a.a,{href:"https://github.com/tmoreau89",children:"Thierry Moreau"}),", ",(0,d.jsx)(a.a,{href:"https://github.com/merrymercy",children:"Lianmin Zheng"}),", ",(0,d.jsx)(a.a,{href:"https://github.com/jcf94/",children:"Chengfan Jia"})]}),"\n",(0,d.jsx)(a.p,{children:"\u9488\u5BF9\u7279\u5B9A\u8BBE\u5907\u548C\u5DE5\u4F5C\u8D1F\u8F7D\u7684\u81EA\u52A8\u8C03\u4F18\u5BF9\u4E8E\u83B7\u5F97\u6700\u4F73\u6027\u80FD\u81F3\u5173\u91CD\u8981\u3002\u672C\u6587\u4ECB\u7ECD\u5982\u4F55\u901A\u8FC7 RPC \u4F7F\u7528 auto-scheduler \u4E3A ARM CPU \u8C03\u4F18\u6574\u4E2A\u795E\u7ECF\u7F51\u7EDC\u3002"}),"\n",(0,d.jsx)(a.p,{children:"\u4E3A\u4E86\u81EA\u52A8\u8C03\u4F18\u795E\u7ECF\u7F51\u7EDC\uFF0C\u5C06\u7F51\u7EDC\u5212\u5206\u4E3A\u5C0F\u7684\u5B50\u56FE\u5E76\u72EC\u7ACB\u8FDB\u884C\u8C03\u4F18\u3002\u6BCF\u4E2A\u5B50\u56FE\u88AB\u89C6\u4E3A\u4E00\u4E2A\u641C\u7D22\u4EFB\u52A1\u3002\u4EFB\u52A1\u8C03\u5EA6\u5668\u5BF9\u65F6\u95F4\u8FDB\u884C\u5207\u7247\uFF0C\u5E76\u52A8\u6001\u5730\u4E3A\u8FD9\u4E9B\u4EFB\u52A1\u5206\u914D\u65F6\u95F4\u8D44\u6E90\uFF0C\u9884\u6D4B\u6BCF\u4E2A\u4EFB\u52A1\u5BF9\u7AEF\u5230\u7AEF\u6267\u884C\u65F6\u95F4\u7684\u5F71\u54CD\uFF0C\u5E76\u4F18\u5148\u8003\u8651\u6700\u80FD\u51CF\u5C11\u6267\u884C\u65F6\u95F4\u7684\u4EFB\u52A1\u3002"}),"\n",(0,d.jsxs)(a.p,{children:["\u5BF9\u4E8E\u6BCF\u4E2A\u5B50\u56FE\uFF0C\u4F7F\u7528 ",(0,d.jsx)(a.code,{children:"tvm/python/topi"})," \u4E2D\u7684\u8BA1\u7B97\u58F0\u660E\u6765\u83B7\u53D6\u5F20\u91CF\u8868\u8FBE\u5F0F\u5F62\u5F0F\u7684\u8BA1\u7B97 DAG\u3002\u7136\u540E\u4F7F\u7528 auto-scheduler \u6765\u6784\u5EFA\u8FD9\u4E2A DAG \u7684\u641C\u7D22\u7A7A\u95F4\uFF0C\u5E76\u641C\u7D22\u5408\u9002\u7684\u8C03\u5EA6\uFF08\u5E95\u5C42\u4F18\u5316\uFF09\u3002"]}),"\n",(0,d.jsxs)(a.p,{children:["\u4E0E\u57FA\u4E8E template \u7684 ",(0,d.jsx)(a.a,{href:"/docs/how_to/autotune",children:"AutoTVM"}),"\uFF08\u4F9D\u8D56\u624B\u52A8 template \u6765\u5B9A\u4E49\u641C\u7D22\u7A7A\u95F4\u7684\uFF09 \u4E0D\u540C\uFF0Cauto-scheduler \u4E0D\u9700\u8981\u4EFB\u4F55\u8C03\u5EA6 template\u3002\u6362\u8A00\u4E4B\uFF0Cauto-scheduler \u53EA\u4F7F\u7528 ",(0,d.jsx)(a.code,{children:"tvm/python/topi"})," \u4E2D\u7684\u8BA1\u7B97\u58F0\u660E\uFF0C\u4E0D\u4F7F\u7528\u73B0\u6709\u7684\u8C03\u5EA6 template\u3002"]}),"\n",(0,d.jsxs)(a.p,{children:["\u6CE8\u610F\uFF0C\u672C\u6559\u7A0B\u65E0\u6CD5\u5728 Windows \u6216\u6700\u65B0\u7248\u672C\u7684 macOS \u4E0A\u8FD0\u884C\u3002\u5982\u9700\u8FD0\u884C\uFF0C\u8BF7\u5C06\u672C\u6559\u7A0B\u7684\u4E3B\u4F53\u653E\u5728 ",(0,d.jsx)(a.code,{children:'if __name__ == "__main__":'})," \u4EE3\u7801\u5757\u4E2D\u3002"]}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-python",children:"import numpy as np\nimport os\n\nimport tvm\nfrom tvm import relay, auto_scheduler\nfrom tvm.relay import data_dep_optimization as ddo\nimport tvm.relay.testing\nfrom tvm.contrib import graph_executor\nfrom tvm.contrib.utils import tempdir\n"})}),"\n",(0,d.jsx)(a.h2,{id:"\u5B9A\u4E49\u7F51\u7EDC",children:"\u5B9A\u4E49\u7F51\u7EDC"}),"\n",(0,d.jsxs)(a.p,{children:["\u9996\u5148\uFF0C\u8981\u7528 Relay \u524D\u7AEF API \u5B9A\u4E49\u7F51\u7EDC\u3002\u53EF\u4EE5\u4ECE ",(0,d.jsx)(a.code,{children:"tvm.relay.testing"})," \u52A0\u8F7D\u4E00\u4E9B\u9884\u5B9A\u4E49\u7684\u7F51\u7EDC\u3002\u4E5F\u53EF\u4EE5\u4ECE MXNet\u3001ONNX\u3001PyTorch \u548C TensorFlow \u52A0\u8F7D\u6A21\u578B\uFF08\u53C2\u89C1 ",(0,d.jsx)(a.a,{href:"/docs/how_to/compile",children:"\u524D\u7AEF\u6559\u7A0B"}),")\uFF09\u3002"]}),"\n",(0,d.jsxs)(a.p,{children:["\u5BF9\u4E8E\u5377\u79EF\u795E\u7ECF\u7F51\u7EDC\uFF0C\u5C3D\u7BA1 auto-scheduler \u53EF\u4EE5\u5728\u4EFB\u4F55\u5E03\u5C40\u4E0B\u6B63\u5E38\u8FD0\u884C\uFF0C\u4F46\u901A\u8FC7 NHWC \u5E03\u5C40\u5B9E\u73B0\u7684\u6027\u80FD\u6700\u4F73\u3002auto-scheduler \u5BF9 NHWC \u5E03\u5C40\u8FDB\u884C\u4E86\u5F88\u591A\u4F18\u5316\uFF0C\u56E0\u6B64\u63A8\u8350\u5C06\u6A21\u578B\u8F6C\u6362\u4E3A NHWC \u5E03\u5C40\uFF0C\u4ECE\u800C\u5F97\u4EE5\u4F7F\u7528 auto-scheduler\u3002\u53EF\u7528 ",(0,d.jsx)(a.a,{href:"https://tvm.apache.org/docs/arch/convert_layout.html#convert-layout-usage",children:"ConvertLayout"})," pass \u5728 TVM \u4E2D\u8FDB\u884C\u5E03\u5C40\u8F6C\u6362\u3002"]}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-python",children:'def get_network(name, batch_size, layout="NHWC", dtype="float32", use_sparse=False):\n    """\u83B7\u53D6\u7F51\u7EDC\u7684\u7B26\u53F7\u5B9A\u4E49\u548C\u968F\u673A\u6743\u91CD"""\n\n    # auto-scheduler \u66F4\u9002\u5408 NHWC \u5E03\u5C40\n    if layout == "NHWC":\n        image_shape = (224, 224, 3)\n    elif layout == "NCHW":\n        image_shape = (3, 224, 224)\n    else:\n        raise ValueError("Invalid layout: " + layout)\n\n    input_shape = (batch_size,) + image_shape\n    output_shape = (batch_size, 1000)\n\n    if name.startswith("resnet-"):\n        n_layer = int(name.split("-")[1])\n        mod, params = relay.testing.resnet.get_workload(\n            num_layers=n_layer,\n            batch_size=batch_size,\n            layout=layout,\n            dtype=dtype,\n            image_shape=image_shape,\n        )\n    elif name.startswith("resnet3d-"):\n        n_layer = int(name.split("-")[1])\n        mod, params = relay.testing.resnet.get_workload(\n            num_layers=n_layer,\n            batch_size=batch_size,\n            layout=layout,\n            dtype=dtype,\n            image_shape=image_shape,\n        )\n    elif name == "mobilenet":\n        mod, params = relay.testing.mobilenet.get_workload(\n            batch_size=batch_size, layout=layout, dtype=dtype, image_shape=image_shape\n        )\n    elif name == "squeezenet_v1.1":\n        assert layout == "NCHW", "squeezenet_v1.1 only supports NCHW layout"\n        mod, params = relay.testing.squeezenet.get_workload(\n            version="1.1",\n            batch_size=batch_size,\n            dtype=dtype,\n            image_shape=image_shape,\n        )\n    elif name == "inception_v3":\n        input_shape = (batch_size, 3, 299, 299) if layout == "NCHW" else (batch_size, 299, 299, 3)\n        mod, params = relay.testing.inception_v3.get_workload(batch_size=batch_size, dtype=dtype)\n    elif name == "mxnet":\n        # MXNet \u6A21\u578B\u7684\u793A\u4F8B\n        from mxnet.gluon.model_zoo.vision import get_model\n\n        assert layout == "NCHW"\n\n        block = get_model("resnet50_v1", pretrained=True)\n        mod, params = relay.frontend.from_mxnet(block, shape={"data": input_shape}, dtype=dtype)\n        net = mod["main"]\n        net = relay.Function(\n            net.params, relay.nn.softmax(net.body), None, net.type_params, net.attrs\n        )\n        mod = tvm.IRModule.from_expr(net)\n    elif name == "mlp":\n        mod, params = relay.testing.mlp.get_workload(\n            batch_size=batch_size, dtype=dtype, image_shape=image_shape, num_classes=1000\n        )\n    else:\n        raise ValueError("Network not found.")\n\n    if use_sparse:\n        from tvm.topi.sparse.utils import convert_model_dense_to_sparse\n\n        mod, params = convert_model_dense_to_sparse(mod, params, random_params=True)\n\n    return mod, params, input_shape, output_shape\n'})}),"\n",(0,d.jsx)(a.h2,{id:"\u542F\u52A8-rpc-\u8DDF\u8E2A\u5668",children:"\u542F\u52A8 RPC \u8DDF\u8E2A\u5668"}),"\n",(0,d.jsx)(a.p,{children:"TVM \u4F7F\u7528 RPC session \u4E0E ARM \u677F\u8FDB\u884C\u901A\u4FE1\u3002\u5728\u8C03\u4F18\u671F\u95F4\uFF0C\u8C03\u4F18\u5668\u4F1A\u5C06\u751F\u6210\u7684\u4EE3\u7801\u53D1\u9001\u5230\u677F\u4E0A\u5E76\u6D4B\u8BD5\u677F\u4E0A\u4EE3\u7801\u7684\u901F\u5EA6\u3002"}),"\n",(0,d.jsx)(a.p,{children:"\u4E3A\u4E86\u52A0\u901F\u8C03\u4F18\uFF0CTVM \u4F7F\u7528 RPC \u8DDF\u8E2A\u5668\uFF08\u96C6\u4E2D\u7684\u63A7\u5236\u5668\u8282\u70B9\uFF09\u6765\u7BA1\u7406\u5206\u5E03\u5F0F\u8BBE\u5907\u3002\u4F8B\u5982\uFF0C\u82E5\u6709 10 \u90E8\u624B\u673A\uFF0C\u53EF\u4EE5\u5C06\u5B83\u4EEC\u5168\u90E8\u6CE8\u518C\u5230\u8DDF\u8E2A\u5668\uFF0C\u5E76\u884C\u8FD0\u884C 10 \u6B21\u6D4B\u8BD5\uFF0C\u4ECE\u800C\u52A0\u5FEB\u8C03\u4F18\u8FC7\u7A0B\u3002"}),"\n",(0,d.jsx)(a.p,{children:"\u6574\u4E2A\u8C03\u4F18\u8FC7\u7A0B\u90FD\u9700\u8981\u8DDF\u8E2A\u5668\u3002\u56E0\u6B64\u9700\u8981\u4E3A\u6B64\u547D\u4EE4\u6253\u5F00\u4E00\u4E2A\u65B0\u7EC8\u7AEF\uFF0C\u5728\u4E3B\u673A\u4E0A\u8FD0\u884C\u5982\u4E0B\u547D\u4EE4\u542F\u52A8 RPC \u8DDF\u8E2A\u5668\uFF1A"}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-bash",children:"python -m tvm.exec.rpc_tracker --host=0.0.0.0 --port=9190\n"})}),"\n",(0,d.jsx)(a.p,{children:"\u9884\u671F\u8F93\u51FA\uFF1A"}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-bash",children:"INFO:RPCTracker:bind to 0.0.0.0:9190\n"})}),"\n",(0,d.jsx)(a.h2,{id:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230-rpc-\u8DDF\u8E2A\u5668",children:"\u5C06\u8BBE\u5907\u6CE8\u518C\u5230 RPC \u8DDF\u8E2A\u5668"}),"\n",(0,d.jsx)(a.p,{children:"\u63A5\u4E0B\u6765\u628A\u8BBE\u5907\u6CE8\u518C\u5230\u8DDF\u8E2A\u5668\u3002\u7B2C\u4E00\u6B65\u662F\u4E3A ARM \u8BBE\u5907\u6784\u5EFA TVM runtime \u3002"}),"\n",(0,d.jsxs)(a.ul,{children:["\n",(0,d.jsxs)(a.li,{children:["\n",(0,d.jsxs)(a.p,{children:["\u5BF9\u4E8E Linux\uFF1A\u6309\u7167 ",(0,d.jsx)(a.a,{href:"https://tvm.apache.org/docs/how_to/deploy_models/deploy_model_on_rasp.html#build-tvm-runtime-on-device",children:"\u5728\u8BBE\u5907\u4E0A\u6784\u5EFA TVM Runtime"})," \u6559\u7A0B\u64CD\u4F5C\uFF0C\u7136\u540E\u5C06\u8BBE\u5907\u6CE8\u518C\u5230 Tracker"]}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-bash",children:"  python -m tvm.exec.rpc_server --tracker=[HOST_IP]:9190 --key=rasp4b-64\n"})}),"\n",(0,d.jsxs)(a.p,{children:["\uFF08\u5C06 ",(0,d.jsx)(a.code,{children:"[HOST_IP]"})," \u6362\u4E3A\u4F60\u7684\u4E3B\u673A\u7684 IP \u5730\u5740\uFF09"]}),"\n"]}),"\n",(0,d.jsxs)(a.li,{children:["\n",(0,d.jsxs)(a.p,{children:["\u5BF9\u4E8E Android\uFF1A\u6309\u7167\u6B64 ",(0,d.jsx)(a.a,{href:"https://github.com/apache/tvm/tree/main/apps/android_rpc",children:"\u8BF4\u660E"})," \u5728 Android \u8BBE\u5907\u4E0A\u5B89\u88C5 TVM RPC APK\uFF0C\u786E\u4FDD\u53EF\u4EE5\u901A\u8FC7 Android rpc \u6D4B\u8BD5\u3002\u5728\u8C03\u4F18\u671F\u95F4\uFF0C\u6253\u5F00\u624B\u673A\u5F00\u53D1\u8005\u9009\u9879\u5E76\u52FE\u9009\u300C\u5728\u66F4\u6539\u671F\u95F4\u4FDD\u6301\u5C4F\u5E55\u5524\u9192\u300D\uFF0C\u4E3A\u624B\u673A\u63A5\u901A\u7535\u6E90\u3002"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(a.p,{children:"\u6CE8\u518C\u8BBE\u5907\u540E\uFF0C\u901A\u8FC7\u67E5\u8BE2 rpc_tracker \u6765\u786E\u8BA4\u662F\u5426\u6CE8\u518C\u6210\u529F"}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-bash",children:"python -m tvm.exec.query_rpc_tracker --host=0.0.0.0 --port=9190\n"})}),"\n",(0,d.jsx)(a.p,{children:"\u4F8B\u5982\uFF0C\u5982\u679C\u6709 2 \u4E2A\u534E\u4E3A mate10 pro\uFF0C11 \u4E2A 64 \u4F4D\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6811\u8393\u6D3E 4B\uFF0C\u4EE5\u53CA 2 \u4E2A rk3399\uFF0C\u5219\u8F93\u51FA\u53EF\u4EE5\u662F"}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-bash",children:"Queue Status\n----------------------------------\nkey          total  free  pending\n----------------------------------\nmate10pro    2      2     0\nrk3399       2      2     0\nrasp4b-64    11     11    0\n----------------------------------\n"})}),"\n",(0,d.jsx)(a.p,{children:"\u5C06\u591A\u4E2A\u8BBE\u5907\u6CE8\u518C\u5230 tracker\uFF0C\u4ECE\u800C\u52A0\u5FEB\u8C03\u4F18\u6D4B\u8BD5\u3002"}),"\n",(0,d.jsx)(a.h2,{id:"\u8BBE\u7F6E\u8C03\u4F18\u914D\u7F6E",children:"\u8BBE\u7F6E\u8C03\u4F18\u914D\u7F6E"}),"\n",(0,d.jsxs)(a.p,{children:["\u5728\u8C03\u4F18\u4E4B\u524D\uFF0C\u8FDB\u884C\u914D\u7F6E\u3002\u8FD9\u91CC\u4EE5 Raspberry Pi 4b 4GB \u677F\uFF0864 \u4F4D\u64CD\u4F5C\u7CFB\u7EDF Ubuntu 20.04\uFF09\u4E3A\u4F8B\u3002\u82E5\u7528 Android \u624B\u673A\uFF0C\u8BF7\u5C06 ",(0,d.jsx)(a.code,{children:"use_ndk"})," \u8BBE\u7F6E\u4E3A True\u3002"]}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-python",children:'#### \u8BBE\u5907\u914D\u7F6E ####\n# \u5C06 "aarch64-linux-gnu" \u66FF\u6362\u4E3A\u4F60\u7684\u677F\u5B50\u7684\u6B63\u786E target\u3002\n# \u6B64 target \u7528\u4E8E\u4EA4\u53C9\u7F16\u8BD1\u3002\u53EF\u4EE5\u901A\u8FC7\uFF1Acode:`gcc -v` \u6765\u67E5\u8BE2\u3002\n# FIXME(tmoreau89, merrymercy): \u5C06 \'-device=arm_cpu\' \u6392\u9664\u5728 target \u5B57\u7B26\u4E32\u4E4B\u5916\n# \u56E0\u4E3A\u5171\u4EAB x86 \u64CD\u4F5C\u7B56\u7565\u3002\ntarget = tvm.target.Target("llvm -mtriple=aarch64-linux-gnu -mattr=+neon")\n\n# \u66FF\u6362\u4E3A\u8DDF\u8E2A\u5668\u4E2D\u7684 device_key\u3001rpc \u4E3B\u673A\u548C rpc \u7AEF\u53E3\ndevice_key = "rasp4b-64"\nrpc_host = "127.0.0.1"\nrpc_port = 9190\n\n# \u5982\u679C\u4F7F\u7528 ndk \u5DE5\u5177\u8FDB\u884C\u4EA4\u53C9\u7F16\u8BD1\uFF0C\u5219\u8BBE\u7F6E\u4E3A True\n# \u5E76\u4E14\u8FD8\u8981\u8BBE\u7F6E\u4E0B\u9762\u7684\u73AF\u5883\u53D8\u91CF\u6307\u5411\u4EA4\u53C9\u7F16\u8BD1\u5668\nuse_ndk = False\n# os.environ["TVM_NDK_CC"] = "/usr/bin/aarch64-linux-gnu-g++"\n\n#### \u8C03\u4F18 OPTION ####\nnetwork = "mobilenet"\nuse_sparse = False\nbatch_size = 1\nlayout = "NHWC"\ndtype = "float32"\nlog_file = "%s-%s-B%d-%s.json" % (network, layout, batch_size, target.kind.name)\n'})}),"\n",(0,d.jsx)(a.h2,{id:"\u63D0\u53D6\u641C\u7D22\u4EFB\u52A1",children:"\u63D0\u53D6\u641C\u7D22\u4EFB\u52A1"}),"\n",(0,d.jsxs)(a.p,{children:["\u63A5\u4E0B\u6765\uFF0C\u4ECE\u7F51\u7EDC\u4E2D\u63D0\u53D6\u641C\u7D22\u4EFB\u52A1\u53CA\u5176\u6743\u91CD\u3002\u4EFB\u52A1\u7684\u6743\u91CD\u662F\u4EFB\u52A1\u7684\u5B50\u56FE\u5728\u6574\u4E2A\u7F51\u7EDC\u4E2D\u51FA\u73B0\u7684\u6B21\u6570\u3002\u901A\u8FC7\u4F7F\u7528\u6743\u91CD\uFF0C\u53EF\u4EE5\u5C06\u7F51\u7EDC\u7684\u7AEF\u5230\u7AEF\u5EF6\u8FDF\u8FD1\u4F3C\u4E3A ",(0,d.jsx)(a.code,{children:"sum(latency[t] * weight[t])"}),"\uFF0C\u5176\u4E2D ",(0,d.jsx)(a.code,{children:"latency[t]"})," \u662F\u4EFB\u52A1\u7684\u5EF6\u8FDF\uFF0C\u800C",(0,d.jsx)(a.code,{children:"weight[t]"})," \u662F\u4EFB\u52A1\u7684\u6743\u91CD\uFF0C\u4EFB\u52A1\u8C03\u5EA6\u5668\u53EA\u4F1A\u4F18\u5316\u8FD9\u4E2A\u76EE\u6807\u3002"]}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-python",children:'# \u4ECE\u7F51\u7EDC\u4E2D\u63D0\u53D6\u4EFB\u52A1\nprint("Get model...")\nmod, params, input_shape, output_shape = get_network(\n    network, batch_size, layout, dtype=dtype, use_sparse=use_sparse\n)\nprint("Extract tasks...")\ntasks, task_weights = auto_scheduler.extract_tasks(mod["main"], params, target)\n\nfor idx, task in enumerate(tasks):\n    print("========== Task %d  (workload key: %s) ==========" % (idx, task.workload_key))\n    print(task.compute_dag)\n'})}),"\n",(0,d.jsx)(a.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-bash",children:'Get model...\nExtract tasks...\n/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n========== Task 0  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 7, 7, 1024], [1, 1, 1024, 1024], [1, 1, 1, 1024], [1, 7, 7, 1024]]) ==========\nplaceholder = PLACEHOLDER [1, 7, 7, 1024]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 1024, 1024]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 1024]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 1  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 14, 14, 256], [1, 1, 256, 512], [1, 1, 1, 512], [1, 14, 14, 512]]) ==========\nplaceholder = PLACEHOLDER [1, 14, 14, 256]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 256, 512]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 512]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 2  (workload key: ["06fce76bd84cb904eee50b905ca9449a", [1, 28, 28, 256], [3, 3, 256, 1], [1, 1, 1, 256], [1, 28, 28, 256]]) ==========\nplaceholder = PLACEHOLDER [1, 28, 28, 256]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 29)) && (i2 >= 1)) && (i2 < 29)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 256, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, (i + di), (j + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 256]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 3  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 28, 28, 128], [1, 1, 128, 256], [1, 1, 1, 256], [1, 28, 28, 256]]) ==========\nplaceholder = PLACEHOLDER [1, 28, 28, 128]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 128, 256]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 256]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 4  (workload key: ["d7b65649a4dd54becea0a52aabbc5af5", [1, 1000], [1, 1000]]) ==========\nplaceholder = PLACEHOLDER [1, 1000]\nT_softmax_maxelem(i0) max= placeholder[i0, k]\nT_softmax_exp(i0, i1) = tir.exp((placeholder[i0, i1] - T_softmax_maxelem[i0]))\nT_softmax_expsum(i0) += T_softmax_exp[i0, k]\nT_softmax_norm(i0, i1) = (T_softmax_exp[i0, i1]/T_softmax_expsum[i0])\n\n========== Task 5  (workload key: ["69115f188984ae34ede37c3b8ca40b43", [1, 7, 7, 1024], [1, 1, 1, 1024]]) ==========\nplaceholder = PLACEHOLDER [1, 7, 7, 1024]\ntensor(ax0, ax1, ax2, ax3) += placeholder[ax0, ((ax1*7) + rv0), ((ax2*7) + rv1), ax3]\ntensor(ax0, ax1, ax2, ax3) = (tensor[ax0, ax1, ax2, ax3]/(float32((select((bool)1, ((ax1 + 1)*7), (((ax1 + 1)*7) + 1)) - (ax1*7)))*float32((select((bool)1, ((ax2 + 1)*7), (((ax2 + 1)*7) + 1)) - (ax2*7)))))\n\n========== Task 6  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 7, 7, 512], [1, 1, 512, 1024], [1, 1, 1, 1024], [1, 7, 7, 1024]]) ==========\nplaceholder = PLACEHOLDER [1, 7, 7, 512]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 512, 1024]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 1024]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 7  (workload key: ["c87ba68bc180312f5716af09a77ca15b", [1, 56, 56, 128], [3, 3, 128, 1], [1, 1, 1, 128], [1, 28, 28, 128]]) ==========\nplaceholder = PLACEHOLDER [1, 56, 56, 128]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 57)) && (i2 >= 1)) && (i2 < 57)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 128, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, ((i*2) + di), ((j*2) + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 128]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 8  (workload key: ["06fce76bd84cb904eee50b905ca9449a", [1, 7, 7, 1024], [3, 3, 1024, 1], [1, 1, 1, 1024], [1, 7, 7, 1024]]) ==========\nplaceholder = PLACEHOLDER [1, 7, 7, 1024]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 8)) && (i2 >= 1)) && (i2 < 8)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 1024, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, (i + di), (j + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 1024]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 9  (workload key: ["c87ba68bc180312f5716af09a77ca15b", [1, 28, 28, 256], [3, 3, 256, 1], [1, 1, 1, 256], [1, 14, 14, 256]]) ==========\nplaceholder = PLACEHOLDER [1, 28, 28, 256]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 29)) && (i2 >= 1)) && (i2 < 29)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 256, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, ((i*2) + di), ((j*2) + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 256]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 10  (workload key: ["c87ba68bc180312f5716af09a77ca15b", [1, 14, 14, 512], [3, 3, 512, 1], [1, 1, 1, 512], [1, 7, 7, 512]]) ==========\nplaceholder = PLACEHOLDER [1, 14, 14, 512]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 15)) && (i2 >= 1)) && (i2 < 15)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 512, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, ((i*2) + di), ((j*2) + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 512]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 11  (workload key: ["c87ba68bc180312f5716af09a77ca15b", [1, 112, 112, 64], [3, 3, 64, 1], [1, 1, 1, 64], [1, 56, 56, 64]]) ==========\nplaceholder = PLACEHOLDER [1, 112, 112, 64]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 113)) && (i2 >= 1)) && (i2 < 113)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 64, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, ((i*2) + di), ((j*2) + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 64]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 12  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 28, 28, 256], [1, 1, 256, 256], [1, 1, 1, 256], [1, 28, 28, 256]]) ==========\nplaceholder = PLACEHOLDER [1, 28, 28, 256]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 256, 256]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 256]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 13  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 56, 56, 128], [1, 1, 128, 128], [1, 1, 1, 128], [1, 56, 56, 128]]) ==========\nplaceholder = PLACEHOLDER [1, 56, 56, 128]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 128, 128]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 128]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 14  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 14, 14, 512], [1, 1, 512, 512], [1, 1, 1, 512], [1, 14, 14, 512]]) ==========\nplaceholder = PLACEHOLDER [1, 14, 14, 512]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 512, 512]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 512]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 15  (workload key: ["06fce76bd84cb904eee50b905ca9449a", [1, 112, 112, 32], [3, 3, 32, 1], [1, 1, 1, 32], [1, 112, 112, 32]]) ==========\nplaceholder = PLACEHOLDER [1, 112, 112, 32]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 113)) && (i2 >= 1)) && (i2 < 113)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 32, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, (i + di), (j + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 32]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 16  (workload key: ["2ca148ecea6508ce625f85719021344f", [1, 224, 224, 3], [3, 3, 3, 32], [1, 112, 1, 1], [1, 112, 1, 1], [1, 112, 112, 32]]) ==========\nplaceholder = PLACEHOLDER [1, 224, 224, 3]\npad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 225)) && (i2 >= 1)) && (i2 < 225)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 3, 32]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, ((yy*2) + ry), ((xx*2) + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 112, 1, 1]\nT_multiply(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3]*placeholder[ax0, ax1, 0, 0])\nplaceholder = PLACEHOLDER [1, 112, 1, 1]\nT_add(ax0, ax1, ax2, ax3) = (T_multiply[ax0, ax1, ax2, ax3] + placeholder[ax0, ax1, 0, 0])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 17  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 56, 56, 64], [1, 1, 64, 128], [1, 1, 1, 128], [1, 56, 56, 128]]) ==========\nplaceholder = PLACEHOLDER [1, 56, 56, 64]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 64, 128]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 128]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 18  (workload key: ["7d44c6e3c81cd80f61ff2265b2bae89a", [1, 1024], [1000, 1024], [1, 1000], [1, 1000]]) ==========\nplaceholder = PLACEHOLDER [1, 1024]\nplaceholder = PLACEHOLDER [1000, 1024]\nT_matmul_NT(i, j) += (placeholder[i, k]*placeholder[j, k])\nplaceholder = PLACEHOLDER [1, 1000]\nT_add(ax0, ax1) = (T_matmul_NT[ax0, ax1] + placeholder[ax0, ax1])\n\n========== Task 19  (workload key: ["06fce76bd84cb904eee50b905ca9449a", [1, 14, 14, 512], [3, 3, 512, 1], [1, 1, 1, 512], [1, 14, 14, 512]]) ==========\nplaceholder = PLACEHOLDER [1, 14, 14, 512]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 15)) && (i2 >= 1)) && (i2 < 15)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 512, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, (i + di), (j + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 512]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 20  (workload key: ["06fce76bd84cb904eee50b905ca9449a", [1, 56, 56, 128], [3, 3, 128, 1], [1, 1, 1, 128], [1, 56, 56, 128]]) ==========\nplaceholder = PLACEHOLDER [1, 56, 56, 128]\nPaddedInput(i0, i1, i2, i3) = tir.if_then_else(((((i1 >= 1) && (i1 < 57)) && (i2 >= 1)) && (i2 < 57)), placeholder[i0, (i1 - 1), (i2 - 1), i3], 0f)\nplaceholder = PLACEHOLDER [3, 3, 128, 1]\nDepthwiseConv2d(b, i, j, c) += (PaddedInput[b, (i + di), (j + dj), c]*placeholder[di, dj, c, 0])\nplaceholder = PLACEHOLDER [1, 1, 1, 128]\nT_add(ax0, ax1, ax2, ax3) = (DepthwiseConv2d[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n\n========== Task 21  (workload key: ["1037be767e8e18197e87653d81c34558", [1, 112, 112, 32], [1, 1, 32, 64], [1, 1, 1, 64], [1, 112, 112, 64]]) ==========\nplaceholder = PLACEHOLDER [1, 112, 112, 32]\npad_temp(i0, i1, i2, i3) = placeholder[i0, i1, i2, i3]\nplaceholder = PLACEHOLDER [1, 1, 32, 64]\nconv2d_nhwc(nn, yy, xx, ff) += (pad_temp[nn, (yy + ry), (xx + rx), rc]*placeholder[ry, rx, rc, ff])\nplaceholder = PLACEHOLDER [1, 1, 1, 64]\nT_add(ax0, ax1, ax2, ax3) = (conv2d_nhwc[ax0, ax1, ax2, ax3] + placeholder[ax0, 0, 0, ax3])\nT_relu(ax0, ax1, ax2, ax3) = max(T_add[ax0, ax1, ax2, ax3], 0f)\n'})}),"\n",(0,d.jsx)(a.h2,{id:"\u8C03\u4F18\u53CA\u8BC4\u4F30",children:"\u8C03\u4F18\u53CA\u8BC4\u4F30"}),"\n",(0,d.jsx)(a.p,{children:"\u63A5\u4E0B\u6765\u4E3A\u8C03\u4F18\u548C\u542F\u52A8\u641C\u7D22\u4EFB\u52A1\u8BBE\u7F6E\u4E00\u4E9B\u9009\u9879"}),"\n",(0,d.jsxs)(a.ul,{children:["\n",(0,d.jsxs)(a.li,{children:[(0,d.jsx)(a.code,{children:"num_measure_trials"})," \u662F\u8C03\u4F18\u671F\u95F4\u53EF\u4EE5\u4F7F\u7528\u7684\u6D4B\u8BD5\u6B21\u6570\uFF08\u6839\u636E\u81EA\u5DF1\u7684\u65F6\u95F4\u9884\u7B97\u8C03\u6574\u8FD9\u4E2A\u53C2\u6570\uFF09\uFF0C\u82E5\u8981\u8FDB\u884C\u5FEB\u901F\u6F14\u793A\uFF0C\u53EF\u5C06\u5176\u8BBE\u7F6E\u4E3A\u8F83\u5C0F\u7684\u6570\u5B57\uFF08\u4F8B\u5982 200\uFF09\u3002\u63A8\u8350\u5C06\u5176\u8BBE\u7F6E\u4E3A ",(0,d.jsx)(a.code,{children:"800 * len(tasks)"})," \u5DE6\u53F3\uFF0C\u4EE5\u4FBF\u4F7F\u641C\u7D22\u6536\u655B\u3002\u6BD4\u5982 resnet-50 \u6709 29 \u4E2A\u4EFB\u52A1\uFF0C\u6240\u4EE5\u53EF\u4EE5\u8BBE\u7F6E\u4E3A 20000\u3002"]}),"\n",(0,d.jsxs)(a.li,{children:["\u6B64\u5916\uFF0C\u4F7F\u7528 ",(0,d.jsx)(a.code,{children:"RecordToFile"})," \u5C06\u6D4B\u8BD5\u8BB0\u5F55\u8F6C\u50A8\u5230\u65E5\u5FD7\u6587\u4EF6\u4E2D\uFF0C\u6D4B\u8BD5\u8BB0\u5F55\u53EF\u7528\u4E8E\u5386\u53F2\u6700\u4F73\u67E5\u8BE2\u3001\u6062\u590D\u641C\u7D22\u4EE5\u53CA\u8FDB\u884C\u540E\u7EED\u5206\u6790\u3002"]}),"\n",(0,d.jsxs)(a.li,{children:["\u66F4\u591A\u53C2\u6570\u53C2\u89C1 ",(0,d.jsx)(a.code,{children:"auto_scheduler.TuningOptions"}),"\uFF0C",(0,d.jsx)(a.code,{children:"auto_scheduler.LocalRunner"}),"\u3002"]}),"\n"]}),"\n",(0,d.jsx)(a.p,{children:"\u81EA\u52A8\u8C03\u4F18\u540E\uFF0C\u53EF\u4EE5\u7528\u627E\u5230\u7684\u6700\u4F73\u8C03\u5EA6\u6765\u7F16\u8BD1\u7F51\u7EDC\u3002\u5728\u81EA\u52A8\u8C03\u4F18\u671F\u95F4\uFF0C\u6240\u6709\u6D4B\u8BD5\u8BB0\u5F55\u90FD\u88AB\u8F6C\u50A8\u5230\u65E5\u5FD7\u6587\u4EF6\u4E2D\uFF0C\u53EF\u4EE5\u8BFB\u53D6\u65E5\u5FD7\u6587\u4EF6\u52A0\u8F7D\u6700\u4F73\u8C03\u5EA6\u3002"}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-python",children:'def tune_and_evaluate():\n    print("Begin tuning...")\n    tuner = auto_scheduler.TaskScheduler(tasks, task_weights)\n    tune_option = auto_scheduler.TuningOptions(\n        num_measure_trials=200,  # \u5C06\u6B64\u66F4\u6539\u4E3A 20000 \u4EE5\u8FBE\u5230\u6700\u4F73\u6027\u80FD\n        builder=auto_scheduler.LocalBuilder(build_func="ndk" if use_ndk else "default"),\n        runner=auto_scheduler.RPCRunner(\n            device_key,\n            host=rpc_host,\n            port=rpc_port,\n            timeout=30,\n            repeat=1,\n            min_repeat_ms=200,\n            enable_cpu_cache_flush=True,\n        ),\n        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],\n    )\n    tuner.tune(tune_option)\n\n    # \u7528\u5386\u53F2\u6700\u4F73\u7F16\u8BD1\n    print("Compile...")\n    with auto_scheduler.ApplyHistoryBest(log_file):\n        with tvm.transform.PassContext(\n            opt_level=3, config={"relay.backend.use_auto_scheduler": True}\n        ):\n            lib = relay.build(mod, target=target, params=params)\n\n    # \u5BFC\u51FA\u5E93\n    tmp = tempdir()\n    if use_ndk:\n        from tvm.contrib import ndk\n\n        filename = "net.so"\n        lib.export_library(tmp.relpath(filename), ndk.create_shared)\n    else:\n        filename = "net.tar"\n        lib.export_library(tmp.relpath(filename))\n\n    # \u4E0A\u4F20\u6A21\u5757\u5230\u8BBE\u5907\n    print("Upload...")\n    remote = auto_scheduler.utils.request_remote(device_key, rpc_host, rpc_port, timeout=10000)\n    remote.upload(tmp.relpath(filename))\n    rlib = remote.load_module(filename)\n\n    # \u521B\u5EFA\u56FE\u6267\u884C\u5668\n    dev = remote.cpu()\n    module = graph_executor.GraphModule(rlib["default"](dev))\n    data_tvm = tvm.nd.array((np.random.uniform(size=input_shape)).astype(dtype))\n    module.set_input("data", data_tvm)\n\n    # \u8BC4\u4F30\n    print("Evaluate inference time cost...")\n    print(module.benchmark(dev, repeat=3, min_repeat_ms=500))\n\n# \u4E0D\u5728\u7F51\u9875\u670D\u52A1\u5668\u4E2D\u8FD0\u884C\u8C03\u4F18\uFF0C\u56E0\u4E3A\u670D\u52A1\u5668\u6CA1\u6709\u6811\u8393\u6D3E\uFF0C\n# \u6216\u6B63\u5728\u8FD0\u884C\u7684\u8BBE\u5907\u8DDF\u8E2A\u5668\u3002\n# \u53D6\u6D88\u6CE8\u91CA\u8FD0\u884C\u4E0B\u9762\u884C\u3002\n# tune_and_evaluate()\n'})}),"\n",(0,d.jsxs)(a.admonition,{type:"note",children:[(0,d.jsx)(a.p,{children:"\u89E3\u91CA\u8C03\u4F18\u8FC7\u7A0B\u4E2D\u6253\u5370\u7684\u4FE1\u606F"}),(0,d.jsx)(a.p,{children:"\u5728\u8C03\u4F18\u8FC7\u7A0B\u4E2D\uFF0C\u63A7\u5236\u53F0\u4E0A\u4F1A\u6253\u5370\u5F88\u591A\u7528\u4E8E\u8C03\u8BD5\u7684\u4FE1\u606F\uFF0C\u6700\u91CD\u8981\u7684\u4FE1\u606F\u662F\u4EFB\u52A1\u8C03\u5EA6\u7A0B\u5E8F\u7684\u8F93\u51FA\uFF0C\u4E0B\u8868\u662F\u8F93\u51FA\u793A\u4F8B\u3002"}),(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-bash",children:"----------------------------------------------------------------------\n------------------------------  [ Task Scheduler ]\n----------------------------------------------------------------------\n|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |\n-------------------------------------------------\n|    0 |        0.013 |           0.31 |     64 |\n|    1 |        0.845 |           2.43 |    448 |\n|    2 |        0.046 |          -0.00 |     64 |\n|    3 |        4.194 |          24.53 |   2112 |\n|    4 |        0.109 |           9.21 |     64 |\n|    5 |        1.759 |          29.27 |    896 |\n|    6 |        0.083 |           6.01 |     64 |\n|    7 |        3.084 |          33.38 |   7680 |\n|    8 |        0.136 |          14.78 |    384 |\n|    9 |        1.349 |          38.23 |    768 |\n|   10 |        0.133 |           7.55 |    128 |\n|   11 |        2.747 |          37.56 |   1536 |\n|   12 |        0.338 |          11.87 |    192 |\n|   13 |        1.295 |          40.00 |    704 |\n|   14 |        0.482 |           4.16 |    256 |\n|   15 |        2.686 |          38.56 |   1344 |\n|   16 |        0.884 |           9.08 |    448 |\n|   17 |        1.332 |          39.18 |    704 |\n|   18 |        1.045 |           3.84 |    576 |\n|   19 |        1.391 |          38.09 |    704 |\n|   20 |        0.777 |          10.34 |    448 |\n|   21 |        0.739 |          30.97 |    448 |\n-------------------------------------------------\n Estimated total latency: 38.347 ms      Trials: 19992   Used time : 19260 s     Next ID: 3\n"})}),(0,d.jsx)(a.p,{children:"\u6B64\u8868\u5217\u51FA\u4E86\u6240\u6709\u4EFB\u52A1\u7684\u5EF6\u8FDF\u548C\uFF08\u9884\u4F30\uFF09\u901F\u5EA6\uFF0C\u8FD8\u5217\u51FA\u4E86\u6240\u6709\u4EFB\u52A1\u7684\u6D4B\u8BD5\u5206\u914D\u3002\u6700\u540E\u4E00\u884C\u6253\u5370\u4E86\u8FD9\u4E9B\u4EFB\u52A1\u7684\u603B\u52A0\u6743\u5EF6\u8FDF\uFF0C\u53EF\u4EE5\u7C97\u7565\u4F30\u8BA1\u7F51\u7EDC\u7684\u7AEF\u5230\u7AEF\u6267\u884C\u65F6\u95F4\u3002\u6700\u540E\u4E00\u884C\u8FD8\u6253\u5370\u4E86\u6D4B\u8BD5\u8BD5\u9A8C\u7684\u603B\u6570\u3001\u81EA\u52A8\u8C03\u4F18\u6240\u82B1\u8D39\u7684\u603B\u65F6\u95F4\u4EE5\u53CA\u4E0B\u4E00\u4E2A\u8981\u8C03\u4F18\u7684\u4EFB\u52A1\u7684 ID\u3002"}),(0,d.jsx)(a.p,{children:"\u8FD8\u6709\u4E00\u4E9B\u300Cdmlc::Error\u300D\u9519\u8BEF\uFF0C\u56E0\u4E3A auto-scheduler \u4F1A\u5C1D\u8BD5\u4E00\u4E9B\u65E0\u6548\u7684\u8C03\u5EA6\uFF0C\u82E5\u8C03\u4F18\u7EE7\u7EED\u8FD0\u884C\uFF0C\u5219\u53EF\u4EE5\u5FFD\u7565\u8FD9\u4E9B\u9519\u8BEF\uFF0C\u56E0\u4E3A\u8FD9\u4E9B\u9519\u8BEF\u4E0E\u4E3B\u8FDB\u7A0B\u9694\u79BB\u3002"})]}),"\n",(0,d.jsxs)(a.admonition,{type:"note",children:[(0,d.jsx)(a.p,{children:"\u63D0\u524D\u7EC8\u6B62\u8C03\u4F18"}),(0,d.jsx)(a.p,{children:"\u53EF\u4EE5\u901A\u8FC7\u5F3A\u5236\u7EC8\u6B62\u6B64\u8FDB\u7A0B\u6765\u63D0\u524D\u7EC8\u6B62\u8C03\u4F18\uFF0C\u53EA\u8981\u5728\u65E5\u5FD7\u6587\u4EF6\u4E2D\u4E3A\u6BCF\u4E2A\u4EFB\u52A1\u83B7\u5F97\u81F3\u5C11\u4E00\u4E2A\u6709\u6548\u7684\u8C03\u5EA6\uFF0C\u5C31\u80FD\u591F\u8FDB\u884C\u7F16\u8BD1\uFF08\u4E0B\u9762\u7684\u90E8\u5206\uFF09\u3002"})]}),"\n",(0,d.jsx)(a.h2,{id:"\u5176\u4ED6\u6280\u5DE7",children:"\u5176\u4ED6\u6280\u5DE7"}),"\n",(0,d.jsxs)(a.ol,{children:["\n",(0,d.jsx)(a.li,{children:"\u5728\u8C03\u4F18\u8FC7\u7A0B\u4E2D\uFF0Cauto-scheduler \u9700\u8981\u7F16\u8BD1\u8BB8\u591A\u7A0B\u5E8F\uFF0C\u5E76\u4ECE\u4E2D\u63D0\u53D6\u7279\u5F81\u3002\u8FD9\u90E8\u5206\u4F1A\u5360\u7528\u5927\u91CF CPU \u8D44\u6E90\uFF0C\u6240\u4EE5\u63A8\u8350\u4F7F\u7528\u591A\u6838\u7684\u9AD8\u6027\u80FD CPU\uFF0C\u52A0\u5FEB\u641C\u7D22\u901F\u5EA6\u3002"}),"\n",(0,d.jsxs)(a.li,{children:["\u53EF\u4EE5\u7528 ",(0,d.jsx)(a.code,{children:"python3 -m tvm.auto_scheduler.measure_record --mode distill -i log.json"})," \u63D0\u53D6\u5927\u65E5\u5FD7\u6587\u4EF6\uFF0C\u5E76\u4EC5\u4FDD\u5B58\u6700\u6709\u7528\u7684\u8BB0\u5F55\u3002"]}),"\n",(0,d.jsxs)(a.li,{children:["\u53EF\u4EE5\u4ECE\u4EE5\u524D\u7684\u65E5\u5FD7\u6587\u4EF6\u6062\u590D\u641C\u7D22\uFF0C\u53EA\u9700\u8981\u5728\u51FD\u6570 ",(0,d.jsx)(a.code,{children:"run_tuning"})," \u4E2D\u521B\u5EFA\u4EFB\u52A1\u8C03\u5EA6\u7A0B\u5E8F\u65F6\u6DFB\u52A0\u4E00\u4E2A\u65B0\u53C2\u6570 ",(0,d.jsx)(a.code,{children:"load_log_file"}),"\u3002\u6BD4\u5982\uFF0C",(0,d.jsx)(a.code,{children:"tuner = auto_scheduler.TaskScheduler(tasks, task_weights, load_log_file=log_file)"})]}),"\n",(0,d.jsxs)(a.li,{children:["\u82E5\u6709\u591A\u4E2A target CPU\uFF0C\u5219\u53EF\u4EE5\u5C06\u6240\u6709\u8FD9\u4E9B CPU \u7528\u4E8E\u5E76\u884C\u5316\u6D4B\u8BD5\u3002\u67E5\u770B\u6B64 ",(0,d.jsx)(a.a,{href:"https://tvm.apache.org/docs/how_to/tune_with_autotvm/tune_relay_cuda.html#tutorials-autotvm-scale-up-rpc-tracker",children:"\u90E8\u5206"})," \u4E86\u89E3\u5982\u4F55\u4F7F\u7528 RPC \u8DDF\u8E2A\u5668\u548C RPC \u670D\u52A1\u5668\u3002\u8981\u5728 auto-scheduler \u4E2D\u4F7F\u7528 RPC \u8DDF\u8E2A\u5668\uFF0C\u8BF7\u5C06 ",(0,d.jsx)(a.code,{children:"TuningOptions"})," \u4E2D\u7684 runner \u66FF\u6362\u4E3A ",(0,d.jsx)(a.code,{children:"auto_scheduler.RPCRunner"}),"\u3002"]}),"\n"]}),"\n",(0,d.jsx)(a.p,{children:(0,d.jsx)(a.a,{href:"https://tvm.apache.org/docs/_downloads/17b139d609f9480c7eeda2da1f90f28c/tune_network_arm.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Atune_network_arm.py"})}),"\n",(0,d.jsx)(a.p,{children:(0,d.jsx)(a.a,{href:"https://tvm.apache.org/docs/_downloads/4dc30a43f3a6aa3ed4bc3077ad35ff70/tune_network_arm.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Atune_network_arm.ipynb"})})]})}function s(e={}){let{wrapper:a}={...(0,l.a)(),...e.components};return a?(0,d.jsx)(a,{...e,children:(0,d.jsx)(x,{...e})}):x(e)}},21494:function(e,a,n){n.d(a,{Z:function(){return i},a:function(){return t}});var r=n(39546);let d={},l=r.createContext(d);function t(e){let a=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);