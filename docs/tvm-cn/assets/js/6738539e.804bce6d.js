"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["24590"],{77654:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>s,metadata:()=>r,assets:()=>i,toc:()=>d,contentTitle:()=>l});var r=JSON.parse('{"id":"how_to/deploy/deploy_models/depoly_adreno","title":"\u5728 Adreno\u2122 \u4E0A\u90E8\u7F72\u9884\u8BAD\u7EC3\u6A21\u578B","description":"\u4F5C\u8005: Daniil Barinov, Siva Rama Krishna","source":"@site/docs/how_to/deploy/deploy_models/10-depoly_adreno.md","sourceDirName":"how_to/deploy/deploy_models","slug":"/how_to/deploy/deploy_models/depoly_adreno","permalink":"/docs/tvm-cn/docs/how_to/deploy/deploy_models/depoly_adreno","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/docs/how_to/deploy/deploy_models/10-depoly_adreno.md","tags":[],"version":"current","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":10,"frontMatter":{"title":"\u5728 Adreno\u2122 \u4E0A\u90E8\u7F72\u9884\u8BAD\u7EC3\u6A21\u578B"},"sidebar":"tutorialSidebar","previous":{"title":"\u5728 CPU \u4E0A\u90E8\u7F72 Hugging Face \u526A\u679D\u6A21\u578B","permalink":"/docs/tvm-cn/docs/how_to/deploy/deploy_models/hugging_face"},"next":{"title":"\u4F7F\u7528 tvmc \u63A5\u53E3\u5728 Adreno\u2122 \u4E0A\u90E8\u7F72\u9884\u8BAD\u7EC3\u6A21\u578B","permalink":"/docs/tvm-cn/docs/how_to/deploy/deploy_models/depoly_adreno_tvmc"}}'),a=t("74132"),o=t("21494");let s={title:"\u5728 Adreno\u2122 \u4E0A\u90E8\u7F72\u9884\u8BAD\u7EC3\u6A21\u578B"},l="\u5728 Adreno\u2122 \u4E0A\u90E8\u7F72\u9884\u8BAD\u7EC3\u6A21\u578B",i={},d=[{value:"TVM RPC \u670D\u52A1\u5668",id:"tvm-rpc-\u670D\u52A1\u5668",level:2},{value:"\u914D\u7F6E",id:"\u914D\u7F6E",level:2},{value:"\u83B7\u53D6 PyTorch \u6A21\u578B",id:"\u83B7\u53D6-pytorch-\u6A21\u578B",level:2},{value:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u7247",id:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u7247",level:2},{value:"\u5C06 PyTorch \u6A21\u578B\u8F6C\u6362\u4E3A Relay \u6A21\u5757",id:"\u5C06-pytorch-\u6A21\u578B\u8F6C\u6362\u4E3A-relay-\u6A21\u5757",level:2},{value:"\u7CBE\u5EA6",id:"\u7CBE\u5EA6",level:2},{value:"\u51C6\u5907 TVM \u76EE\u6807",id:"\u51C6\u5907-tvm-\u76EE\u6807",level:2},{value:"\u81EA\u52A8\u8C03\u6574",id:"\u81EA\u52A8\u8C03\u6574",level:2},{value:"\u542F\u7528 OpenCLML \u5378\u8F7D",id:"\u542F\u7528-openclml-\u5378\u8F7D",level:2},{value:"\u7F16\u8BD1",id:"\u7F16\u8BD1",level:2},{value:"\u8FDC\u7A0B\u901A\u8FC7 RPC \u90E8\u7F72\u6A21\u578B",id:"\u8FDC\u7A0B\u901A\u8FC7-rpc-\u90E8\u7F72\u6A21\u578B",level:2},{value:"\u8FD0\u884C\u63A8\u7406",id:"\u8FD0\u884C\u63A8\u7406",level:2},{value:"\u83B7\u53D6\u9884\u6D4B\u4E0E\u6027\u80FD\u7EDF\u8BA1",id:"\u83B7\u53D6\u9884\u6D4B\u4E0E\u6027\u80FD\u7EDF\u8BA1",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\u5728-adreno-\u4E0A\u90E8\u7F72\u9884\u8BAD\u7EC3\u6A21\u578B",children:"\u5728 Adreno\u2122 \u4E0A\u90E8\u7F72\u9884\u8BAD\u7EC3\u6A21\u578B"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u4F5C\u8005"}),": Daniil Barinov, Siva Rama Krishna"]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["\u5355\u51FB ",(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/deploy_models/deploy_model_on_adreno.html#sphx-glr-download-how-to-deploy-models-deploy-model-on-adreno-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,a.jsx)(n.p,{children:"\u672C\u6587\u662F\u4E00\u4E2A\u9010\u6B65\u6559\u7A0B\uFF0C\u6F14\u793A\u5982\u4F55\u5728 Adreno \u4E0A\uFF08\u4E0D\u540C\u7CBE\u5EA6\uFF09\u90E8\u7F72\u9884\u8BAD\u7EC3\u7684 PyTorch ResNet-18 \u6A21\u578B\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u9996\u5148\uFF0C\u6211\u4EEC\u9700\u8981\u5B89\u88C5 PyTorch \u4E0E TorchVision\uFF0C\u56E0\u4E3A\u6211\u4EEC\u5C06\u4F7F\u7528\u5B83\u4F5C\u4E3A\u6211\u4EEC\u7684\u6A21\u578B\u5E93\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u53EF\u4EE5\u901A\u8FC7 pip \u5FEB\u901F\u5B89\u88C5\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install torch\npip install torchvision\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u9664\u6B64\u4E4B\u5916\uFF0C\u60A8\u5E94\u8BE5\u5DF2\u7ECF\u4E3A Android \u6784\u5EFA\u4E86 TVM\u3002\u8BF7\u53C2\u9605\u4EE5\u4E0B\u8BF4\u660E\uFF0C\u4E86\u89E3\u5982\u4F55\u6784\u5EFA\u5B83\u3002"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/v0.13.0/how_to/deploy/adreno.html",children:"\u5728 Adreno GPU \u4E0A\u90E8\u7F72"})}),"\n",(0,a.jsx)(n.p,{children:"\u5728\u6784\u5EFA\u90E8\u5206\u4E4B\u540E\uFF0C\u6784\u5EFA\u76EE\u5F55\u4E2D\u5E94\u8BE5\u6709\u4E24\u4E2A\u6587\u4EF6\uFF1A\u201Clibtvm_runtime.so\u201D \u548C \u201Ctvm_rpc\u201D\u3002\u8BA9\u6211\u4EEC\u5C06\u5B83\u4EEC\u63A8\u9001\u5230\u8BBE\u5907\u4E0A\u5E76\u8FD0\u884C TVM RPC \u670D\u52A1\u5668\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"tvm-rpc-\u670D\u52A1\u5668",children:"TVM RPC \u670D\u52A1\u5668"}),"\n",(0,a.jsx)(n.p,{children:"\u8981\u83B7\u53D6\u8BBE\u5907\u7684\u54C8\u5E0C\u503C\uFF0C\u8BF7\u4F7F\u7528\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"adb devices\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u8BBE\u7F6E\u8981\u4F7F\u7528\u7684 Android \u8BBE\u5907\uFF0C\u5982\u679C\u60A8\u7684\u8BA1\u7B97\u673A\u8FDE\u63A5\u4E86\u591A\u4E2A\u8BBE\u5907\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"export ANDROID_SERIAL=<device-hash>\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u7136\u540E\uFF0C\u8981\u5C06\u8FD9\u4E24\u4E2A\u6587\u4EF6\u4E0A\u4F20\u5230\u8BBE\u5907\u4E0A\uFF0C\u5E94\u8BE5\u4F7F\u7528\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"adb push {libtvm_runtime.so,tvm_rpc} /data/local/tmp\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u6B64\u65F6\uFF0C\u60A8\u7684\u8BBE\u5907\u4E0A\u7684\u8DEF\u5F84 /data/local/tmp \u5C06\u6709 \u201Clibtvm_runtime.so\u201D \u548C \u201Ctvm_rpc\u201D \u3002\u6709\u65F6 cmake \u627E\u4E0D\u5230 \u201Clibc++_shared.so\u201D\u3002\u4F7F\u7528\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"find ${ANDROID_NDK_HOME} -name libc++_shared.so\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u627E\u5230\u5B83\uFF0C\u5E76\u4F7F\u7528 adb \u5C06\u5176\u63A8\u9001\u5230\u6240\u9700\u7684\u8BBE\u5907\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"adb push libc++_shared.so /data/local/tmp\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u6211\u4EEC\u73B0\u5728\u51C6\u5907\u8FD0\u884C TVM RPC \u670D\u52A1\u5668\u3002\u5728\u7B2C\u4E00\u4E2A\u63A7\u5236\u53F0\u4E2D\u4F7F\u7528\u4EE5\u4E0B\u884C\u542F\u52A8 rpc_tracker\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python3 -m tvm.exec.rpc_tracker --port 9190\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u7136\u540E\uFF0C\u6211\u4EEC\u9700\u8981\u5728\u7B2C\u4E8C\u4E2A\u63A7\u5236\u53F0\u4E2D\u4ECE\u6240\u9700\u7684\u8BBE\u5907\u4E0B\u8FD0\u884C tvm_rpc \u670D\u52A1\u5668\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"adb reverse tcp:9190 tcp:9190\nadb forward tcp:5000 tcp:5000\nadb forward tcp:5002 tcp:5001\nadb forward tcp:5003 tcp:5002\nadb forward tcp:5004 tcp:5003\nadb shell LD_LIBRARY_PATH=/data/local/tmp /data/local/tmp/tvm_rpc server --host=0.0.0.0 --port=5000 --tracker=127.0.0.1:9190 --key=android --port-end=5100\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u5728\u7F16\u8BD1\u548C\u63A8\u65AD\u6A21\u578B\u4E4B\u524D\uFF0C\u8BF7\u6307\u5B9A TVM_TRACKER_HOST \u548C TVM_TRACKER_PORT\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"export TVM_TRACKER_HOST=0.0.0.0\nexport TVM_TRACKER_PORT=9190\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u68C0\u67E5 tracker \u662F\u5426\u6B63\u5728\u8FD0\u884C\uFF0C\u5E76\u4E14\u8BBE\u5907\u662F\u5426\u53EF\u7528\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python -m tvm.exec.query_rpc_tracker --port 9190\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u4F8B\u5982\uFF0C\u5982\u679C\u6709 1 \u4E2A Android \u8BBE\u5907\uFF0C\u8F93\u51FA\u53EF\u80FD\u662F\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-info",children:"Queue Status\n----------------------------------\nkey          total  free  pending\n----------------------------------\nandroid      1      1     0\n----------------------------------\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u914D\u7F6E",children:"\u914D\u7F6E"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import os\nimport torch\nimport torchvision\nimport tvm\nfrom tvm import te\nfrom tvm import relay, rpc\nfrom tvm.contrib import utils, ndk\nfrom tvm.contrib import graph_executor\nfrom tvm.relay.op.contrib import clml\nfrom tvm import autotvm\n\n# \u4E0B\u9762\u662F\u4E00\u7EC4\u914D\u7F6E\uFF0C\u7528\u4E8E\u63A7\u5236\u811A\u672C\u7684\u884C\u4E3A\uFF0C\u5982\u672C\u5730\u8FD0\u884C\u6216\u8BBE\u5907\u8FD0\u884C\u3001\u76EE\u6807\u5B9A\u4E49\u3001dtype \u8BBE\u7F6E\u548C\u81EA\u52A8\u8C03\u4F18\u542F\u7528\u3002\n# \u5982\u6709\u9700\u8981\uFF0C\u8BF7\u6839\u636E\u9700\u8981\u66F4\u6539\u8FD9\u4E9B\u8BBE\u7F6E\u3002\n\n# \u4E0E float32 \u76F8\u6BD4\uFF0CAdreno \u8BBE\u5907\u5BF9 float16 \u7684\u6548\u7387\u66F4\u9AD8\n# \u9274\u4E8E\u964D\u4F4E\u7CBE\u5EA6\u4E0D\u4F1A\u5F71\u54CD\u9884\u671F\u8F93\u51FA\n# \u5EFA\u8BAE\u4F7F\u7528\u8F83\u4F4E\u7684\u7CBE\u5EA6\u3002\n# \u6211\u4EEC\u6709\u4E00\u4E2A\u8F85\u52A9 API\uFF0C\u4F7F\u7CBE\u5EA6\u8F6C\u6362\u53D8\u5F97\u7B80\u5355\n# \u5B83\u652F\u6301 "float16" \u548C "float16_acc32" \u6A21\u5F0F\u7684 dtype\u3002\n# \u8BA9\u6211\u4EEC\u9009\u62E9 "float16" \u8FDB\u884C\u8BA1\u7B97\u548C "float32" \u8FDB\u884C\u7D2F\u79EF\u3002\n\ncalculation_dtype = "float16"\nacc_dtype = "float32"\n\n# \u5728\u7F16\u8BD1\u4EE5\u751F\u6210\u7EB9\u7406\u4E4B\u524D\u6307\u5B9A Adreno \u76EE\u6807\n# \u5229\u7528\u5185\u6838\u5E76\u83B7\u5F97\u6240\u6709\u7EB9\u7406\u7684\u597D\u5904\n# \u6CE8\u610F\uFF1A\u6B64\u751F\u6210\u7684\u793A\u4F8B\u5728\u6211\u4EEC\u7684 x86 \u670D\u52A1\u5668\u4E0A\u8FD0\u884C\u4EE5\u8FDB\u884C\u6F14\u793A\u3002\n# \u5982\u679C\u5728 Android \u8BBE\u5907\u4E0A\u8FD0\u884C\u5B83\uFF0C\u6211\u4EEC\u9700\u8981\n# \u6307\u5B9A\u5176\u6307\u4EE4\u96C6\u3002\u5982\u679C\u8981\u5728\u5B9E\u9645\u8BBE\u5907\u4E0A\u8FD0\u884C\u6B64\u6559\u7A0B\uFF0C\u8BF7\u5C06 :code:`local_demo` \u8BBE\u7F6E\u4E3A False\u3002\nlocal_demo = True\n\n# \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5728 CPU \u76EE\u6807\u4E0A\u6267\u884C\u3002\n# \u9009\u62E9 \'cpu\'\u3001\'opencl\' \u548C \'opencl -device=adreno\'\ntest_target = "cpu"\n\n# \u66F4\u6539\u76EE\u6807\u914D\u7F6E\u3002\n# \u8FD0\u884C `adb shell cat /proc/cpuinfo` \u4EE5\u67E5\u627E\u67B6\u6784\u3002\narch = "arm64"\ntarget = tvm.target.Target("llvm -mtriple=%s-linux-android" % arch)\n\n# \u81EA\u52A8\u8C03\u6574\u662F\u8BA1\u7B97\u5BC6\u96C6\u578B\u548C\u8017\u65F6\u7684\u4EFB\u52A1\uFF0C\n# \u56E0\u6B64\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u7981\u7528\u3002\u5982\u679C\u9700\u8981\uFF0C\u8BF7\u542F\u7528\u5B83\u3002\nis_tuning = False\ntune_log = "adreno-resnet18.log"\n\n# \u542F\u7528 OpenCLML \u52A0\u901F\u8FD0\u7B97\u7B26\u5E93\u3002\nenable_clml = False\n\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u83B7\u53D6-pytorch-\u6A21\u578B",children:"\u83B7\u53D6 PyTorch \u6A21\u578B"}),"\n",(0,a.jsx)(n.p,{children:"\u4ECE torchvision models \u83B7\u53D6 resnet18"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'model_name = "resnet18"\nmodel = getattr(torchvision.models, model_name)(pretrained=True)\nmodel = model.eval()\n\n# \u901A\u8FC7\u8FFD\u8E2A\u6293\u53D6 TorchScripted \u6A21\u578B\ninput_shape = [1, 3, 224, 224]\ninput_data = torch.randn(input_shape)\nscripted_model = torch.jit.trace(model, input_data).eval()\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"Out\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-info",children:"/venv/apache-tvm-py3.8/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/venv/apache-tvm-py3.8/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u7247",children:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u7247"}),"\n",(0,a.jsx)(n.p,{children:"\u6211\u4EEC\u4F7F\u7528\u4E00\u5F20\u7ECF\u5178\u7684\u6765\u81EA ImageNet \u7684\u732B\u56FE\u7247\u4F5C\u4E3A\u793A\u4F8B"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from PIL import Image\nfrom tvm.contrib.download import download_testdata\nfrom matplotlib import pyplot as plt\nimport numpy as np\n\nimg_url = "https://github.com/dmlc/mxnet.js/blob/main/data/cat.png?raw=true"\nimg_path = download_testdata(img_url, "cat.png", module="data")\nimg = Image.open(img_path).resize((224, 224))\nplt.imshow(img)\nplt.show()\n\n# \u5904\u7406\u56FE\u7247\u5E76\u8F6C\u6362\u4E3A tensor\nfrom torchvision import transforms\n\nmy_preprocess = transforms.Compose(\n    [\n        transforms.Resize(256),\n        transforms.CenterCrop(224),\n        transforms.ToTensor(),\n        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\n    ]\n)\nimg = my_preprocess(img)\nimg = np.expand_dims(img, 0)\n\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://tvm.apache.org/docs/_images/sphx_glr_from_keras_001.png",alt:"cat"})}),"\n",(0,a.jsx)(n.h2,{id:"\u5C06-pytorch-\u6A21\u578B\u8F6C\u6362\u4E3A-relay-\u6A21\u5757",children:"\u5C06 PyTorch \u6A21\u578B\u8F6C\u6362\u4E3A Relay \u6A21\u5757"}),"\n",(0,a.jsx)(n.p,{children:"TVM \u5177\u6709\u7528\u4E8E\u5404\u79CD\u6846\u67B6 \u7684\u5728 relay.frontend \u4E2D\u7684\u524D\u7AEF API\u3002\u73B0\u5728\u5BF9\u4E8E PyTorch \u6A21\u578B\u5BFC\u5165\uFF0C\u6211\u4EEC\u6709 relay.frontend.from_pytorch API\u3002\u8F93\u5165\u540D\u79F0\u53EF\u4EE5\u662F\u4EFB\u610F\u7684"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'input_name = "input0"\nshape_list = [(input_name, img.shape)]\n\nmod, params = relay.frontend.from_pytorch(scripted_model, shape_list)\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"Out:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-info",children:"/workspace/python/tvm/relay/frontend/pytorch_utils.py:47: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.\n  return LooseVersion(torch_ver) > ver\n/venv/apache-tvm-py3.8/lib/python3.8/site-packages/setuptools/_distutils/version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.\n  other = LooseVersion(other)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u7CBE\u5EA6",children:"\u7CBE\u5EA6"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Adreno \u8BBE\u5907\u5728 float16 \u4E0A\u7684\u6548\u7387\u6BD4 float32 \u9AD8\n# \u9274\u4E8E\u964D\u4F4E\u7CBE\u5EA6\u4E0D\u4F1A\u5F71\u54CD\u9884\u671F\u8F93\u51FA\n# \u5EFA\u8BAE\u4F7F\u7528\u8F83\u4F4E\u7684\u7CBE\u5EA6\u3002\n\n# TVM \u901A\u8FC7 ToMixedPrecision \u8F6C\u6362\u8FC7\u7A0B\u652F\u6301\u6DF7\u5408\u7CBE\u5EA6\u3002\n# \u6211\u4EEC\u53EF\u80FD\u9700\u8981\u6CE8\u518C\u7CBE\u5EA6\u89C4\u5219\uFF0C\u6BD4\u5982\u7CBE\u5EA6\u7C7B\u578B\u3001\u7D2F\u52A0\n# \u6570\u636E\u7C7B\u578B\u7B49\uFF0C\u4EE5\u8986\u76D6\u9ED8\u8BA4\u8BBE\u7F6E\u3002\n# \u4E0B\u9762\u7684\u8F85\u52A9 API \u7B80\u5316\u4E86\u6A21\u5757\u95F4\u7684\u7CBE\u5EA6\u8F6C\u6362\u3002\n\n# \u5728\u4E0A\u9762\u7684\u914D\u7F6E\u90E8\u5206\uFF0C\u8BA1\u7B97 dtype \u8BBE\u7F6E\u4E3A "float16"\uFF0C\u7D2F\u79EF dtype \u8BBE\u7F6E\u4E3A "float32"\u3002\n\nfrom tvm.driver.tvmc.transform import apply_graph_transforms\n\nmod = apply_graph_transforms(\n    mod,\n    {\n        "mixed_precision": True,\n        "mixed_precision_ops": ["nn.conv2d", "nn.dense"],\n        "mixed_precision_calculation_type": calculation_dtype,\n        "mixed_precision_acc_type": acc_dtype,\n    },\n)\n\n'})}),"\n",(0,a.jsx)(n.p,{children:'\u6B63\u5982\u60A8\u5728 IR \u4E2D\u6240\u770B\u5230\u7684\u90A3\u6837\uFF0C\u8BE5\u67B6\u6784\u73B0\u5728\u5305\u542B\u5F3A\u5236\u8F6C\u6362\u64CD\u4F5C\uFF0C\u8FD9\u4E9B\u64CD\u4F5C\u662F\u4E3A\u4E86\u5C06\u7CBE\u5EA6\u8F6C\u6362\u4E3A FP16\u3002\u60A8\u8FD8\u53EF\u4EE5\u4F7F\u7528 "float16" \u6216 "float32" \u4F5C\u4E3A\u5176\u4ED6 dtype \u9009\u9879\u3002'}),"\n",(0,a.jsx)(n.h2,{id:"\u51C6\u5907-tvm-\u76EE\u6807",children:"\u51C6\u5907 TVM \u76EE\u6807"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# \u6B64\u751F\u6210\u7684\u793A\u4F8B\u5728\u6211\u4EEC\u7684 x86 \u670D\u52A1\u5668\u4E0A\u8FD0\u884C\u4EE5\u8FDB\u884C\u6F14\u793A\u3002\n\n# \u8981\u5728\u771F\u5B9E\u76EE\u6807\u4E0A\u90E8\u7F72\u5E76\u8C03\u8BD5\uFF0C\u8BF7\u5728\u4E0A\u9762\u7684\u914D\u7F6E\u90E8\u5206\u5C06 :code:`local_demo` \u8BBE\u7F6E\u4E3A False\u3002\n# \u540C\u6837\uFF0C:code:`test_target` \u8BBE\u7F6E\u4E3A :code:`llvm`\uFF0C\u4EE5\u4F7F\u5176\u4E0E x86 \u6F14\u793A\u517C\u5BB9\u3002\n# \u8BF7\u5C06\u5176\u66F4\u6539\u4E3A :code:`opencl` \u6216 :code:`opencl -device=adreno`\uFF0C\u4EE5\u7528\u4E8E\u4E0A\u9762\u914D\u7F6E\u4E2D\u7684 RPC \u76EE\u6807\u3002\n\n\nif local_demo:\n    target = tvm.target.Target("llvm")\nelif test_target.find("opencl"):\n    target = tvm.target.Target(test_target, host=target)\n\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u81EA\u52A8\u8C03\u6574",children:"\u81EA\u52A8\u8C03\u6574"}),"\n",(0,a.jsx)(n.p,{children:"\u4E0B\u9762\u7684\u51E0\u4E2A\u6307\u4EE4\u53EF\u4EE5\u4F7F\u7528 XGBoost \u4F5C\u4E3A\u8C03\u4F18\u7B97\u6CD5\u5BF9 Relay \u6A21\u5757\u8FDB\u884C\u81EA\u52A8\u8C03\u4F18\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# \u81EA\u52A8\u8C03\u4F18\u8FC7\u7A0B\u5305\u62EC\u63D0\u53D6\u4EFB\u52A1\u3001\u5B9A\u4E49\u8C03\u4F18\u914D\u7F6E\u548C\n# \u4E3A\u6BCF\u4E2A\u4EFB\u52A1\u8C03\u6574\u6700\u4F73\u6027\u80FD\u7684\u5185\u6838\u914D\u7F6E\u3002\n\n# \u83B7\u53D6\u4E0E RPC \u76F8\u5173\u7684\u8BBE\u7F6E\u3002\nrpc_tracker_host = os.environ.get("TVM_TRACKER_HOST", "127.0.0.1")\nrpc_tracker_port = int(os.environ.get("TVM_TRACKER_PORT", 9190))\nkey = "android"\n\n# \u81EA\u52A8\u8C03\u4F18\u662F\u8BA1\u7B97\u5BC6\u96C6\u578B\u548C\u8017\u65F6\u7684\u4EFB\u52A1\u3002\n# \u5728\u4E0A\u9762\u7684\u914D\u7F6E\u4E2D\uFF0C\u7531\u4E8E\u6B64\u811A\u672C\u5728 x86 \u4E0A\u8FD0\u884C\u8FDB\u884C\u6F14\u793A\uFF0C\u8BBE\u7F6E\u4E3A False\u3002\n# \u8BF7\u5C06 :code:`is_tuning` \u8BBE\u7F6E\u4E3A True \u4EE5\u542F\u7528\u81EA\u52A8\u8C03\u4F18\u3002\n\nif is_tuning:\n    # \u81EA\u52A8\u8C03\u4F18\u9636\u6BB5 1\uFF1A\u63D0\u53D6\u53EF\u8C03\u4F18\u4EFB\u52A1\n    tasks = autotvm.task.extract_from_program(\n        mod, target=test_target, target_host=target, params=params\n    )\n\n    # \u81EA\u52A8\u8C03\u4F18\u9636\u6BB5 2\uFF1A\u5B9A\u4E49\u8C03\u4F18\u914D\u7F6E\n    tmp_log_file = tune_log + ".tmp"\n    measure_option = autotvm.measure_option(\n        builder=autotvm.LocalBuilder(\n            build_func=ndk.create_shared, timeout=15\n        ),  # \u5728\u672C\u5730\u6784\u5EFA\u6D4B\u8BD5\u5185\u6838\n        runner=autotvm.RPCRunner(  # \u8FD0\u884C\u7A0B\u5E8F\u5C06\u5728\u8FDC\u7A0B\u8BBE\u5907\u4E0A\u8FD0\u884C\u3002\n            key,  # RPC \u5BC6\u94A5\n            host=rpc_tracker_host,  # \u8FFD\u8E2A\u4E3B\u673A\n            port=int(rpc_tracker_port),  # \u8FFD\u8E2A\u7AEF\u53E3\n            number=3,  # \u5E73\u5747\u8FD0\u884C\u6B21\u6570\n            timeout=600,  # RPC \u8D85\u65F6\n        ),\n    )\n    n_trial = 1024  # \u5728\u9009\u62E9\u6700\u4F73\u5185\u6838\u914D\u7F6E\u4E4B\u524D\u8FDB\u884C\u8BAD\u7EC3\u7684\u8FED\u4EE3\u6B21\u6570\n    early_stopping = False  # \u53EF\u4EE5\u542F\u7528\u4EE5\u5728\u635F\u5931\u4E0D\u65AD\u6700\u5C0F\u5316\u65F6\u505C\u6B62\u8C03\u4F18\u3002\n\n    # \u81EA\u52A8\u8C03\u4F18\u9636\u6BB5 3\uFF1A\u904D\u5386\u4EFB\u52A1\u5E76\u8FDB\u884C\u8C03\u4F18\u3002\n    from tvm.autotvm.tuner import XGBTuner\n\n    for i, tsk in enumerate(reversed(tasks[:3])):\n        print("Task:", tsk)\n        prefix = "[Task %2d/%2d] " % (i + 1, len(tasks))\n\n        # \u9009\u62E9\u8C03\u8C10\u5668\n        tuner = "xgb"\n\n        # \u521B\u5EFA\u8C03\u8C10\u5668\n        if tuner == "xgb":\n            tuner_obj = XGBTuner(tsk, loss_type="reg")\n        # \u5176\u4ED6\u8C03\u8C10\u5668\u7C7B\u578B\u7684\u5224\u65AD\u53EF\u4EE5\u5728\u6B64\u5904\u6DFB\u52A0\n\n        tsk_trial = min(n_trial, len(tsk.config_space))\n        tuner_obj.tune(\n            n_trial=tsk_trial,\n            early_stopping=early_stopping,\n            measure_option=measure_option,\n            callbacks=[\n                autotvm.callback.progress_bar(tsk_trial, prefix=prefix),\n                autotvm.callback.log_to_file(tmp_log_file),\n            ],\n        )\n    # \u81EA\u52A8\u8C03\u4F18\u9636\u6BB5 4\uFF1A\u4ECE\u6574\u4F53\u65E5\u5FD7\u4E2D\u9009\u62E9\u6027\u80FD\u6700\u4F73\u7684\u914D\u7F6E\u3002\n    autotvm.record.pick_best(tmp_log_file, tune_log)\n\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u542F\u7528-openclml-\u5378\u8F7D",children:"\u542F\u7528 OpenCLML \u5378\u8F7D"}),"\n",(0,a.jsx)(n.p,{children:"OpenCLML \u5378\u8F7D\u5C06\u5C1D\u8BD5\u901A\u8FC7\u4F7F\u7528 OpenCLML \u4E13\u6709\u8FD0\u7B97\u7B26\u5E93\u6765\u52A0\u901F\u652F\u6301\u7684\u8FD0\u7B97\u7B26\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5728\u4E0A\u9762\u7684\u914D\u7F6E\u90E8\u5206\uFF0C:code:enable_clml \u88AB\u8BBE\u7F6E\u4E3A False\u3002\n\nif not local_demo and enable_clml:\n    mod = clml.partition_for_clml(mod, params)\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u7F16\u8BD1",children:"\u7F16\u8BD1"}),"\n",(0,a.jsx)(n.p,{children:"\u5982\u679C\u5B58\u5728\u8C03\u4F18\u7F13\u5B58\uFF0C\u5219\u4F7F\u7528\u8C03\u4F18\u7F13\u5B58\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"if os.path.exists(tune_log):\n    with autotvm.apply_history_best(tune_log):\n        with tvm.transform.PassContext(opt_level=3):\n            lib = relay.build(mod, target=target, params=params)\nelse:\n    with tvm.transform.PassContext(opt_level=3):\n        lib = relay.build(mod, target=target, params=params)\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u8FDC\u7A0B\u901A\u8FC7-rpc-\u90E8\u7F72\u6A21\u578B",children:"\u8FDC\u7A0B\u901A\u8FC7 RPC \u90E8\u7F72\u6A21\u578B"}),"\n",(0,a.jsx)(n.p,{children:"\u4F7F\u7528 RPC\uFF0C\u60A8\u53EF\u4EE5\u5C06\u6A21\u578B\u4ECE\u4E3B\u673A\u673A\u5668\u90E8\u7F72\u5230\u8FDC\u7A0B Adreno \u8BBE\u5907\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'if local_demo:\n    remote = rpc.LocalSession()\nelse:\n    tracker = rpc.connect_tracker(rpc_tracker_host, rpc_tracker_port)\n    # \u8FD0\u884C\u5927\u6A21\u578B\u65F6\uFF0C\u5E94\u8BE5\u589E\u52A0 `session_timeout`\n    remote = tracker.request(key, priority=0, session_timeout=60)\n\nif local_demo:\n    dev = remote.cpu(0)\nelif test_target.find("opencl"):\n    dev = remote.cl(0)\nelse:\n    dev = remote.cpu(0)\n\ntemp = utils.tempdir()\ndso_binary = "dev_lib_cl.so"\ndso_binary_path = temp.relpath(dso_binary)\nfcompile = ndk.create_shared if not local_demo else None\nlib.export_library(dso_binary_path, fcompile=fcompile)\nremote_path = "/data/local/tmp/" + dso_binary\nremote.upload(dso_binary_path)\nrlib = remote.load_module(dso_binary)\nm = graph_executor.GraphModule(rlib["default"](dev))\n\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u8FD0\u884C\u63A8\u7406",children:"\u8FD0\u884C\u63A8\u7406"}),"\n",(0,a.jsx)(n.p,{children:"\u6211\u4EEC\u73B0\u5728\u53EF\u4EE5\u8BBE\u7F6E\u8F93\u5165\uFF0C\u63A8\u7406\u6211\u4EEC\u7684\u6A21\u578B\u5E76\u5F97\u5230\u8F93\u51FA\u9884\u6D4B\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'m.set_input(input_name, tvm.nd.array(img.astype("float32")))\nm.run()\ntvm_output = m.get_output(0)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u83B7\u53D6\u9884\u6D4B\u4E0E\u6027\u80FD\u7EDF\u8BA1",children:"\u83B7\u53D6\u9884\u6D4B\u4E0E\u6027\u80FD\u7EDF\u8BA1"}),"\n",(0,a.jsx)(n.p,{children:"\u8FD9\u5757\u4EE3\u7801\u5C55\u793A\u4E86 top-1 \u548C top-5 \u9884\u6D4B\uFF0C\u540C\u65F6\u63D0\u4F9B\u6A21\u578B\u7684\u6027\u80FD\u4FE1\u606F\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from os.path import join, isfile\nfrom matplotlib import pyplot as plt\nfrom tvm.contrib import download\n\n\n# \u4E0B\u8F7D ImageNet \u5206\u7C7B\ncateg_url = "https://github.com/uwsampl/web-data/raw/main/vta/models/"\ncateg_fn = "synset.txt"\ndownload.download(join(categ_url, categ_fn), categ_fn)\nsynset = eval(open(categ_fn).read())\n\ntop_categories = np.argsort(tvm_output.asnumpy()[0])\ntop5 = np.flip(top_categories, axis=0)[:5]\n\n# \u8BB0\u5F55 top-1 \u5206\u7C7B\u7ED3\u679C\nprint("Top-1 id: {}, class name: {}".format(top5[1 - 1], synset[top5[1 - 1]]))\n\n# \u8BB0\u5F55 top-5 \u5206\u7C7B\u7ED3\u679C\nprint("\\nTop5 predictions: \\n")\nprint("\\t#1:", synset[top5[1 - 1]])\nprint("\\t#2:", synset[top5[2 - 1]])\nprint("\\t#3:", synset[top5[3 - 1]])\nprint("\\t#4:", synset[top5[4 - 1]])\nprint("\\t#5:", synset[top5[5 - 1]])\nprint("\\t", top5)\nImageNetClassifier = False\nfor k in top_categories[-5:]:\n    if "cat" in synset[k]:\n        ImageNetClassifier = True\nassert ImageNetClassifier, "Failed ImageNet classifier validation check"\n\nprint("Evaluate inference time cost...")\nprint(m.benchmark(dev, number=1, repeat=10))\n'})}),"\n",(0,a.jsx)(n.p,{children:"Out:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-info",children:"/workspace/python/tvm/runtime/ndarray.py:199: DeprecationWarning: NDArray.asnumpy() will be deprecated in TVM v0.8 release. Please use NDArray.numpy() instead.\n  warnings.warn(\nTop-1 id: 281, class name: tabby, tabby cat\n\nTop5 predictions:\n\n        #1: tabby, tabby cat\n        #2: tiger cat\n        #3: lynx, catamount\n        #4: red fox, Vulpes vulpes\n        #5: Egyptian cat\n         [281 282 287 277 285]\nEvaluate inference time cost...\nExecution time summary:\n mean (ms)   median (ms)    max (ms)     min (ms)     std (ms)\n 3991.4967    3991.2103    3996.6988    3988.8485      2.0989\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u8BE5\u811A\u672C\u7684\u603B\u8FD0\u884C\u65F6\u95F4:"})," ( 1 \u5206 18.970 \u79D2)"]})]})}function p(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},21494:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return s}});var r=t(39546);let a={},o=r.createContext(a);function s(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);