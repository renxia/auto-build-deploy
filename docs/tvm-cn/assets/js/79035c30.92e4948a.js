"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["19904"],{7087:function(n,e,t){t.r(e),t.d(e,{default:()=>p,frontMatter:()=>r,metadata:()=>a,assets:()=>d,toc:()=>i,contentTitle:()=>l});var a=JSON.parse('{"id":"how_to/extend/pass_infra","title":"\u5982\u4F55\u4F7F\u7528 TVM Pass Infra","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/how_to/extend/02-pass_infra.md","sourceDirName":"how_to/extend","slug":"/how_to/extend/pass_infra","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/extend/pass_infra","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/how_to/extend/02-pass_infra.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":2,"frontMatter":{"title":"\u5982\u4F55\u4F7F\u7528 TVM Pass Infra"},"sidebar":"tutorialSidebar","previous":{"title":"\u7F16\u5199\u81EA\u5B9A\u4E49 Pass","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/extend/writing_pass"},"next":{"title":"\u5982\u4F55\u4F7F\u7528 TVM Pass Instrument","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/extend/pass_instrument"}}'),s=t("74132"),o=t("21494");let r={title:"\u5982\u4F55\u4F7F\u7528 TVM Pass Infra"},l="\u5982\u4F55\u4F7F\u7528 TVM Pass Infra",d={},i=[{value:"\u521B\u5EFA Relay \u7A0B\u5E8F\u793A\u4F8B",id:"\u521B\u5EFA-relay-\u7A0B\u5E8F\u793A\u4F8B",level:2},{value:"\u4F18\u5316\u7A0B\u5E8F",id:"\u4F18\u5316\u7A0B\u5E8F",level:2},{value:"\u624B\u52A8\u5E94\u7528\u4F18\u5316 Pass",id:"\u624B\u52A8\u5E94\u7528\u4F18\u5316-pass",level:3},{value:"\u4F7F\u7528 Sequential \u5E94\u7528\u4E00\u7CFB\u5217 Pass",id:"\u4F7F\u7528-sequential-\u5E94\u7528\u4E00\u7CFB\u5217-pass",level:3},{value:"\u4F7F\u7528 Python \u88C5\u9970\u5668\u5B9E\u73B0 Pass",id:"\u4F7F\u7528-python-\u88C5\u9970\u5668\u5B9E\u73B0-pass",level:2},{value:"\u8C03\u8BD5 Pass",id:"\u8C03\u8BD5-pass",level:2},{value:"\u603B\u7ED3",id:"\u603B\u7ED3",level:2}];function f(n){let e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\u5982\u4F55\u4F7F\u7528-tvm-pass-infra",children:"\u5982\u4F55\u4F7F\u7528 TVM Pass Infra"})}),"\n",(0,s.jsx)(e.admonition,{type:"note",children:(0,s.jsxs)(e.p,{children:["\u5355\u51FB ",(0,s.jsx)(e.a,{href:"https://tvm.apache.org/docs/how_to/extend_tvm/use_pass_infra.html#sphx-glr-download-how-to-extend-tvm-use-pass-infra-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,s.jsx)(e.a,{href:"https://github.com/zhiics",children:"Zhi Chen"})]}),"\n",(0,s.jsx)(e.p,{children:"\u968F\u7740 Relay/tir \u4E2D\u4F18\u5316 Pass \u6570\u7684\u589E\u52A0\uFF0C\u624B\u52A8\u6267\u884C\u5E76\u7EF4\u62A4\u5B83\u4EEC\u7684\u4F9D\u8D56\u5173\u7CFB\u53D8\u5F97\u96BE\u4EE5\u5904\u7406\u3002\u56E0\u6B64\u6211\u4EEC\u5F15\u5165\u4E86\u4E00\u4E2A\u57FA\u7840\u67B6\u6784\u6765\u7BA1\u7406\u4F18\u5316 Pass\uFF0C\u5E76\u4F7F\u5176\u9002\u7528\u4E8E TVM \u5806\u6808\u4E2D IR \u7684\u4E0D\u540C\u5C42\u3002"}),"\n",(0,s.jsxs)(e.p,{children:["Relay/tir \u7A0B\u5E8F\u7684\u4F18\u5316\u53EF\u4EE5\u5728\u5404\u79CD\u7C92\u5EA6\u4E0A\u5E94\u7528\uFF0C\u5373\u5206\u522B\u4F7F\u7528 ",(0,s.jsx)(e.code,{children:"tvm.relay.transform.FunctionPass"}),"/ ",(0,s.jsx)(e.code,{children:"tvm.tir.transform.PrimFuncPass"})," \u548C ",(0,s.jsx)(e.code,{children:"tvm.transform.ModulePass"})," \u7684\u529F\u80FD\u7EA7\u548C\u6A21\u5757\u7EA7\uFF0C\u6216\u8005\u7528\u6237\u53EF\u4EE5\u4F9D\u9760 ",(0,s.jsx)(e.code,{children:"tvm.transform.Sequential"})," \u5728 Relay/tir \u7A0B\u5E8F\u4E0A\u5E94\u7528\u4E00\u7CFB\u5217 Pass\uFF0C\u5176\u4E2D Pass \u4E4B\u95F4\u7684\u4F9D\u8D56\u5173\u7CFB\u53EF\u4EE5\u901A\u8FC7 pass infra \u6765\u89E3\u51B3\u3002\u6709\u5173\u8FD9\u4E9B Pass \u7C7B\u578B\u7684\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u53C2\u9605 ",(0,s.jsx)(e.a,{href:"https://tvm.apache.org/docs/arch/pass_infra.html#pass-infra",children:"Pass Infrastructure"}),"\u3002"]}),"\n",(0,s.jsx)(e.p,{children:"\u672C\u6559\u7A0B\u4E3B\u8981\u6F14\u793A\u5F00\u53D1\u8005\u5982\u4F55\u4F7F\u7528 pass infra \u8FDB\u884C\u67D0\u79CD\u4F18\u5316\uFF0C\u5E76\u4E3A Relay \u7A0B\u5E8F\u521B\u5EFA\u4F18\u5316 Pass\u3002\u540C\u6837\u7684\u65B9\u6CD5\u4E5F\u53EF\u4EE5\u7528\u4E8E tir\u3002"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import numpy as np\nimport tvm\nfrom tvm import te\nimport tvm.relay as relay\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u521B\u5EFA-relay-\u7A0B\u5E8F\u793A\u4F8B",children:"\u521B\u5EFA Relay \u7A0B\u5E8F\u793A\u4F8B"}),"\n",(0,s.jsx)(e.p,{children:"\u9996\u5148\u4E3A\u6559\u7A0B\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684 Relay \u7A0B\u5E8F\uFF0C\u8BE5\u7A0B\u5E8F\u7528\u4E8E\u672C\u6559\u7A0B\u4E2D\u793A\u4F8B\u7684\u5404\u79CD\u4F18\u5316\u3002\u540C\u6837\uFF0C\u7528\u6237\u53EF\u4EE5\u7F16\u5199 tir \u539F\u59CB\u51FD\u6570\u5E76\u5E94\u7528 tir pass\u3002"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def example():\n    shape = (1, 64, 54, 54)\n    c_data = np.empty(shape).astype("float32")\n    c = relay.const(c_data)\n    weight = relay.var("weight", shape=(64, 64, 3, 3))\n    x = relay.var("x", relay.TensorType((1, 64, 56, 56), "float32"))\n    conv = relay.nn.conv2d(x, weight)\n    y = relay.add(c, c)\n    y = relay.multiply(y, relay.const(2, "float32"))\n    y = relay.add(conv, y)\n    z = relay.add(y, c)\n    z1 = relay.add(y, c)\n    z2 = relay.add(z, z1)\n    return relay.Function([x, weight], z2)\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u4F18\u5316\u7A0B\u5E8F",children:"\u4F18\u5316\u7A0B\u5E8F"}),"\n",(0,s.jsx)(e.p,{children:"\u63A5\u4E0B\u6765\u4F18\u5316\u7A0B\u5E8F\uFF0CRelay \u5177\u6709\u8BB8\u591A\u4F18\u5316\u529F\u80FD\uFF0C\u9009\u62E9\u5176\u4E2D\u4E00\u90E8\u5206\u5E94\u7528\u5230\u8FD9\u4E2A\u793A\u4F8B\u7A0B\u5E8F\u4E2D\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u6709\u591A\u79CD\u65B9\u6CD5\u53EF\u4EE5\u4F18\u5316 Relay \u7A0B\u5E8F\u3002\u4E0B\u9762\u5C06\u9010\u4E00\u8BB2\u89E3\u3002"}),"\n",(0,s.jsx)(e.h3,{id:"\u624B\u52A8\u5E94\u7528\u4F18\u5316-pass",children:"\u624B\u52A8\u5E94\u7528\u4F18\u5316 Pass"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \u9996\u5148\u521B\u5EFA\u4E00\u4E2A\u5305\u542B\u4E00\u4E2A\u6216\u591A\u4E2A Relay \u7684 relay \u6A21\u5757\n# \u4F18\u5316\u51FD\u6570\u3002\nf = example()\nmod = tvm.IRModule.from_expr(f)\n\n# \u73B0\u5728\u53EF\u4EE5\u5728\u6A21\u5757\u4E0A\u5E94\u7528\u5E38\u91CF\u6298\u53E0\u3002\n# fold_const \u662F\u4E00\u4E2A\u4E0D\u5E26\u4EFB\u4F55\u53C2\u6570\u7684\u56DE\u8C03\u51FD\u6570\u3002\nfold_const = relay.transform.FoldConstant()\n# \u7136\u540E\uFF0C\u5728\u7ED9\u5B9A\u7684\u6A21\u5757\u4E0A\u8C03\u7528 pass\u3002\u6CE8\u610F\uFF0C\u5E38\u6570\n# folding pass \u5728\u51FD\u6570\u7EA7\u522B\u5DE5\u4F5C\u3002\u8BDD\u867D\u5982\u6B64\uFF0C\u6BCF\u4E2A\n# \u6A21\u5757\u4E2D\u7684\u51FD\u6570\u5C06\u5E94\u7528\u4F18\u5316\u3002\u7528\u6237\u65E0\u9700\u8FED\u4EE3\n# \u901A\u8FC7\u5404\u4E2A\u51FD\u6570\u624B\u52A8\u5E94\u7528\u6B64 pass\u3002\nmod = fold_const(mod)\n# \u4ECE\u66F4\u65B0\u540E\u7684\u7A0B\u5E8F\u4E2D\u53EF\u4EE5\u770B\u5230\u5E38\u91CF\u88AB\u6298\u53E0\u4E86\u3002\nprint(mod)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %3 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %3) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["\u53EF\u4EE5\u4EE5\u7C7B\u4F3C\u7684\u65B9\u5F0F\u5E94\u7528\u66F4\u591A\u4F18\u5316\u3002\u4F8B\u5982\uFF0C\u53EF\u4EE5\u6D88\u9664 ",(0,s.jsx)(e.em,{children:"z"})," \u548C ",(0,s.jsx)(e.em,{children:"z1"})," \u4F7F\u7528\u7684\u5E38\u7528\u8868\u8FBE\u5F0F\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"mod = relay.transform.EliminateCommonSubexpr()(mod)\nprint(mod)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"def @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %2) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u878D\u5408\u4E5F\u662F\u53C2\u6570\u5316\u7684\uFF0C\u4F8B\u5982\uFF0Copt level 0 \u5C06\u4E0D\u5141\u8BB8\u7B97\u5B50\u878D\u5408\u5728\u4E00\u8D77\u3002\u7528\u6237\u53EF\u4EE5\u901A\u8FC7 fuse_opt_level \u6765\u542F\u7528\u5B83\u3002"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"mod = relay.transform.FuseOps(fuse_opt_level=0)(mod)\n\n# \u53EF\u4EE5\u89C2\u5BDF\u5230\u4F18\u5316\u540E\u7684\u6A21\u5757\u5305\u542B\u7684\u51FD\u6570\u53EA\u6709\n# \u4E00\u4E2A\u5355\u4E00\u7684\u539F\u59CB\u64CD\u4F5C\u3002\nprint(mod)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"def @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = fn (%p03: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %p12: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    nn.conv2d(%p03, %p12, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 56, 56), float32], Tensor[(64, 64, 3, 3), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %1 = %0(%x, %weight) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = fn (%p02: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, %p11: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    add(%p02, %p11) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 54, 54), float32], Tensor[(1, 64, 54, 54), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %3 = %2(%1, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %4 = fn (%p01: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, %p1: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    add(%p01, %p1) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 54, 54), float32], Tensor[(1, 64, 54, 54), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %5 = %4(%3, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %6 = fn (%p0: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    add(%p0, %p0) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 54, 54), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %6(%5) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u4F7F\u7528-sequential-\u5E94\u7528\u4E00\u7CFB\u5217-pass",children:"\u4F7F\u7528 Sequential \u5E94\u7528\u4E00\u7CFB\u5217 Pass"}),"\n",(0,s.jsxs)(e.p,{children:["\u5982\u4E0A\u6240\u8FF0\u5E94\u7528 Pass \u5B9E\u9645\u4E0A\u5F88\u4E4F\u5473\uFF0C\u5E76\u4E14\u53EF\u80FD\u9700\u8981\u7528\u6237\u66F4\u597D\u5730\u4E86\u89E3\u5B83\u4EEC\u4E4B\u95F4\u7684\u4F9D\u8D56\u5173\u7CFB\u3002\u4F8B\u5982\uFF0C\u878D\u5408\u76EE\u524D\u5728 let \u7ED1\u5B9A\u4E0A\u6548\u679C\u4E0D\u4F73\u3002\u56E0\u6B64\uFF0C\u5982\u679C\u5728\u878D\u5408\u4E4B\u524D\u5E94\u7528\u4E86 ",(0,s.jsx)(e.code,{children:"relay.transform.ToANormalForm()"}),"\uFF0C\u5C06\u65E0\u6CD5\u878D\u5408\u53EF\u878D\u5408\u7684\u7B97\u5B50\uFF0C\u56E0\u4E3A\u6B64\u8FC7\u7A0B\u4F1A\u4E3A\u6BCF\u4E2A\u8868\u8FBE\u5F0F\u751F\u6210 let \u7ED1\u5B9A\u4EE5\u89C4\u8303 Relay \u7A0B\u5E8F\u3002"]}),"\n",(0,s.jsxs)(e.p,{children:["\u56E0\u6B64\uFF0CRelay \u63D0\u4F9B\u4E86 ",(0,s.jsx)(e.code,{children:"tvm.transform.Sequential"}),"\uFF0C\u4F7F\u5F97\u5F00\u53D1\u8005\u80FD\u591F\u66F4\u5BB9\u6613\u5730\u5904\u7406\u8FD9\u4E9B\u95EE\u9898\u3002\u4ED6\u4EEC\u901A\u8FC7\u663E\u5F0F\u6307\u5B9A\u6BCF\u4E2A pass \u6240\u9700\u7684 pass\uFF0C\u7136\u540E\u5C06\u5B83\u4EEC\u6253\u5305\u4E3A\u4E00\u4E2A\u6574\u4F53\u6765\u5B9E\u73B0\u3002"]}),"\n",(0,s.jsxs)(e.p,{children:["\u4F8B\u5982\uFF0C\u4F7F\u7528\u4E0B\u9762\u7684 sequential \u6765\u5E94\u7528\u76F8\u540C\u7684 pass\u3002",(0,s.jsx)(e.code,{children:"tvm.transform.Sequential"})," \u7C7B\u4F3C\u4E8E ",(0,s.jsx)(e.a,{href:"https://pytorch.org/docs/stable/nn.html#torch.nn.Sequential",children:"torch.nn.sequential"})," \u548C ",(0,s.jsx)(e.a,{href:"https://mxnet.apache.org/api/python/docs/_modules/mxnet/gluon/block.html",children:"mxnet.gluon.block"}),"\u3002\u4F8B\u5982\uFF0Ctorch.nn.sequential \u5305\u542B\u4E00\u7CFB\u5217 PyTorch \u6A21\u5757\uFF0C\u8FD9\u4E9B\u6A21\u5757\u5C06\u4F1A\u7528\u6765\u6784\u5EFA\u7F51\u7EDC\u3002\u5B83\u4FA7\u91CD\u4E8E\u7F51\u7EDC\u5C42\u3002\u76F8\u53CD\uFF0C\u6211\u4EEC\u7684 pass infra \u4E2D\u7684 ",(0,s.jsx)(e.code,{children:"tvm.transform.Sequential"})," \u7528\u4E8E\u4F18\u5316 pass\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \u901A\u8FC7 :py:class:`tvm.transform.Sequential` \u6267\u884C\u4E00\u4E9B\u4F20\u9012\nf = example()\nmod = tvm.IRModule.from_expr(f)\n# Glob \u611F\u5174\u8DA3\u7684 passes\u3002\nseq = tvm.transform.Sequential(\n    [\n        relay.transform.FoldConstant(),\n        relay.transform.EliminateCommonSubexpr(),\n        relay.transform.FuseOps(fuse_opt_level=2),\n    ]\n)\nmod1 = seq(mod)\nprint(mod1)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %4 = fn (%p0: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %p1: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %p2: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, %p3: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    %0 = nn.conv2d(%p0, %p1, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %1 = add(%0, %p2) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %2 = add(%1, %p3) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %3 = add(%1, %p3) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    add(%2, %3) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 56, 56), float32], Tensor[(64, 64, 3, 3), float32], Tensor[(1, 64, 54, 54), float32], Tensor[(1, 64, 54, 54), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %4(%x, %weight, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["\u4ECE\u6539\u9020\u540E\u7684 Relay \u7A0B\u5E8F\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230\u4ECD\u7136\u6709\u4E24\u4E2A\u76F8\u540C\u7684\u52A0\u6CD5\u8FD0\u7B97\u3002\u8FD9\u662F\u56E0\u4E3A ",(0,s.jsx)(e.code,{children:"EliminateCommonSubexpr"})," \u5E76\u672A\u5B9E\u9645\u6267\u884C\u3002\u539F\u56E0\u662F\u5728 ",(0,s.jsx)(e.code,{children:"tvm.transform.Sequential"})," \u4E0B\uFF0C\u53EA\u6709\u4F18\u5316\u7EA7\u522B\u5C0F\u4E8E\u6216\u7B49\u4E8E 2 \u7684 pass \u624D\u4F1A\u9ED8\u8BA4\u6267\u884C\u3002pass infra \u4E3A\u7528\u6237\u63D0\u4F9B\u4E86\u4E00\u4E2A\u914D\u7F6E\u754C\u9762\u6765\u81EA\u5B9A\u4E49\u60F3\u8981\u6267\u884C\u7684\u4F18\u5316\u7EA7\u522B\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"with tvm.transform.PassContext(opt_level=3):\n    mod2 = seq(mod)\nprint(mod2)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %3 = fn (%p0: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %p1: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %p2: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, %p3: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    %0 = nn.conv2d(%p0, %p1, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %1 = add(%0, %p2) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %2 = add(%1, %p3) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    add(%2, %2) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 56, 56), float32], Tensor[(64, 64, 3, 3), float32], Tensor[(1, 64, 54, 54), float32], Tensor[(1, 64, 54, 54), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %3(%x, %weight, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"\u73B0\u5728\u53EF\u4EE5\u770B\u5230\u4E24\u4E2A\u76F8\u540C\u7684\u52A0\u6CD5\u53EA\u4FDD\u7559\u4E00\u4E2A\u3002"}),"\n",(0,s.jsxs)(e.p,{children:["\u7528\u6237\u53EF\u4EE5\u4F7F\u7528 ",(0,s.jsx)(e.em,{children:"disabled_pass"})," \u914D\u7F6E\u9009\u62E9\u6027\u5730\u7981\u7528\u67D0\u4E9B pass\uFF0C\u8FD9\u4E0E Clang \u548C GCC \u7B49\u901A\u7528\u7F16\u8BD1\u5668\u4F7F\u7528\u7684 ",(0,s.jsx)(e.em,{children:"-fno-xxx"})," \u9009\u9879\u7C7B\u4F3C\u3002\u4F8B\u5982\uFF0C\u53EF\u4EE5\u7981\u7528\u4EE5\u4E0B EliminateCommonSubexpr\uFF0C\u6253\u5370\u7684\u6A21\u5757\u5C06\u518D\u6B21\u663E\u793A\u4E24\u4E2A\u76F8\u540C\u7684\u52A0\u6CD5\u64CD\u4F5C\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'with tvm.transform.PassContext(opt_level=3, disabled_pass=["EliminateCommonSubexpr"]):\n    mod3 = seq(mod)\nprint(mod3)\n'})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %4 = fn (%p0: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %p1: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %p2: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, %p3: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    %0 = nn.conv2d(%p0, %p1, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %1 = add(%0, %p2) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %2 = add(%1, %p3) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %3 = add(%1, %p3) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    add(%2, %3) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 56, 56), float32], Tensor[(64, 64, 3, 3), float32], Tensor[(1, 64, 54, 54), float32], Tensor[(1, 64, 54, 54), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %4(%x, %weight, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u4F7F\u7528-python-\u88C5\u9970\u5668\u5B9E\u73B0-pass",children:"\u4F7F\u7528 Python \u88C5\u9970\u5668\u5B9E\u73B0 Pass"}),"\n",(0,s.jsxs)(e.p,{children:["\u4E0B\u4E00\u4E2A\u793A\u4F8B\u8BF4\u660E\u5982\u4F55\u4F7F\u7528 Python \u88C5\u9970\u5668\u901A\u8FC7 pass infra \u6765\u81EA\u5B9A\u4E49\u4F18\u5316 pipeline\u3002\u6B64\u529F\u80FD\u6781\u5927\u5730\u7B80\u5316\u4E86pass \u7684\u5B9E\u73B0\u3002\u4F8B\u5982\uFF0C\u7528\u6237\u53EF\u4EE5\u7B80\u5355\u5730\u5B9A\u4E49\u4E00\u4E2A\u88C5\u9970\u7C7B\u6765\u8FDB\u884C\u51FD\u6570\u7EA7\u4F18\u5316\uFF0C\u5982\u4E0B\u4F8B\u6240\u793A\u3002 ",(0,s.jsx)(e.em,{children:"transform_function"})," \u5305\u88C5\u4E86\u4E00\u4E2A\u7C7B\uFF0C\u7528 c \u7684\u500D\u6570\u66FF\u6362\u6240\u6709\u5E38\u91CF\u3002\u7A0D\u540E\uFF0C\u8BBF\u95EE\u7ED9\u5B9A\u6A21\u5757\u4E2D\u7684\u6BCF\u4E2A\u51FD\u6570\uFF0C\u5E76\u4E14\u8C03\u7528\u81EA\u5B9A\u4E49 pass \u65F6\uFF0C\u51FD\u6570\u4E2D\u7684\u6BCF\u4E2A\u5E38\u91CF\u90FD\u5C06\u88AB\u66FF\u6362\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'@relay.transform.function_pass(opt_level=1)\nclass CustomPipeline:\n    """Simple test function to replace one argument to another."""\n\n    def __init__(self, multiplier):\n        self.multiplier = multiplier\n\n    # \u8FD9\u4E2A\u51FD\u6570\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2Apass\u3002\n    def transform_function(self, func, mod, ctx):\n        obj = self\n\n        class ReplaceConstant(tvm.relay.ExprMutator):\n            def visit_constant(self, c):\n                return relay.multiply(obj.multiplier, c)\n\n        return ReplaceConstant().visit(func)\n\nf = example()\nmod = tvm.IRModule.from_expr(f)\ncustom_pass = CustomPipeline(multiplier=relay.const(3, "float32"))\nassert custom_pass.info.name == "CustomPipeline"\nmod3 = custom_pass(mod)\nprint(mod3)\n'})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"def @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = multiply(3f /* ty=float32 */, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, %0) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = multiply(3f /* ty=float32 */, 2f /* ty=float32 */) /* ty=float32 */;\n  %3 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %4 = multiply(%1, %2) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %5 = add(%3, %4) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %6 = add(%5, %0) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %7 = add(%5, %0) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%6, %7) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u8C03\u8BD5-pass",children:"\u8C03\u8BD5 Pass"}),"\n",(0,s.jsxs)(e.p,{children:["TVM \u4E3A\u7528\u6237\u63D0\u4F9B\u4E86\u5373\u63D2\u5373\u7528\u5F0F\u8C03\u8BD5 Pass\uFF0C\u901A\u8FC7\u7279\u6B8A pass (",(0,s.jsx)(e.code,{children:"PrintIR"}),") \u8F6C\u50A8\u6574\u4E2A\u6A21\u5757\u7684 IR\uFF0C\u5728\u5B8C\u6210\u67D0\u4E2A pass \u540E\u6253\u5370 IR\u3002pass \u5E8F\u5217\u793A\u4F8B\u7684\u8F7B\u5FAE\u4FEE\u6539\u7248\u672C\u5982\u4E0B\u6240\u793A\uFF0C\u7528\u4E8E\u542F\u7528 IR \u8F6C\u50A8\u4EE5\u8FDB\u884C ",(0,s.jsx)(e.code,{children:"FoldConstant"})," \u4F18\u5316\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"f = example()\nmod = tvm.IRModule.from_expr(f)\nseq = tvm.transform.Sequential(\n    [\n        relay.transform.FoldConstant(),\n        tvm.transform.PrintIR(),\n        relay.transform.EliminateCommonSubexpr(),\n        relay.transform.FuseOps(),\n    ]\n)\n"})}),"\n",(0,s.jsxs)(e.p,{children:["\u901A\u8FC7\u5728 ",(0,s.jsx)(e.code,{children:"FoldConstant"})," \u4E4B\u540E\u63D2\u5165 ",(0,s.jsx)(e.code,{children:"PrintIR"})," pass\uFF0Cpass infra \u5C06\u5728 ",(0,s.jsx)(e.code,{children:"FoldConstant"})," \u5B8C\u6210\u65F6\u8F6C\u50A8\u6A21\u5757 IR\u3002\u7528\u6237\u53EF\u4EE5\u5728\u4EFB\u4F55\u60F3\u8981\u8C03\u8BD5\u7684 pass \u4E4B\u540E\u63D2\u5165\u8FD9\u4E2A pass \u6765\u67E5\u770B\u4F18\u5316\u6548\u679C\u3002"]}),"\n",(0,s.jsxs)(e.p,{children:["\u6B64\u5916\uFF0C\u8FD8\u6709\u4E00\u4E2A\u66F4\u7075\u6D3B\u7684\u8C03\u8BD5\u673A\u5236\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A ",(0,s.jsx)(e.code,{children:"PassInstrument"})," \u7C7B\u6765\u6267\u884C\u4EFB\u610F\u4EE3\u7801\uFF0C\u4E0D\u4EC5\u5728\u6BCF\u6B21\u4F20\u9012\u4E4B\u524D\u548C/\u6216\u4E4B\u540E\uFF0C\u800C\u4E14\u5728\u8FDB\u5165/\u9000\u51FA ",(0,s.jsx)(e.code,{children:"PassContext"})," \u65F6\u4E5F\u53EF\u4EE5\u3002\u6709\u5173\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u53C2\u9605 ",(0,s.jsx)(e.a,{href:"https://tvm.apache.org/docs/arch/pass_infra.html#pass-instrument-cpp-backend",children:"Pass Instrument"}),"\u3002"]}),"\n",(0,s.jsxs)(e.p,{children:["\u8FD9\u91CC\u4F7F\u7528 ",(0,s.jsx)(e.code,{children:"tvm.instrument.pass_instrument"})," \u88C5\u9970\u5668\u6765\u5B9E\u73B0\u4E00\u4E2A PassInsturment \u7C7B\uFF0C\u5728\u6BCF\u6B21\u6267\u884C\u4E4B\u524D\u6253\u5370 IR\uFF1A"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'@tvm.instrument.pass_instrument\nclass PrintIR:\n    """\u4EC5\u5728 pass \u6267\u884C\u4E4B\u524D\u6253\u5370 pass \u7684\u540D\u79F0\uFF0CIR\u3002"""\n\n    def run_before_pass(self, mod, info):\n        print("Running pass: {}", info)\n        print(mod)\n\nwith tvm.transform.PassContext(opt_level=3, instruments=[PrintIR()]):\n    with tvm.target.Target("llvm"):\n        # \u6267\u884C\u4F18\u5316\u3002\n        mod = seq(mod)\nprint(mod)\n\nprint("done")\n'})}),"\n",(0,s.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'Running pass: {} The meta data of the pass - pass name: sequential, opt_level: 0, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32], %weight: Tensor[(64, 64, 3, 3), float32]) {\n  %0 = add(meta[relay.Constant][0], meta[relay.Constant][0]);\n  %1 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]);\n  %2 = multiply(%0, 2f);\n  %3 = add(%1, %2);\n  %4 = add(%3, meta[relay.Constant][0]);\n  %5 = add(%3, meta[relay.Constant][0]);\n  add(%4, %5)\n}\n\nRunning pass: {} The meta data of the pass - pass name: FoldConstant, opt_level: 2, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32], %weight: Tensor[(64, 64, 3, 3), float32]) {\n  %0 = add(meta[relay.Constant][0], meta[relay.Constant][0]);\n  %1 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]);\n  %2 = multiply(%0, 2f);\n  %3 = add(%1, %2);\n  %4 = add(%3, meta[relay.Constant][0]);\n  %5 = add(%3, meta[relay.Constant][0]);\n  add(%4, %5)\n}\n\n/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\nRunning pass: {} The meta data of the pass - pass name: InferType, opt_level: 0, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32], %weight: Tensor[(64, 64, 3, 3), float32]) {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]);\n  %1 = add(%0, meta[relay.Constant][0]);\n  %2 = add(%1, meta[relay.Constant][1]);\n  %3 = add(%1, meta[relay.Constant][1]);\n  add(%2, %3)\n}\n\nRunning pass: {} The meta data of the pass - pass name: PrintIR, opt_level: 0, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %3 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %3) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n\nRunning pass: {} The meta data of the pass - pass name: InferType, opt_level: 0, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %3 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %3) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n\nRunning pass: {} The meta data of the pass - pass name: EliminateCommonSubexpr, opt_level: 3, required passes: [\nInferType, ]\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %3 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %3) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n\nRunning pass: {} The meta data of the pass - pass name: InferType, opt_level: 0, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %2) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n\nRunning pass: {} The meta data of the pass - pass name: InferType, opt_level: 0, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %2) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n\nRunning pass: {} The meta data of the pass - pass name: FuseOps, opt_level: 0, required passes: [\nInferType, ]\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %0 = nn.conv2d(%x, %weight, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %1 = add(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n  add(%2, %2) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n\nRunning pass: {} The meta data of the pass - pass name: InferType, opt_level: 0, required passes: []\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %3 = fn (%p0: Tensor[(1, 64, 56, 56), float32], %p1: Tensor[(64, 64, 3, 3), float32], %p2: Tensor[(1, 64, 54, 54), float32], %p3: Tensor[(1, 64, 54, 54), float32], Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    %0 = nn.conv2d(%p0, %p1, padding=[0, 0, 0, 0]);\n    %1 = add(%0, %p2);\n    %2 = add(%1, %p3);\n    add(%2, %2)\n  };\n  %3(%x, %weight, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */)\n}\n\ndef @main(%x: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */) -> Tensor[(1, 64, 54, 54), float32] {\n  %3 = fn (%p0: Tensor[(1, 64, 56, 56), float32] /* ty=Tensor[(1, 64, 56, 56), float32] */, %p1: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] */, %p2: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, %p3: Tensor[(1, 64, 54, 54), float32] /* ty=Tensor[(1, 64, 54, 54), float32] */, Primitive=1) -> Tensor[(1, 64, 54, 54), float32] {\n    %0 = nn.conv2d(%p0, %p1, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %1 = add(%0, %p2) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    %2 = add(%1, %p3) /* ty=Tensor[(1, 64, 54, 54), float32] */;\n    add(%2, %2) /* ty=Tensor[(1, 64, 54, 54), float32] */\n  } /* ty=fn (Tensor[(1, 64, 56, 56), float32], Tensor[(64, 64, 3, 3), float32], Tensor[(1, 64, 54, 54), float32], Tensor[(1, 64, 54, 54), float32]) -> Tensor[(1, 64, 54, 54), float32] */;\n  %3(%x, %weight, meta[relay.Constant][0] /* ty=Tensor[(1, 64, 54, 54), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 64, 54, 54), float32] */) /* ty=Tensor[(1, 64, 54, 54), float32] */\n}\n\ndone\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u603B\u7ED3",children:"\u603B\u7ED3"}),"\n",(0,s.jsxs)(e.p,{children:["\u672C\u6559\u7A0B\u4ECB\u7ECD\u4E86\u5982\u4F55\u4F7F\u7528 pass infra \u66F4\u65B9\u4FBF\u5730\u5728 TVM \u4E2D\u7F16\u5199\u548C\u8C03\u7528 pass\u3002\u8FD8\u8BA8\u8BBA\u4E86\u8C03\u7528 pass \u7684\u4E0D\u540C\u65B9\u5F0F\u3002\u4F7F\u7528 ",(0,s.jsx)(e.code,{children:"tvm.transform.Sequential"})," \u53EF\u4EE5\u5728\u5F88\u5927\u7A0B\u5EA6\u4E0A\u5E2E\u52A9\u7528\u6237\u7B80\u5316\u5904\u7406\u591A\u4E2A\u4F18\u5316\u8FC7\u7A0B\u53CA\u5176\u4F9D\u8D56\u5173\u7CFB\u7684\u5DE5\u4F5C\u3002\u6B64\u5916\uFF0C\u8FD8\u63D0\u4F9B\u4E86\u4E00\u4E2A\u793A\u4F8B\u6765\u8BF4\u660E\u5982\u4F55\u4F7F\u7528 ",(0,s.jsx)(e.code,{children:"PrintIR"})," \u548C\u8DDF\u8E2A\u6765\u8C03\u8BD5 pass\u3002"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/5499fb7d70e17c6aabf49246a978db52/use_pass_infra.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Ause_pass_infra.py"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/7ef14586a3b62fe120d97d5fedf72879/use_pass_infra.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Ause_pass_infra.ipynb"})})]})}function p(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(f,{...n})}):f(n)}},21494:function(n,e,t){t.d(e,{Z:function(){return l},a:function(){return r}});var a=t(39546);let s={},o=a.createContext(s);function r(n){let e=a.useContext(o);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),a.createElement(o.Provider,{value:e},n.children)}}}]);