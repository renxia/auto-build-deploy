"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["34049"],{69756:function(e,t,n){n.r(t),n.d(t,{default:()=>p,frontMatter:()=>c,metadata:()=>r,assets:()=>l,toc:()=>d,contentTitle:()=>o});var r=JSON.parse('{"id":"dev/how_to/relay_add_op","title":"\u5411 Relay \u4E2D\u6DFB\u52A0\u7B97\u5B50","description":"\u672C\u6587\u6863\u5C06\u4EE5\u6DFB\u52A0 cumulative product \u7B97\u5B50\u7684 PR\uFF08\u57FA\u4E8E cumulative sum \u7B97\u5B50 PR\uFF09\u4E3A\u4F8B\uFF0C\u4ECB\u7ECD\u5728 Relay \u4E2D\u6CE8\u518C\u4E00\u4E2A\u65B0\u7684 TVM \u7B97\u5B50\u6240\u9700\u7684\u6B65\u9AA4\u3002","source":"@site/versioned_docs/version-0.12.0/dev/how_to/02-relay_add_op.md","sourceDirName":"dev/how_to","slug":"/dev/how_to/relay_add_op","permalink":"/docs/tvm-cn/docs/0.12.0/dev/how_to/relay_add_op","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/dev/how_to/02-relay_add_op.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":2,"frontMatter":{"title":"\u5411 Relay \u4E2D\u6DFB\u52A0\u7B97\u5B50"},"sidebar":"tutorialSidebar","previous":{"title":"\u8C03\u8BD5 TVM","permalink":"/docs/tvm-cn/docs/0.12.0/dev/how_to/debugging_tvm"},"next":{"title":"\u5411 Relay \u4E2D\u6DFB\u52A0 Compiler Pass","permalink":"/docs/tvm-cn/docs/0.12.0/dev/how_to/relay_add_pass"}}'),s=n("74132"),a=n("21494");let c={title:"\u5411 Relay \u4E2D\u6DFB\u52A0\u7B97\u5B50"},o="\u5411 Relay \u4E2D\u6DFB\u52A0\u7B97\u5B50",l={},d=[{value:"1. \u5B9A\u4E49\u5C5E\u6027\u8282\u70B9",id:"1-\u5B9A\u4E49\u5C5E\u6027\u8282\u70B9",level:2},{value:"2. \u7F16\u5199\u7C7B\u578B\u5173\u7CFB",id:"2-\u7F16\u5199\u7C7B\u578B\u5173\u7CFB",level:2},{value:"3. \u5C06\u53C2\u6570\u6570\u91CF\u548C\u5C5E\u6027\u4E0E\u7B97\u5B50\u5173\u8054\u8D77\u6765",id:"3-\u5C06\u53C2\u6570\u6570\u91CF\u548C\u5C5E\u6027\u4E0E\u7B97\u5B50\u5173\u8054\u8D77\u6765",level:2},{value:"4. \u5B9A\u4E49\u7B97\u5B50\u7684\u8BA1\u7B97",id:"4-\u5B9A\u4E49\u7B97\u5B50\u7684\u8BA1\u7B97",level:2},{value:"5. \u5C06\u8BA1\u7B97\uFF08compute\uFF09\u548C\u7B56\u7565\uFF08strategy\uFF09\u4E0E Relay \u5173\u8054\u8D77\u6765",id:"5-\u5C06\u8BA1\u7B97compute\u548C\u7B56\u7565strategy\u4E0E-relay-\u5173\u8054\u8D77\u6765",level:2},{value:"6. \u521B\u5EFA Relay \u8C03\u7528\u8282\u70B9\u5E76\u63D0\u4F9B Python Hook",id:"6-\u521B\u5EFA-relay-\u8C03\u7528\u8282\u70B9\u5E76\u63D0\u4F9B-python-hook",level:2},{value:"7. \u5305\u542B\u4E00\u4E2A\u66F4\u7B80\u6D01\u7684 Python API hook",id:"7-\u5305\u542B\u4E00\u4E2A\u66F4\u7B80\u6D01\u7684-python-api-hook",level:2},{value:"8. \u7F16\u5199\u5355\u5143\u6D4B\u8BD5",id:"8-\u7F16\u5199\u5355\u5143\u6D4B\u8BD5",level:2},{value:"\u68AF\u5EA6\u7B97\u5B50",id:"\u68AF\u5EA6\u7B97\u5B50",level:2},{value:"\u5728 Python \u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50",id:"\u5728-python-\u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50",level:2},{value:"\u5728 C++ \u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50",id:"\u5728-c-\u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50",level:2}];function i(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"\u5411-relay-\u4E2D\u6DFB\u52A0\u7B97\u5B50",children:"\u5411 Relay \u4E2D\u6DFB\u52A0\u7B97\u5B50"})}),"\n",(0,s.jsxs)(t.p,{children:["\u672C\u6587\u6863\u5C06\u4EE5\u6DFB\u52A0 ",(0,s.jsx)(t.a,{href:"https://github.com/apache/tvm/pull/7722",children:"cumulative product"})," \u7B97\u5B50\u7684 PR\uFF08\u57FA\u4E8E ",(0,s.jsx)(t.a,{href:"https://github.com/apache/tvm/pull/7334",children:"cumulative sum"})," \u7B97\u5B50 PR\uFF09\u4E3A\u4F8B\uFF0C\u4ECB\u7ECD\u5728 Relay \u4E2D\u6CE8\u518C\u4E00\u4E2A\u65B0\u7684 TVM \u7B97\u5B50\u6240\u9700\u7684\u6B65\u9AA4\u3002"]}),"\n",(0,s.jsx)(t.p,{children:"\u6CE8\u518C\u4E00\u4E2A\u65B0\u7684\u7B97\u5B50\u9700\u8981\u5982\u4E0B\u51E0\u4E2A\u6B65\u9AA4\uFF1A"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"\u6DFB\u52A0\u4E00\u4E2A\u5C5E\u6027\u8282\u70B9\uFF0C\u58F0\u660E\u5728\u7F16\u8BD1\u65F6\u5DF2\u77E5\u7684\u56FA\u5B9A\u53C2\u6570"}),"\n",(0,s.jsx)(t.li,{children:"\u4E3A\u7B97\u5B50\u7F16\u5199\u4E00\u4E2A\u7C7B\u578B\u5173\u7CFB\uFF0C\u4EE5\u6574\u5408\u5230 Relay \u7684\u7C7B\u578B\u7CFB\u7EDF\u4E2D"}),"\n",(0,s.jsxs)(t.li,{children:["\u4F7F\u7528 C++ \u4E2D\u7684 ",(0,s.jsx)(t.code,{children:"RELAY_REGISTER_OP"})," \u5B8F\uFF0C\u4E3A\u7F16\u8BD1\u5668\u6CE8\u518C\u7B97\u5B50\u7684\u6570\u91CF\u3001\u7C7B\u578B\u548C\u5176\u4ED6\u63D0\u793A"]}),"\n",(0,s.jsx)(t.li,{children:"\u7F16\u5199\u7B97\u5B50\u7684\u8BA1\u7B97\u65B9\u5F0F"}),"\n",(0,s.jsx)(t.li,{children:"\u7528 Relay \u6CE8\u518C\u7B97\u5B50\u548C schedule"}),"\n",(0,s.jsx)(t.li,{children:"\u5B9A\u4E49\u4E00\u4E2A\u4E3A\u7B97\u5B50\u4EA7\u751F\u8C03\u7528\u8282\u70B9\u7684 C++ \u51FD\u6570\uFF0C\u5E76\u4E3A\u8BE5\u51FD\u6570\u6CE8\u518C\u4E00\u4E2A Python API hook"}),"\n",(0,s.jsx)(t.li,{children:"\u5C06\u4E0A\u8FF0 Python API hook \u653E\u5728\u4E00\u4E2A\u66F4\u7B80\u6D01\u7684\u63A5\u53E3\u4E2D"}),"\n",(0,s.jsx)(t.li,{children:"\u4E3A\u65B0\u7684 Relay \u7B97\u5B50\u7F16\u5199\u6D4B\u8BD5"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"1-\u5B9A\u4E49\u5C5E\u6027\u8282\u70B9",children:"1. \u5B9A\u4E49\u5C5E\u6027\u8282\u70B9"}),"\n",(0,s.jsx)(t.p,{children:"\u5C5E\u6027\u662F\u5728\u7F16\u8BD1\u65F6\u5DF2\u77E5\u7684\u56FA\u5B9A\u53C2\u6570\u3002\u5377\u79EF\u7B97\u5B50\u7684\u6B65\u957F\u548C\u6269\u5F20\u53EF\u80FD\u5C5E\u4E8E\u5377\u79EF\u7B97\u5B50\u5C5E\u6027\u8282\u70B9\u5B57\u6BB5\u7684\u6070\u5F53\u793A\u4F8B\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["\u5C5E\u6027\u5E94\u5728\u6587\u4EF6\u5939 ",(0,s.jsx)(t.a,{href:"https://github.com/apache/tvm/tree/main/include/tvm/relay/attrs",children:"include/tvm/relay/attrs/"})," \u5185\u7684\u6587\u4EF6\u4E2D\u5B9A\u4E49\u3002"]}),"\n",(0,s.jsx)(t.p,{children:"\u6700\u7EC8\u6211\u4EEC\u8981\u521B\u5EFA\u4E00\u4E2A\u7B97\u5B50\uFF0C\u5B83\u7684\u63A5\u53E3\u53EF\u4EE5\u5728\u6700\u7EC8\u7684 Python \u63A5\u53E3\u4E2D\u6E05\u6670\u53EF\u89C1\uFF1A"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def cumprod(data, axis=None, dtype=None, exclusive=None):\n    """Numpy style cumprod op. Return the cumulative inclusive product of the elements along a given axis.\n    \u53C2\u6570\n    ----------\n    data : relay.Expr \u7C7B\u578B\n        \u7B97\u5B50\u7684\u8F93\u5165\u6570\u636E\u3002\n    axis : int \u7C7B\u578B\uFF0C\u53EF\u9009\n        Axis along which the cumulative product is computed. The default (None) is to compute the cumprod over the flattened array.\n    dtype : string \u7C7B\u578B\uFF0C\u53EF\u9009\n        Type of the returned array and of the accumulator in which the elements are multiplied.\n        \u5982\u679C dtype \u6CA1\u6709\u88AB\u6307\u5B9A, \u90A3\u4E48\u5B83\u9ED8\u8BA4\u4E3A data \u7684 dtype\u3002\n    exclusive : bool \u7C7B\u578B\uFF0C\u53EF\u9009\n        If true will return exclusive product in which the first element is not included. In other terms, if true, the j-th output element would be the product of the first (j-1) elements. Otherwise, it would be the product of the first j elements. The product of zero elements will be 1.\n    \u8FD4\u56DE\n    -------\n    result : relay.Expr \u7C7B\u578B\n        \u5982\u679C axis \u4E0D\u4E3A\u7A7A\u7684\u8BDD\uFF0C\u7ED3\u679C\u7684\u5927\u5C0F\u548C\u5F62\u72B6\u548C data \u4E00\u6837\u3002\n        \u5982\u679C axis \u4E3A\u7A7A\u7684\u8BDD, \u7ED3\u679C\u662F\u4E00\u4E2A\u4E00\u7EF4\u6570\u7EC4\u3002\n    """\n'})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"cumsum()"})," \u5B58\u5728\u7C7B\u4F3C\u7684\u63A5\u53E3\u3002"]}),"\n",(0,s.jsxs)(t.p,{children:["\u56E0\u6B64\uFF0C\u5728 ",(0,s.jsx)(t.code,{children:"include/tvm/relay/attrs/transform.h"})," \u4E2D\u5B9A\u4E49\u5C5E\u6027\u65F6\uFF0C\u53EF\u4EE5\u9009\u62E9\u7B97\u5B50\u7684 axis\u3001accumulation dtype \u53CA exclusivity \u4F5C\u4E3A\u7ED3\u6784\u4F53\u7684\u5408\u9002\u5B57\u6BB5\u3002"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'/*! \u7528\u5728 cumsum \u548C cumprod \u7B97\u5B50\u4E2D\u7684\u7B80\u5355\u5C5E\u6027 */\nstruct ScanopAttrs : public tvm::AttrsNode<ScanopAttrs> {\n  Integer axis;\n  DataType dtype;\n  Bool exclusive = Bool(false);\n  TVM_DECLARE_ATTRS(ScanopAttrs, "relay.attrs.ScanopAttrs") {\n    TVM_ATTR_FIELD(axis).describe("The axis to operate over").set_default(NullValue<Integer>());\n    TVM_ATTR_FIELD(dtype).describe("Output data type").set_default(NullValue<DataType>());\n    TVM_ATTR_FIELD(exclusive)\n        .describe("The first element is not included")\n        .set_default(Bool(false));\n  }\n};\n'})}),"\n",(0,s.jsx)(t.h2,{id:"2-\u7F16\u5199\u7C7B\u578B\u5173\u7CFB",children:"2. \u7F16\u5199\u7C7B\u578B\u5173\u7CFB"}),"\n",(0,s.jsx)(t.p,{children:"\u4E3A\u4E86\u63D0\u9AD8\u6CE8\u518C\u7B97\u5B50\u7684\u7075\u6D3B\u6027\uFF0C\u5728 Relay \u4E2D\u8868\u793A\u7C7B\u578B\u65F6\u66F4\u7A81\u51FA\uFF0C\u7B97\u5B50\u4F7F\u7528\u8F93\u5165\u548C\u8F93\u51FA\u7C7B\u578B\u4E4B\u95F4\u7684\u5173\u7CFB\u8FDB\u884C\u7C7B\u578B\u5316\u3002\u8FD9\u4E9B\u5173\u7CFB\u88AB\u8868\u793A\u4E3A\u51FD\u6570\uFF0C\u5B83\u63A5\u6536\u4E00\u4E2A\u8F93\u5165\u7C7B\u578B\u548C\u8F93\u51FA\u7C7B\u578B\u7684\u5217\u8868\uFF08\u8FD9\u4E9B\u7C7B\u578B\u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A\u90FD\u53EF\u80FD\u662F\u4E0D\u5B8C\u6574\u7684\uFF09\uFF0C\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A\u6EE1\u8DB3\u5173\u7CFB\u7684\u8F93\u5165\u548C\u8F93\u51FA\u7C7B\u578B\u7684\u5217\u8868\uFF0C\u5305\u62EC\u53EF\u4EE5\u5728\u7F16\u8BD1\u65F6\u9759\u6001\u786E\u5B9A\u7684\u5F62\u72B6\u4FE1\u606F\u3002\u57FA\u672C\u4E0A\uFF0C\u4E00\u4E2A\u7B97\u5B50\u7684\u5173\u7CFB\u9664\u4E86\u8BA1\u7B97\u8F93\u51FA\u7C7B\u578B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u6267\u884C\u6240\u6709\u5FC5\u8981\u7684\u7C7B\u578B\u5316\u89C4\u5219\uFF08\u5373\u901A\u8FC7\u68C0\u67E5\u8F93\u5165\u7C7B\u578B\uFF09\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["\u5728 ",(0,s.jsx)(t.code,{children:"src/relay/op/tensor/transform.cc"})," \u4E2D\u53EF\u4EE5\u627E\u5230 cumulative product \u4E0E cumulative product \u7B97\u5B50\u7684\u7C7B\u578B\u5173\u7CFB\u3002"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'TVM_REGISTER_NODE_TYPE(ScanopAttrs);\nbool ScanopRel(const Array<Type>& types, int num_inputs, const Attrs& attrs, const TypeReporter& reporter) {\n    // types: [data, output]\n    ICHECK_EQ(types.size(), 2) << "Expects two types, one for the input and another for the output";\n    const auto* data = types[0].as<TensorTypeNode>();\n    if (data == nullptr) {\n        ICHECK(types[0].as<IncompleteTypeNode>())\n        << "Scanop: expect input type to be TensorType but get " << types[0];\n        return false;\n    }\n\n    const auto* param = attrs.as<ScanopAttrs>();\n\n    auto dtype = param->dtype;\n    if (dtype.is_void()) {\n        dtype = data->dtype;\n    }\n\n    if (param->axis.defined()) {\n        reporter->Assign(types[1], TensorType(data->shape, dtype));\n    } else {\n        auto prod = data->shape[0];\n        for (size_t i = 1; i < data->shape.size(); ++i) {\n            prod = prod * data->shape[i];\n        }\n        reporter->Assign(types[1], TensorType({prod}, dtype));\n    }\n\n    return true;\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"3-\u5C06\u53C2\u6570\u6570\u91CF\u548C\u5C5E\u6027\u4E0E\u7B97\u5B50\u5173\u8054\u8D77\u6765",children:"3. \u5C06\u53C2\u6570\u6570\u91CF\u548C\u5C5E\u6027\u4E0E\u7B97\u5B50\u5173\u8054\u8D77\u6765"}),"\n",(0,s.jsxs)(t.p,{children:["\u6CE8\u518C\u65B0\u7B97\u5B50\u7684\u540D\u79F0\uFF0C\u5E76\u4E3A\u5176\u6DFB\u52A0\u8C03\u7528\u63A5\u53E3\u7684\u6CE8\u89E3\u3002C++ \u4E2D\u7684 ",(0,s.jsx)(t.code,{children:"RELAY_REGISTER_OP"})," \u5B8F\u5141\u8BB8\u5F00\u53D1\u8005\u5728 Relay \u4E2D\u6307\u5B9A\u4E00\u4E2A\u7B97\u5B50\u7684\u4EE5\u4E0B\u4FE1\u606F\uFF1A"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"\u53C2\u6570\u6570\u91CF"}),"\n",(0,s.jsx)(t.li,{children:"\u4F4D\u7F6E\u53C2\u6570\u7684\u540D\u79F0\u548C\u63CF\u8FF0"}),"\n",(0,s.jsx)(t.li,{children:"\u652F\u6301\u7EA7\u522B\uFF081 \u8868\u793A\u5185\u90E8\u56FA\u6709\u7684\uFF1B\u66F4\u9AD8\u7684\u6570\u5B57\u8868\u793A\u96C6\u6210\u5EA6\u4F4E\u6216\u5916\u90E8\u652F\u6301\u7684\u7B97\u5B50\uFF09"}),"\n",(0,s.jsx)(t.li,{children:"\u7B97\u5B50\u7684\u7C7B\u578B\u5173\u7CFB"}),"\n",(0,s.jsx)(t.li,{children:"\u5176\u4ED6\u5728\u4F18\u5316\u7B97\u5B50\u65F6\u6709\u7528\u7684\u6CE8\u89E3"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["\u518D\u6B21\u5C06\u5176\u6DFB\u52A0\u5230 ",(0,s.jsx)(t.code,{children:"src/relay/op/tensor/transform.cc"})," \u4E2D\uFF1A"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'RELAY_REGISTER_OP("cumsum")\n    .describe(\n        R"doc(Return the cumulative sum of the elements along a given axis.)doc" TVM_ADD_FILELINE)\n    .set_num_inputs(1)\n    .add_argument("data", "Tensor", "The input tensor.")\n    .set_support_level(3)\n    .add_type_rel("Cumsum", ScanopRel)\n    .set_attr<TOpPattern>("TOpPattern", kOpaque);\n\nRELAY_REGISTER_OP("cumprod")\n    .describe(\n        R"doc(Return the cumulative product of the elements along a given axis.)doc" TVM_ADD_FILELINE)\n    .set_num_inputs(1)\n    .add_argument("data", "Tensor", "The input tensor.")\n    .set_support_level(3)\n    .add_type_rel("Cumprod", ScanopRel)\n    .set_attr<TOpPattern>("TOpPattern", kOpaque);\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C",(0,s.jsx)(t.code,{children:"TOpPattern"})," \u662F\u5BF9\u7F16\u8BD1\u5668\u5173\u4E8E\u7B97\u5B50\u6267\u884C\u7684\u8BA1\u7B97\u6A21\u5F0F\u7684\u63D0\u793A\uFF0C\u8FD9\u5BF9\u4E8E\u878D\u5408\u7B97\u5B50\u53EF\u80FD\u5F88\u6709\u7528\u3002",(0,s.jsx)(t.code,{children:"kOpaque"})," \u63D0\u793A TVM \u65E0\u9700\u878D\u5408\u8FD9\u4E2A\u7B97\u5B50\u3002"]}),"\n",(0,s.jsx)(t.h2,{id:"4-\u5B9A\u4E49\u7B97\u5B50\u7684\u8BA1\u7B97",children:"4. \u5B9A\u4E49\u7B97\u5B50\u7684\u8BA1\u7B97"}),"\n",(0,s.jsx)(t.p,{children:"\u4E3A\u7B97\u5B50\u5B9A\u4E49\u63A5\u53E3\u540E\uFF0C\u4ECD\u9700\u5B9A\u4E49\u5982\u4F55\u6267\u884C cumulative sum \u548C cumulative product \u7684\u5B9E\u9645\u8BA1\u7B97\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["\u5047\u8BBE\u7B97\u5B50\u8BA1\u7B97\u7684\u5B9E\u73B0\u65B9\u5F0F\uFF0C\u7ECF\u8FC7\u4E86\u591A\u8F6E\u6D4B\u8BD5\u4E14\u8868\u73B0\u826F\u597D\u3002\u63A8\u8350\u67E5\u770B ",(0,s.jsx)(t.a,{href:"/docs/tutorial/tensor_expr",children:"\u5F20\u91CF\u8868\u8FBE\u5F0F\u6559\u7A0B"}),"\u3001",(0,s.jsx)(t.a,{href:"/docs/tutorial/TOPI",children:"TVM \u7B97\u5B50\u6E05\u5355\uFF08topi\uFF09"}),"\u3001",(0,s.jsx)(t.a,{href:"https://github.com/apache/tvm/blob/main/python/tvm/topi/scan.py",children:"python/tvm/topi/scan.py"})," \u4E2D cumulative sum \u53CA cumulative product \u76F8\u5173\u5B9E\u73B0\u6848\u4F8B\uFF0C\u4EE5\u53CA ",(0,s.jsx)(t.a,{href:"https://github.com/apache/tvm/blob/main/python/tvm/topi/cuda/scan.py",children:"python/tvm/topi/cuda/scan.py"})," \u4E2D\u7684 GPU \u7248\u672C\u3002\u5728 cumulative sum \u53CA cumulative product \u7B97\u5B50\u4E2D\uFF0C\u53EF\u4EE5\u76F4\u63A5\u7528 ",(0,s.jsx)(t.a,{href:"https://tvm.apache.org/docs/reference/api/python/tir.html#api-python-tir",children:"TIR"}),"\uFF0C\u5F20\u91CF\u8868\u8FBE\u5F0F\u53CA topi \u964D\u7EA7\u540E\u8868\u793A\u4E3A TIR\u3002"]}),"\n",(0,s.jsx)(t.h2,{id:"5-\u5C06\u8BA1\u7B97compute\u548C\u7B56\u7565strategy\u4E0E-relay-\u5173\u8054\u8D77\u6765",children:"5. \u5C06\u8BA1\u7B97\uFF08compute\uFF09\u548C\u7B56\u7565\uFF08strategy\uFF09\u4E0E Relay \u5173\u8054\u8D77\u6765"}),"\n",(0,s.jsx)(t.p,{children:"\u5B9E\u73B0\u8BA1\u7B97\u51FD\u6570\u540E\uFF0C\u9700\u8981\u5C06\u5176\u4E0E Relay \u7B97\u5B50\u7C98\u5408\u5728\u4E00\u8D77\u3002\u5728 TVM \u4E2D\uFF0C\u8FD9\u610F\u5473\u7740\u4E0D\u4EC5\u8981\u5B9A\u4E49 computation\uFF0C\u8FD8\u8981\u5B9A\u4E49\u7B97\u5B50\u7684 schedule\u3002\u7B56\u7565\u51B3\u5B9A\u4F7F\u7528\u54EA\u79CD computation \u53CA schedule\u3002\u4F8B\u5982\uFF0C\u5BF9\u4E8E\u4E8C\u7EF4\u5377\u79EF\uFF0C\u8BC6\u522B\u51FA\u8FD9\u5C5E\u4E8E\u4E00\u79CD\u6DF1\u5EA6\u5377\u79EF\u540E\uFF0C\u6700\u7EC8\u5C06\u5176\u5206\u914D\u7ED9\u4E00\u4E2A\u66F4\u6709\u6548\u7684 computation \u548C schedule\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["\u5B9E\u9645\u4E0A\u9664\u4E86\u5728 CPU \u548C GPU \u7684\u5B9E\u73B0\u4E4B\u95F4\u8FDB\u884C\u8C03\u5EA6\u5916\uFF0C\u57FA\u672C\u6CA1\u6709\u7C7B\u4F3C\u9700\u6C42\u3002\u5728  ",(0,s.jsx)(t.code,{children:"python/tvm/relay/op/strategy/generic.py"})," \u548C ",(0,s.jsx)(t.code,{children:"python/tvm/relay/op/strategy/cuda.py"})," \u4E2D\uFF0C\u6211\u4EEC\u6DFB\u52A0\u4E86\u5982\u4E0B\u7B56\u7565\uFF1A"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def wrap_compute_scanop(topi_compute):\n    """Wrap scanop style topi compute"""\n\n    def _compute_scanop(attrs, inputs, _):\n        return [topi_compute(inputs[0], attrs.axis, attrs.dtype, attrs.exclusive)]\n\n    return _compute_scanop\n\n@override_native_generic_func("cumsum_strategy")\ndef cumsum_strategy(attrs, inputs, out_type, target):\n    """cumsum \u57FA\u672C\u7B56\u7565"""\n    strategy = _op.OpStrategy()\n    strategy.add_implementation(\n        wrap_compute_scanop(topi.cumsum),\n        wrap_topi_schedule(topi.generic.schedule_extern),\n        name="cumsum.generic",\n    )\n    return strategy\n\n@override_native_generic_func("cumprod_strategy")\ndef cumprod_strategy(attrs, inputs, out_type, target):\n    """cumprod \u57FA\u672C\u7B56\u7565"""\n    strategy = _op.OpStrategy()\n    strategy.add_implementation(\n        wrap_compute_scanop(topi.cumprod),\n        wrap_topi_schedule(topi.generic.schedule_extern),\n        name="cumprod.generic",\n    )\n    return strategy\n\n@cumsum_strategy.register(["cuda", "gpu"])\ndef cumsum_strategy_cuda(attrs, inputs, out_type, target):\n    """cumsum cuda \u7B56\u7565"""\n    strategy = _op.OpStrategy()\n    strategy.add_implementation(\n        wrap_compute_scanop(topi.cuda.cumsum),\n        wrap_topi_schedule(topi.cuda.schedule_scan),\n        name="cumsum.cuda",\n    )\n    return strategy\n\n@cumprod_strategy.register(["cuda", "gpu"])\ndef cumprod_strategy_cuda(attrs, inputs, out_type, target):\n    """cumprod cuda \u7B56\u7565"""\n    strategy = _op.OpStrategy()\n    strategy.add_implementation(\n        wrap_compute_scanop(topi.cuda.cumprod),\n        wrap_topi_schedule(topi.cuda.schedule_scan),\n        name="cumprod.cuda",\n    )\n    return strategy\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u6BCF\u4E2A\u7B56\u7565\u90FD\u5B9A\u4E49\u4E86\u5199\u5165\u7684 compute \u4EE5\u53CA\u5728 ",(0,s.jsx)(t.code,{children:"add_implementation()"})," \u4E2D\u4F7F\u7528\u7684 schedule\u3002\u6700\u540E\uFF0C\u5C06 strategy \u548C compute \u4E0E",(0,s.jsx)(t.code,{children:"python/tvm/relay/op/_transform.py"})," \u4E2D\u5B9A\u4E49\u7684 Relay \u7B97\u5B50\u5173\u8054\u8D77\u6765\u3002"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'# cumsum\n@_reg.register_compute("cumsum")\ndef compute_cumsum(attrs, inputs, output_type):\n    """cumsum \u7684\u8BA1\u7B97\u5B9A\u4E49"""\n    return [topi.cumsum(inputs[0], attrs.axis, attrs.dtype, attrs.exclusive)]\n\n_reg.register_strategy("cumsum", strategy.cumsum_strategy)\n_reg.register_shape_func("cumsum", False, elemwise_shape_func)\n\n# cumprod\n@_reg.register_compute("cumprod")\ndef compute_cumprod(attrs, inputs, output_type):\n    """cumprod \u7684\u8BA1\u7B97\u5B9A\u4E49"""\n    return [topi.cumprod(inputs[0], attrs.axis, attrs.dtype, attrs.exclusive)]\n\n_reg.register_strategy("cumprod", strategy.cumprod_strategy)\n_reg.register_shape_func("cumprod", False, elemwise_shape_func)\n'})}),"\n",(0,s.jsx)(t.p,{children:"shape \u51FD\u6570\u7528\u4E8E\u786E\u5B9A output shape\uFF0C\u7ED9\u5B9A\u4E00\u4E2A\u52A8\u6001 shaped tensor\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0CTVM \u7684 output shape \u4E0E input shape \u4FDD\u6301\u4E00\u81F4\u3002"}),"\n",(0,s.jsx)(t.h2,{id:"6-\u521B\u5EFA-relay-\u8C03\u7528\u8282\u70B9\u5E76\u63D0\u4F9B-python-hook",children:"6. \u521B\u5EFA Relay \u8C03\u7528\u8282\u70B9\u5E76\u63D0\u4F9B Python Hook"}),"\n",(0,s.jsx)(t.p,{children:"\u73B0\u5728\u5DF2\u7ECF\u6709\u4E86\u4E00\u4E2A\u53EF\u4EE5\u8FD0\u884C\u7684\u7B97\u5B50\uFF0C\u63A5\u4E0B\u6765\u53EA\u9700\u901A\u8FC7\u4E00\u4E2A Relay \u8C03\u7528\u8282\u70B9\uFF08Relay Call Node\uFF09\u6B63\u786E\u5730\u8C03\u7528\u5373\u53EF\u3002\u8FD9\u4E00\u6B65\u9700\u8981\u7B80\u5355\u5730\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u63A5\u6536\u7B97\u5B50\u7684\u53C2\u6570\uFF08\u4F5C\u4E3A Relay \u8868\u8FBE\u5F0F\uFF09\uFF0C\u5E76\u5411\u7B97\u5B50\u8FD4\u56DE\u4E00\u4E2A\u7684\u8C03\u7528\u8282\u70B9\uFF08\u5373\u5E94\u8BE5\u88AB\u653E\u5728\u8C03\u7528\u7B97\u5B50\u7684 Relay AST \u4E2D\u7684\u8282\u70B9\uFF09\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["\u76EE\u524D\u4E0D\u652F\u6301\u8C03\u7528\u5C5E\u6027\u548C\u7C7B\u578B\u53C2\u6570\uFF08\u6700\u540E\u4E24\u4E2A\u5B57\u6BB5\uFF09\uFF0C\u6240\u4EE5\u53EA\u9700\u4F7F\u7528  ",(0,s.jsx)(t.code,{children:"Op::Get"})," \u4ECE\u7B97\u5B50\u6CE8\u518C\u8868\u4E2D\u83B7\u53D6\u7B97\u5B50\u4FE1\u606F\uFF0C\u5E76\u5C06\u53C2\u6570\u4F20\u9012\u7ED9\u8C03\u7528\u8282\u70B9\uFF08\u5982\u4E0B\u6240\u793A\uFF09\u3002\u5728 ",(0,s.jsx)(t.code,{children:"src/relay/op/tensor/transform.cc"}),"\uFF1A"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'Expr MakeCumsum(Expr data, Integer axis, DataType dtype, Bool exclusive) {\n    auto attrs = make_object<ScanopAttrs>();\n    attrs->dtype = dtype;\n    attrs->axis = axis;\n    attrs->exclusive = exclusive;\n    static const Op& op = Op::Get("cumsum");\n    return Call(op, {data}, Attrs(attrs), {});\n}\n\nTVM_REGISTER_GLOBAL("relay.op._make.cumsum").set_body_typed(MakeCumsum);\n\nExpr MakeCumprod(Expr data, Integer axis, DataType dtype, Bool exclusive) {\n    auto attrs = make_object<ScanopAttrs>();\n    attrs->dtype = dtype;\n    attrs->axis = axis;\n    attrs->exclusive = exclusive;\n    static const Op& op = Op::Get("cumprod");\n    return Call(op, {data}, Attrs(attrs), {});\n}\n\nTVM_REGISTER_GLOBAL("relay.op._make.cumsum").set_body_typed(MakeCumprod);\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u5176\u4E2D ",(0,s.jsx)(t.code,{children:"TVM_REGISTER_GLOBAL"})," \u901A\u8FC7 ",(0,s.jsx)(t.code,{children:"relay.op._make.cumsum(...)"})," \u548C ",(0,s.jsx)(t.code,{children:"relay.op._make.cumsum(...)"})," \u5206\u522B\u66B4\u9732\uFF08expose\uFF09Python \u4E2D\u7684 ",(0,s.jsx)(t.code,{children:"MakeCumsum"})," \u548C ",(0,s.jsx)(t.code,{children:"MakeCumprod"})," \u51FD\u6570\u3002"]}),"\n",(0,s.jsx)(t.h2,{id:"7-\u5305\u542B\u4E00\u4E2A\u66F4\u7B80\u6D01\u7684-python-api-hook",children:"7. \u5305\u542B\u4E00\u4E2A\u66F4\u7B80\u6D01\u7684 Python API hook"}),"\n",(0,s.jsxs)(t.p,{children:["\u901A\u5E38 Relay \u4E2D\u7EA6\u5B9A\u4FD7\u6210\u7684\u662F\uFF0C\u901A\u8FC7 ",(0,s.jsx)(t.code,{children:"TVM_REGISTER_GLOBAL"})," \u5BFC\u51FA\u7684\u51FD\u6570\u5E94\u8BE5\u5305\u88C5\u5728\u5355\u72EC\u7684 Python \u51FD\u6570\u4E2D\uFF0C\u800C\u4E0D\u662F\u76F4\u63A5\u5728 Python \u4E2D\u8C03\u7528\u3002\u5BF9\u4E8E\u7B97\u5B50\uFF0C\u6211\u4EEC\u5728  ",(0,s.jsx)(t.code,{children:"python/tvm/relay/op/transform.py"})," \u4E2D\u63D0\u4F9B\u4E86\u66F4\u7B80\u6D01\u7684\u63A5\u53E3\uFF1A"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"def cumsum(data, axis=None, dtype=None, exclusive=None):\n    return _make.cumsum(data, axis, dtype, exclusive)\n\ndef cumprod(data, axis=None, dtype=None, exclusive=None):\n    return _make.cumprod(data, axis, dtype, exclusive)\n"})}),"\n",(0,s.jsxs)(t.p,{children:["\u6CE8\u610F\uFF0C\u8FD9\u4E9B Python wrapper \u4E5F\u53EF\u80FD\u4E3A\u7B97\u5B50\u63D0\u4F9B\u66F4\u7B80\u6D01\u7684\u63A5\u53E3\u3002\u4F8B\u5982 ",(0,s.jsx)(t.code,{children:"concat"})," \u7B97\u5B50\u88AB\u6CE8\u518C\u4E3A\u53EA\u63A5\u53D7\u4E00\u4E2A\u7B97\u5B50\uFF08\u5373\u4E00\u4E2A\u5E26\u6709\u8981\u8FDE\u63A5\u7684\u5F20\u91CF\u7684\u5143\u7EC4\uFF09\uFF0C\u4F46\u662F Python wrapper \u5C06\u5F20\u91CF\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u5728\u4EA7\u751F\u8C03\u7528\u8282\u70B9\u4E4B\u524D\u5C06\u5B83\u4EEC\u7EC4\u5408\u6210\u4E00\u4E2A\u5143\u7EC4\u3002"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'def concat(*args):\n    """\u56F4\u7ED5\u96F6\u8F74\u8FDE\u63A5\u8F93\u5165\u5F20\u91CF\u3002\n\n    \u53C2\u6570\n    ----------\n    args: Tensor \u5217\u8868\n\n    \u8FD4\u56DE\n    -------\n    tensor: \u8FDE\u63A5\u7684\u5F20\u91CF\u3002\n    """\n    tup = Tuple(list(args))\n    return _make.concat(tup)\n'})}),"\n",(0,s.jsx)(t.h2,{id:"8-\u7F16\u5199\u5355\u5143\u6D4B\u8BD5",children:"8. \u7F16\u5199\u5355\u5143\u6D4B\u8BD5"}),"\n",(0,s.jsxs)(t.p,{children:["\u66F4\u591A\u7528\u4E8E cumulative sum \u548C cumulative product \u7B97\u5B50\u7684\u5355\u5143\u6D4B\u8BD5\u793A\u4F8B\uFF0C\u8BF7\u67E5\u770B ",(0,s.jsx)(t.a,{href:"https://github.com/apache/tvm/blob/main/tests/python/relay/test_op_level3.py",children:"tests/python/relay/test_op_level3.py"}),"\u3002"]}),"\n",(0,s.jsx)(t.h1,{id:"\u5176\u4ED6\u4E3B\u9898",children:"\u5176\u4ED6\u4E3B\u9898"}),"\n",(0,s.jsx)(t.h2,{id:"\u68AF\u5EA6\u7B97\u5B50",children:"\u68AF\u5EA6\u7B97\u5B50"}),"\n",(0,s.jsx)(t.p,{children:"\u68AF\u5EA6\u7B97\u5B50\u5BF9\u4E8E\u5728 Relay \u4E2D\u7F16\u5199\u53EF\u5FAE\u5206\u7A0B\u5E8F\u5F88\u91CD\u8981\u3002\u867D\u7136 Relay \u7684 autodiff \u7B97\u6CD5\u53EF\u4EE5\u5F97\u5230\u4F18\u79C0\u7684\u8BED\u8A00\u7ED3\u6784\u7684\u5FAE\u5206\uFF0C\u4F46\u7B97\u5B50\u662F\u4E0D\u900F\u660E\u7684\u3002\u56E0\u4E3A Relay \u65E0\u6CD5\u67E5\u770B\u5B83\u7684\u5B9E\u73B0\uFF0C\u6240\u4EE5\u5FC5\u987B\u63D0\u4F9B\u660E\u786E\u7684\u5FAE\u5206\u89C4\u5219\u3002"}),"\n",(0,s.jsx)(t.p,{children:"Python \u548C C++ \u90FD\u53EF\u7528\u4E8E\u7F16\u5199\u68AF\u5EA6\u7B97\u5B50\uFF0C\u8FD9\u91CC\u91CD\u70B9\u4ECB\u7ECD\u66F4\u4E3A\u5E38\u7528\u7684 Python \u5B9E\u4F8B\u3002"}),"\n",(0,s.jsx)(t.h2,{id:"\u5728-python-\u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50",children:"\u5728 Python \u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50"}),"\n",(0,s.jsxs)(t.p,{children:["Python \u68AF\u5EA6\u7B97\u5B50\u96C6\u5408\u53EF\u4EE5\u5728 ",(0,s.jsx)(t.code,{children:"python/tvm/relay/op/_tensor_grad.py"})," \u4E2D\u627E\u5230 \u3002\u672C\u90E8\u5206\u5185\u5BB9\u5C06\u8BE6\u7EC6\u4ECB\u7ECD\u4E24\u4E2A\u6709\u4EE3\u8868\u6027\u7684\u4F8B\u5B50\uFF1A",(0,s.jsx)(t.code,{children:"sigmoid"})," \u548C ",(0,s.jsx)(t.code,{children:"multiply"}),"\u3002"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'@register_gradient("sigmoid")\ndef sigmoid_grad(orig, grad):\n    """\u8FD4\u56DE [grad * sigmoid(x) * (1 - sigmoid(x))]."""\n    return [grad * orig * (ones_like(orig) - orig)]\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u8FD9\u91CC\u7684\u8F93\u5165\u662F\u539F\u59CB\u7B97\u5B50 ",(0,s.jsx)(t.code,{children:"orig"})," \u4EE5\u53CA\u68AF\u5EA6\u7B97\u5B50 ",(0,s.jsx)(t.code,{children:"grad"}),"\uFF0C\u8FD4\u56DE\u662F\u4E00\u4E2A\u5217\u8868\uFF0C\u5176\u4E2D\u7B2C i \u4E2A\u7D22\u5F15\u7684\u5143\u7D20\uFF0C\u662F\u7B97\u5B50\u76F8\u5BF9\u4E8E\u7B97\u5B50\u7B2C i \u4E2A\u8F93\u5165\u7684\u5BFC\u6570\u3002\u901A\u5E38\uFF0C\u68AF\u5EA6\u7B97\u5B50\u5C06\u8FD4\u56DE\u4E00\u4E2A\u5217\u8868\uFF0C\u5176\u5143\u7D20\u7684\u4E2A\u6570\u548C\u57FA\u7840\u7B97\u5B50\uFF08base operator\uFF09\u7684\u8F93\u5165\u4E00\u6837\u591A\u3002"]}),"\n",(0,s.jsx)(t.p,{children:"\u8FDB\u4E00\u6B65\u5206\u6790\u8FD9\u4E2A\u5B9A\u4E49\u4E4B\u524D\uFF0C\u5148\u56DE\u5FC6\u4E00\u4E0B sigmoid \u51FD\u6570\u7684\u5BFC\u6570\uFF1A\u2202\u03C3/\u2202x=\u03C3(x)(1\u2212\u03C3(x))\u3002\u4E0A\u9762\u7684\u5B9A\u4E49\u770B\u8D77\u6765\u7C7B\u4F3C\u4E8E\u6570\u5B66\u5B9A\u4E49\uFF0C\u4F46\u6709\u4E00\u4E2A\u91CD\u8981\u7684\u8865\u5145\uFF1A"}),"\n",(0,s.jsxs)(t.p,{children:["\u672F\u8BED ",(0,s.jsx)(t.code,{children:"orig * (ones_like(orig) - orig)"})," \u76F4\u63A5\u5339\u914D\u5BFC\u6570\uFF0C\u56E0\u4E3A\u8FD9\u91CC\u7684 ",(0,s.jsx)(t.code,{children:"orig"})," \u662F sigmoid \u51FD\u6570\u3002\u9664\u4E86\u8981\u4E86\u89E3\u5982\u4F55\u8BA1\u7B97\u8BE5\u51FD\u6570\u7684\u68AF\u5EA6\u4E4B\u5916\uFF0C\u8FD8\u8981\u638C\u63E1\u8BE5\u68AF\u5EA6\u4E0E\u5176\u4ED6\u68AF\u5EA6\u7EC4\u5408\u7684\u65B9\u6CD5\uFF0C\u5373\u5728\u6574\u4E2A\u7A0B\u5E8F\u4E2D\u7D2F\u79EF\u68AF\u5EA6\u3002\u8FD9\u5C31\u662F ",(0,s.jsx)(t.code,{children:"grad"})," \u7684\u4F5C\u7528\u3002\u5728\u8868\u8FBE\u5F0F  ",(0,s.jsx)(t.code,{children:"grad * orig * (ones_like(orig) - orig)"}),"\u4E2D\uFF0C\u4E58\u4EE5 ",(0,s.jsx)(t.code,{children:"grad"})," \u6307\u5B9A\u4E86\u5230\u76EE\u524D\u4E3A\u6B62\u5982\u4F55\u7528\u68AF\u5EA6\u7EC4\u5408\u5BFC\u6570\u3002"]}),"\n",(0,s.jsxs)(t.p,{children:["\u63A5\u4E0B\u6765\u8BF7\u770B ",(0,s.jsx)(t.code,{children:"multiply"}),"\u7684\u793A\u4F8B\uFF1A"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'@register_gradient("multiply")\ndef multiply_grad(orig, grad):\n    """\u8FD4\u56DE [grad * y, grad * x]"""\n    x, y = orig.args\n    return [collapse_sum_like(grad * y, x),\n            collapse_sum_like(grad * x, y)]\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u5728\u6B64\u793A\u4F8B\u4E2D\uFF0C\u8FD4\u56DE\u5217\u8868\u4E2D\u6709\u4E24\u4E2A\u5143\u7D20\uFF0C\u56E0\u4E3A ",(0,s.jsx)(t.code,{children:"multiply"})," \u662F\u4E8C\u5143\u8FD0\u7B97\u7B26\uFF08binary operator\uFF09\u3002\u5982\u679C f(x,y) = xy\uFF0C\u504F\u5BFC\u6570\u662F \u2202f / \u2202x = y \u548C \u2202f / \u2202y = x\u3002"]}),"\n",(0,s.jsxs)(t.p,{children:["\u4E0E ",(0,s.jsx)(t.code,{children:"sigmoid"})," \u76F8\u6BD4\uFF0C",(0,s.jsx)(t.code,{children:"multiply"})," \u9700\u8981\u4E00\u4E2A\u989D\u5916\u7684\u6B65\u9AA4\uFF0C\u56E0\u4E3A ",(0,s.jsx)(t.code,{children:"multiply"})," \u5177\u6709\u5E7F\u64AD\u8BED\u4E49\uFF08broadcasting semantics\uFF09\u3002\u7531\u4E8E ",(0,s.jsx)(t.code,{children:"grad"})," \u7684 shape \u53EF\u80FD\u4E0E\u8F93\u5165 shape \u4E0D\u5339\u914D\uFF0C\u6240\u4EE5\u6211\u4EEC\u4F7F\u7528 ",(0,s.jsx)(t.code,{children:"collapse_sum_like"})," \u6765\u83B7\u53D6 ",(0,s.jsx)(t.code,{children:"grad * <var>"})," \u9879\u7684\u5185\u5BB9\uFF0C\u5E76\u4F7F\u5176 shape \u4E0E\u505A\u5FAE\u5206\u7684\u8F93\u5165 shape \u76F8\u5339\u914D\u3002"]}),"\n",(0,s.jsx)(t.h2,{id:"\u5728-c-\u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50",children:"\u5728 C++ \u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50"}),"\n",(0,s.jsx)(t.p,{children:"\u5728 C++ \u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50\u7684\u65B9\u6CD5\uFF0C\u4E0E\u5728 Python \u4E2D\u6DFB\u52A0\u68AF\u5EA6\u7B97\u5B50\u7C7B\u4F3C\uFF0C\u4F46\u6CE8\u518C\u7684\u63A5\u53E3\u7565\u6709\u4E0D\u540C\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["\u9996\u5148\uFF0C\u786E\u4FDD ",(0,s.jsx)(t.code,{children:"src/relay/transforms/pattern_utils.h"})," \u88AB\u5305\u542B\u5728\u5185\u3002\u5B83\u63D0\u4F9B\u4E86\u7528\u4E8E\u5728 Relay AST \u4E2D\u521B\u5EFA\u8282\u70B9\u7684\u8F85\u52A9\u51FD\u6570\u3002\u5B9A\u4E49\u68AF\u5EA6\u7B97\u5B50\u7684\u65B9\u5F0F\u4E0E Python \u7C7B\u4F3C\uFF1A"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"tvm::Array<Expr> MultiplyGrad(const Expr& orig_call, const Expr& output_grad) {\n    const Call& call = orig_call.Downcast<Call>();\n    return { CollapseSumLike(Multiply(output_grad, call.args[1]), call.args[0]),\n             CollapseSumLike(Multiply(output_grad, call.args[0]), call.args[1]) };\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"\u6CE8\u610F\uFF0C\u5728 C++ \u4E2D\u4E0D\u80FD\u4F7F\u7528\u4E0E Python \u76F8\u540C\u7684\u8FD0\u7B97\u7B26\u91CD\u8F7D\uFF08operator overloading\uFF09\uFF0C\u800C\u662F\u9700\u8981\u5411\u4E0B\u8F6C\u6362\uFF0C\u56E0\u6B64\u5B9E\u73B0\u66F4\u52A0\u5197\u957F\u3002\u5373\u4FBF\u5982\u6B64\uFF0C\u6211\u4EEC\u4ECD\u7136\u53EF\u4EE5\u8F7B\u6613\u5730\u9A8C\u8BC1\u8FD9\u4E2A\u5B9A\u4E49\u53CD\u6620\u4E86 Python \u4E2D\u5148\u524D\u7684\u4F8B\u5B50\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["\u8981\u6CE8\u518C\u68AF\u5EA6\u7B97\u5B50\uFF0C\u8FD9\u91CC\u65E0\u9700\u4F7F\u7528 Python \u4FEE\u9970\u5668\uFF0C\u53EA\u9700\u8981\u5728\u57FA\u7840\u7B97\u5B50\u6CE8\u518C\u7684\u672B\u5C3E\u6DFB\u52A0 ",(0,s.jsx)(t.code,{children:"set_attr"}),' \u8C03\u7528 "FPrimalGradient" \u5373\u53EF\u3002']}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'RELAY_REGISTER_OP("multiply")\n    // ...\n    // \u8BBE\u7F6E\u5176\u4ED6\u5C5E\u6027\n    // ...\n    .set_attr<FPrimalGradient>("FPrimalGradient", MultiplyGrad);\n'})})]})}function p(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},21494:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return c}});var r=n(39546);let s={},a=r.createContext(s);function c(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);