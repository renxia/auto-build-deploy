"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["52682"],{93059:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>l,metadata:()=>a,assets:()=>s,toc:()=>p,contentTitle:()=>o});var a=JSON.parse('{"id":"how_to/relay/pipeline","title":"\u5728 Relay \u4E2D\u4F7F\u7528 Pipeline Executor","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/how_to/relay/03-pipeline.md","sourceDirName":"how_to/relay","slug":"/how_to/relay/pipeline","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/relay/pipeline","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/how_to/relay/03-pipeline.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":3,"frontMatter":{"title":"\u5728 Relay \u4E2D\u4F7F\u7528 Pipeline Executor"},"sidebar":"tutorialSidebar","previous":{"title":"\u5728 Relay \u4E2D\u4F7F\u7528\u5916\u90E8\u5E93","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/relay/extenal_lib"},"next":{"title":"\u4F7F\u7528 Relay Visualizer \u53EF\u89C6\u5316 Relay","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/relay/relay_visualizer"}}'),i=t("74132"),r=t("21494");let l={title:"\u5728 Relay \u4E2D\u4F7F\u7528 Pipeline Executor"},o="\u5728 Relay \u4E2D\u4F7F\u7528 Pipeline Executor",s={},p=[{value:"\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684\u7F51\u7EDC\uFF0C\u8FD9\u4E2A\u7F51\u7EDC\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u9884\u8BAD\u7EC3\u7684\u6A21\u578B\u3002",id:"\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684\u7F51\u7EDC\u8FD9\u4E2A\u7F51\u7EDC\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u9884\u8BAD\u7EC3\u7684\u6A21\u578B",level:2},{value:"\u5C06\u7F51\u7EDC\u62C6\u5206\u6210\u4E24\u4E2A\u5B50\u56FE\u3002",id:"\u5C06\u7F51\u7EDC\u62C6\u5206\u6210\u4E24\u4E2A\u5B50\u56FE",level:2},{value:"\u7528 cutlass target \u6784\u5EFA\u5B50\u56FE\u3002",id:"\u7528-cutlass-target-\u6784\u5EFA\u5B50\u56FE",level:2},{value:"\u4F7F\u7528 pipeline executor \u5728 pipeline \u4E2D\u8FD0\u884C\u4E24\u4E2A\u5B50\u56FE\u3002",id:"\u4F7F\u7528-pipeline-executor-\u5728-pipeline-\u4E2D\u8FD0\u884C\u4E24\u4E2A\u5B50\u56FE",level:2},{value:"\u6784\u5EFA pipeline executor\u3002",id:"\u6784\u5EFA-pipeline-executor",level:2},{value:"\u4F7F\u7528 load \u51FD\u6570\u521B\u5EFA\u548C\u521D\u59CB\u5316 PipelineModule\u3002",id:"\u4F7F\u7528-load-\u51FD\u6570\u521B\u5EFA\u548C\u521D\u59CB\u5316-pipelinemodule",level:2},{value:"\u8FD0\u884C pipeline executor\u3002",id:"\u8FD0\u884C-pipeline-executor",level:2},{value:"\u4F7F\u7528 graph_executor \u8FDB\u884C\u9A8C\u8BC1\u3002",id:"\u4F7F\u7528-graph_executor-\u8FDB\u884C\u9A8C\u8BC1",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\u5728-relay-\u4E2D\u4F7F\u7528-pipeline-executor",children:"\u5728 Relay \u4E2D\u4F7F\u7528 Pipeline Executor"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["\u5355\u51FB ",(0,i.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/work_with_relay/using_pipeline_executor.html#sphx-glr-download-how-to-work-with-relay-using-pipeline-executor-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,i.jsx)(n.a,{href:"https://github.com/huajsj",children:"Hua Jiang"})]}),"\n",(0,i.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u4ECB\u7ECD\u5982\u4F55\u5C06\u300CPipeline Executor\u300D\u4E0E Relay \u914D\u5408\u4F7F\u7528\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import tvm\nfrom tvm import te\nimport numpy as np\nfrom tvm.contrib import graph_executor as runtime\nfrom tvm.relay.op.contrib.cutlass import partition_for_cutlass\nfrom tvm import relay\nfrom tvm.relay import testing\nimport tvm.testing\nfrom tvm.contrib.cutlass import (\n    has_cutlass,\n    num_cutlass_partitions,\n    finalize_modules,\n    finalize_modules_vm,\n)\n\nimg_size = 8\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684\u7F51\u7EDC\u8FD9\u4E2A\u7F51\u7EDC\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u9884\u8BAD\u7EC3\u7684\u6A21\u578B",children:"\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684\u7F51\u7EDC\uFF0C\u8FD9\u4E2A\u7F51\u7EDC\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u9884\u8BAD\u7EC3\u7684\u6A21\u578B\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u521B\u5EFA\u4E00\u4E2A\u7531 convolution\u3001batch normalization\u3001dense \u548C ReLU activation \u7EC4\u6210\u7684\u7F51\u7EDC\u7528\u4E8E\u6F14\u793A\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def get_network():\n    out_channels = 16\n    batch_size = 1\n    data = relay.var("data", relay.TensorType((batch_size, 3, img_size, img_size), "float16"))\n    dense_weight = relay.var(\n        "dweight", relay.TensorType((batch_size, 16 * img_size * img_size), "float16")\n    )\n    weight = relay.var("weight")\n    second_weight = relay.var("second_weight")\n    bn_gamma = relay.var("bn_gamma")\n    bn_beta = relay.var("bn_beta")\n    bn_mmean = relay.var("bn_mean")\n    bn_mvar = relay.var("bn_var")\n    simple_net = relay.nn.conv2d(\n        data=data, weight=weight, kernel_size=(3, 3), channels=out_channels, padding=(1, 1)\n    )\n    simple_net = relay.nn.batch_norm(simple_net, bn_gamma, bn_beta, bn_mmean, bn_mvar)[0]\n    simple_net = relay.nn.relu(simple_net)\n    simple_net = relay.nn.batch_flatten(simple_net)\n    simple_net = relay.nn.dense(simple_net, dense_weight)\n    simple_net = relay.Function(relay.analysis.free_vars(simple_net), simple_net)\n    data_shape = (batch_size, 3, img_size, img_size)\n    net, params = testing.create_workload(simple_net)\n    return net, params, data_shape\n\nnet, params, data_shape = get_network()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u5C06\u7F51\u7EDC\u62C6\u5206\u6210\u4E24\u4E2A\u5B50\u56FE",children:"\u5C06\u7F51\u7EDC\u62C6\u5206\u6210\u4E24\u4E2A\u5B50\u56FE\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u8FD9\u4E2A\u6765\u81EA\u5355\u5143\u6D4B\u8BD5\u7684\u540D\u4E3A\u300Cgraph_split\u300D\u7684\u51FD\u6570\u53EA\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002\u7528\u6237\u53EF\u4EE5\u521B\u5EFA\u81EA\u5B9A\u4E49\u903B\u8F91\u6765\u62C6\u5206\u8BA1\u7B97\u56FE\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import inspect\nimport os\n\ntutorial_dir = os.path.dirname(inspect.getfile(lambda: None))\nos.sys.path.append(os.path.join(tutorial_dir, "../../../tests/python/relay"))\nfrom test_pipeline_executor import graph_split\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u5C06\u7F51\u7EDC\u62C6\u5206\u6210\u4E24\u4E2A\u5B50\u56FE\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'split_config = [{"op_name": "nn.relu", "op_index": 0}]\nsubgraphs = graph_split(net["main"], split_config, params)\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u751F\u6210\u7684\u5B50\u56FE\u5982\u4E0B\u6240\u793A\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'"""\n#subgraphs[0])\n\n def @main(%data: Tensor[(1, 3, img_size, img_size), float16]) {\n  %0 = nn.conv2d(%data, meta[relay.Constant][0] /* ty=Tensor[(16, 3, 3, 3), float16] */, padding=[1, 1, 1, 1], channels=16, kernel_size=[3, 3]) /* ty=Tensor[(1, 16, img_size, img_size), float16] */;\n  %1 = nn.batch_norm(%0, meta[relay.Constant][1] /* ty=Tensor[(16), float16] */, meta[relay.Constant][2] /* ty=Tensor[(16), float16]*/, meta[relay.Constant][3] /* ty=Tensor[(16), float16] */, meta[relay.Constant][4] /* ty=Tensor[(16), float16] */) /* ty=(Tensor[(1,16, img_size, img_size), float16], Tensor[(16), float16], Tensor[(16), float16]) */;\n  %2 = %1.0;\n  nn.relu(%2) /* ty=Tensor[(1, 16, img_size, img_size), float16] */\n }\n\n#subgraphs[1]\n\n def @main(%data_n_0: Tensor[(1, 16, 8, 8), float16] /* ty=Tensor[(1, 16, 8, 8), float16] */) {\n  %0 = nn.batch_flatten(%data_n_0) /* ty=Tensor[(1, 1024), float16] */;\n  nn.dense(%0, meta[relay.Constant][0] /* ty=Tensor[(1, 1024), float16] */, units=None) /* ty=Tensor[(1, 1), float16] */\n }\n\n"""\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u7528-cutlass-target-\u6784\u5EFA\u5B50\u56FE",children:"\u7528 cutlass target \u6784\u5EFA\u5B50\u56FE\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'cutlass = tvm.target.Target(\n    {\n        "kind": "cutlass",\n        "sm": int(tvm.target.Target("cuda").arch.split("_")[1]),\n        "use_3xtf32": True,\n        "split_k_slices": [1],\n        "profile_all_alignments": False,\n        "find_first_valid": True,\n        "use_multiprocessing": True,\n        "use_fast_math": False,\n        "tmp_dir": "./tmp",\n    },\n    host=tvm.target.Target("llvm"),\n)\n\ndef cutlass_build(mod, target, params=None, target_host=None, mod_name="default"):\n    target = [target, cutlass]\n    lib = relay.build_module.build(\n        mod, target=target, params=params, target_host=target_host, mod_name=mod_name\n    )\n    return lib\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u4F7F\u7528-pipeline-executor-\u5728-pipeline-\u4E2D\u8FD0\u884C\u4E24\u4E2A\u5B50\u56FE",children:"\u4F7F\u7528 pipeline executor \u5728 pipeline \u4E2D\u8FD0\u884C\u4E24\u4E2A\u5B50\u56FE\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u5728 cmake \u4E2D\u5C06 ",(0,i.jsx)(n.code,{children:"USE_PIPELINE_EXECUTOR"})," \u548C ",(0,i.jsx)(n.code,{children:"USE_CUTLASS"})," \u8BBE\u7F6E\u4E3A ON\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from tvm.contrib import graph_executor, pipeline_executor, pipeline_executor_build\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u521B\u5EFA\u5B50\u56FE pipeline \u914D\u7F6E\u3002\u5C06\u5B50\u56FE\u6A21\u5757\u4E0E target \u5173\u8054\u8D77\u6765\u3002\u4F7F\u7528 CUTLASS BYOC \u6784\u5EFA\u7B2C\u4E8C\u4E2A\u5B50\u56FE\u6A21\u5757\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"mod0, mod1 = subgraphs[0], subgraphs[1]\n# \u5C06 cutlass \u4F5C\u4E3A codegen\u3002\nmod1 = partition_for_cutlass(mod1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u83B7\u53D6 pipeline executor \u914D\u7F6E\u5BF9\u8C61\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pipe_config = pipeline_executor_build.PipelineConfig()\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u8BBE\u7F6E\u5B50\u56FE\u6A21\u5757\u7684\u7F16\u8BD1 target\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'pipe_config[mod0].target = "llvm"\npipe_config[mod0].dev = tvm.cpu(0)\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u5C06\u7B2C\u4E8C\u4E2A\u5B50\u56FE\u6A21\u5757\u7684\u7F16\u8BD1 target \u8BBE\u7F6E\u4E3A cuda\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'pipe_config[mod1].target = "cuda"\npipe_config[mod1].dev = tvm.device("cuda", 0)\npipe_config[mod1].build_func = cutlass_build\npipe_config[mod1].export_cc = "nvcc"\n# \u901A\u8FC7\u8FDE\u63A5\u5B50\u56FE\u6A21\u5757\u521B\u5EFA pipeline\u3002\n# \u5168\u5C40\u8F93\u5165\u5C06\u88AB\u8F6C\u53D1\u5230\u7B2C\u4E00\u4E2A\u540D\u4E3A mod0 \u7684\u6A21\u5757\u7684\u8F93\u5165\u63A5\u53E3\npipe_config["input"]["data"].connect(pipe_config[mod0]["input"]["data"])\n# mod0 \u7684\u7B2C\u4E00\u4E2A\u8F93\u51FA\u4F1A\u8F6C\u53D1\u5230 mod1 \u7684\u8F93\u5165\u63A5\u53E3\npipe_config[mod0]["output"][0].connect(pipe_config[mod1]["input"]["data_n_0"])\n# mod1 \u7684\u7B2C\u4E00\u4E2A\u8F93\u51FA\u5C06\u662F\u7B2C\u4E00\u4E2A\u5168\u5C40\u8F93\u51FA\u3002\npipe_config[mod1]["output"][0].connect(pipe_config["output"][0])\n'})}),"\n",(0,i.jsx)(n.p,{children:"pipeline \u914D\u7F6E\u5982\u4E0B\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'"""\nprint(pipe_config)\n Inputs\n  |data: mod0:data\n\n output\n  |output(0) : mod1.output(0)\n\n connections\n  |mod0.output(0)-> mod1.data_n_0\n"""\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u6784\u5EFA-pipeline-executor",children:"\u6784\u5EFA pipeline executor\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"with tvm.transform.PassContext(opt_level=3):\n    pipeline_mod_factory = pipeline_executor_build.build(pipe_config)\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:267: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u5C06\u53C2\u6570\u914D\u7F6E\u5BFC\u51FA\u5230\u4E00\u4E2A\u6587\u4EF6\u4E2D\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"directory_path = tvm.contrib.utils.tempdir().temp_dir\nos.makedirs(directory_path, exist_ok=True)\nconfig_file_name = pipeline_mod_factory.export_library(directory_path)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u4F7F\u7528-load-\u51FD\u6570\u521B\u5EFA\u548C\u521D\u59CB\u5316-pipelinemodule",children:"\u4F7F\u7528 load \u51FD\u6570\u521B\u5EFA\u548C\u521D\u59CB\u5316 PipelineModule\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pipeline_module = pipeline_executor.PipelineModule.load_library(config_file_name)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u8FD0\u884C-pipeline-executor",children:"\u8FD0\u884C pipeline executor\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u5206\u914D\u8F93\u5165\u6570\u636E\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'data = np.random.uniform(-1, 1, size=data_shape).astype("float16")\npipeline_module.set_input("data", tvm.nd.array(data))\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u4EE5 pipeline \u6A21\u5F0F\u8FD0\u884C\u4E24\u4E2A\u5B50\u56FE\uFF0C\u5F02\u6B65\u6216\u540C\u6B65\u83B7\u53D6\u8F93\u51FA\u3002\u4EE5\u4E0B\u793A\u4F8B\u4E3A\u540C\u6B65\u83B7\u53D6\u8F93\u51FA\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pipeline_module.run()\noutputs = pipeline_module.get_output()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u4F7F\u7528-graph_executor-\u8FDB\u884C\u9A8C\u8BC1",children:"\u4F7F\u7528 graph_executor \u8FDB\u884C\u9A8C\u8BC1\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u7528 graph_executor \u4F9D\u6B21\u8FD0\u884C\u8FD9\u4E24\u4E2A\u5B50\u56FE\uFF0C\u5F97\u5230\u8F93\u51FA\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'target = "llvm"\ndev0 = tvm.device(target, 0)\nlib0 = relay.build_module.build(mod0, target, params=params)\nmodule0 = runtime.GraphModule(lib0["default"](dev0))\ncuda = tvm.target.Target("cuda", host=tvm.target.Target("llvm"))\nlib1 = relay.build_module.build(mod1, [cuda, cutlass], params=params)\nlib1 = finalize_modules(lib1, "compile.so", "./tmp")\n\ndev1 = tvm.device("cuda", 0)\n\nmodule1 = runtime.GraphModule(lib1["default"](dev1))\n\nmodule0.set_input("data", data)\nmodule0.run()\nout_shape = (1, 16, img_size, img_size)\nout = module0.get_output(0, tvm.nd.empty(out_shape, "float16"))\nmodule1.set_input("data_n_0", out)\nmodule1.run()\nout_shape = (1, 1)\nout = module1.get_output(0, tvm.nd.empty(out_shape, "float16"))\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:267: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u9A8C\u8BC1\u7ED3\u679C\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"tvm.testing.assert_allclose(outputs[0].numpy(), out.numpy())\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/29c30a5341c6aa08601b51791150fa4b/using_pipeline_executor.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Ausing_pipeline_executor.py"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/f407f66fb8174d0d4ec37407af1128d6/using_pipeline_executor.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Ausing_pipeline_executor.ipynb"})})]})}function c(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},21494:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return l}});var a=t(39546);let i={},r=a.createContext(i);function l(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);