"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["83913"],{53107:function(e,n,s){s.r(n),s.d(n,{default:()=>p,frontMatter:()=>o,metadata:()=>r,assets:()=>l,toc:()=>u,contentTitle:()=>i});var r=JSON.parse('{"id":"tutorial/python_AutoTVM","title":"\u4F7F\u7528 Python \u63A5\u53E3\uFF08AutoTVM\uFF09\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/docs/tutorial/05-python_AutoTVM.md","sourceDirName":"tutorial","slug":"/tutorial/python_AutoTVM","permalink":"/docs/tvm-cn/docs/tutorial/python_AutoTVM","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/docs/tutorial/05-python_AutoTVM.md","tags":[],"version":"current","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":5,"frontMatter":{"title":"\u4F7F\u7528 Python \u63A5\u53E3\uFF08AutoTVM\uFF09\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B"},"sidebar":"tutorialSidebar","previous":{"title":"\u4F7F\u7528 TVMC Python \u5165\u95E8\uFF1ATVM \u7684\u9AD8\u7EA7 API","permalink":"/docs/tvm-cn/docs/tutorial/tvmc_python"},"next":{"title":"\u4F7F\u7528\u5F20\u91CF\u8868\u8FBE\u5F0F\u5904\u7406\u7B97\u5B50","permalink":"/docs/tvm-cn/docs/tutorial/tensor_expr"}}'),t=s("74132"),a=s("21494");let o={title:"\u4F7F\u7528 Python \u63A5\u53E3\uFF08AutoTVM\uFF09\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B"},i="\u4F7F\u7528 Python \u63A5\u53E3\uFF08AutoTVM\uFF09\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B",l={},u=[{value:"\u4E0B\u8F7D\u548C\u52A0\u8F7D ONNX \u6A21\u578B",id:"\u4E0B\u8F7D\u548C\u52A0\u8F7D-onnx-\u6A21\u578B",level:2},{value:"\u4E0B\u8F7D\u3001\u9884\u5904\u7406\u548C\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF",id:"\u4E0B\u8F7D\u9884\u5904\u7406\u548C\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF",level:2},{value:"\u4F7F\u7528 Relay \u7F16\u8BD1\u6A21\u578B",id:"\u4F7F\u7528-relay-\u7F16\u8BD1\u6A21\u578B",level:2},{value:"\u5728 TVM Runtime \u6267\u884C",id:"\u5728-tvm-runtime-\u6267\u884C",level:2},{value:"\u6536\u96C6\u57FA\u672C\u6027\u80FD\u6570\u636E",id:"\u6536\u96C6\u57FA\u672C\u6027\u80FD\u6570\u636E",level:2},{value:"\u8F93\u51FA\u540E\u5904\u7406",id:"\u8F93\u51FA\u540E\u5904\u7406",level:2},{value:"\u8C03\u4F18\u6A21\u578B",id:"\u8C03\u4F18\u6A21\u578B",level:2},{value:"\u4F7F\u7528\u8C03\u4F18\u6570\u636E\u7F16\u8BD1\u4F18\u5316\u6A21\u578B",id:"\u4F7F\u7528\u8C03\u4F18\u6570\u636E\u7F16\u8BD1\u4F18\u5316\u6A21\u578B",level:2},{value:"\u6BD4\u8F83\u8C03\u4F18\u548C\u672A\u8C03\u4F18\u7684\u6A21\u578B",id:"\u6BD4\u8F83\u8C03\u4F18\u548C\u672A\u8C03\u4F18\u7684\u6A21\u578B",level:2},{value:"\u5199\u5728\u6700\u540E",id:"\u5199\u5728\u6700\u540E",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u4F7F\u7528-python-\u63A5\u53E3autotvm\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B",children:"\u4F7F\u7528 Python \u63A5\u53E3\uFF08AutoTVM\uFF09\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["\u5355\u51FB ",(0,t.jsx)(n.a,{href:"https://tvm.apache.org/docs/tutorial/autotvm_relay_x86.html#sphx-glr-download-tutorial-autotvm-relay-x86-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,t.jsx)(n.a,{href:"https://github.com/hogepodge",children:"Chris Hoge"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://tvm.apache.org/docs/tutorial/tvmc_command_line_driver",children:"TVMC \u6559\u7A0B"})," \u4ECB\u7ECD\u4E86\u5982\u4F55\u7528 TVM \u7684\u547D\u4EE4\u884C\u754C\u9762\uFF08TVMC\uFF09\u7F16\u8BD1\u3001\u8FD0\u884C\u548C\u8C03\u4F18\u9884\u8BAD\u7EC3\u7684\u6A21\u578B ResNet-50 v2\u3002TVM \u4E0D\u4EC5\u662F\u4E00\u4E2A\u547D\u4EE4\u884C\u5DE5\u5177\uFF0C\u4E5F\u662F\u4E00\u4E2A\u5177\u6709\u591A\u79CD\u4E0D\u540C\u8BED\u8A00\u7684 API \u4F18\u5316\u6846\u67B6\uFF0C\u6781\u5927\u65B9\u4FBF\u4E86\u673A\u5668\u5B66\u4E60\u6A21\u578B\u7684\u4F7F\u7528\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u672C\u8282\u5185\u5BB9\u5C06\u4ECB\u7ECD\u4E0E\u4F7F\u7528 TVMC \u76F8\u540C\u7684\u57FA\u7840\u77E5\u8BC6\uFF0C\u4E0D\u540C\u7684\u662F\u8FD9\u8282\u5185\u5BB9\u662F\u7528 Python API \u6765\u5B9E\u73B0\u7684\u3002\u5B8C\u6210\u672C\u8282\u540E\u5B66\u4E60\u540E\uFF0C\u6211\u4EEC\u5C06\u7528 TVM \u7684 Python API \u5B9E\u73B0\u4EE5\u4E0B\u4EFB\u52A1\uFF1A"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u4E3A TVM runtime \u7F16\u8BD1\u9884\u8BAD\u7EC3\u7684 ResNet-50 v2 \u6A21\u578B\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u7528\u7F16\u8BD1\u7684\u6A21\u578B\u9884\u6D4B\u771F\u5B9E\u56FE\u50CF\uFF0C\u5E76\u89E3\u91CA\u8F93\u51FA\u548C\u6A21\u578B\u6027\u80FD\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u7528 TVM \u5BF9 CPU \u4E0A\u5EFA\u6A21\u7684\u6A21\u578B\u8FDB\u884C\u8C03\u4F18\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u7528 TVM \u6536\u96C6\u7684\u8C03\u4F18\u6570\u636E\u91CD\u65B0\u7F16\u8BD1\u4F18\u5316\u6A21\u578B\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u7528\u4F18\u5316\u6A21\u578B\u9884\u6D4B\u56FE\u50CF\uFF0C\u5E76\u6BD4\u8F83\u8F93\u51FA\u548C\u6A21\u578B\u6027\u80FD\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u672C\u8282\u76EE\u6807\u662F\u6982\u8FF0 TVM \u7684\u529F\u80FD\uFF0C\u4EE5\u53CA\u5982\u4F55\u901A\u8FC7 Python API \u4F7F\u7528\u5B83\u4EEC\u3002"}),"\n",(0,t.jsx)(n.p,{children:"TVM \u662F\u4E00\u4E2A\u6DF1\u5EA6\u5B66\u4E60\u7F16\u8BD1\u5668\u6846\u67B6\uFF0C\u6709\u8BB8\u591A\u4E0D\u540C\u7684\u6A21\u5757\u53EF\u7528\u4E8E\u5904\u7406\u6DF1\u5EA6\u5B66\u4E60\u6A21\u578B\u548C\u7B97\u5B50\u3002\u672C\u6559\u7A0B\u5C06\u4ECB\u7ECD\u5982\u4F55\u7528 Python API \u52A0\u8F7D\u3001\u7F16\u8BD1\u548C\u4F18\u5316\u6A21\u578B\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u9996\u5148\u5BFC\u5165\u4E00\u4E9B\u4F9D\u8D56\uFF0C\u5305\u62EC\u7528\u4E8E\u52A0\u8F7D\u548C\u8F6C\u6362\u6A21\u578B\u7684 ",(0,t.jsx)(n.code,{children:"onnx"}),"\u3001\u7528\u4E8E\u4E0B\u8F7D\u6D4B\u8BD5\u6570\u636E\u7684\u8F85\u52A9\u5B9E\u7528\u7A0B\u5E8F\u3001\u7528\u4E8E\u5904\u7406\u56FE\u50CF\u6570\u636E\u7684 Python \u56FE\u50CF\u5E93\u3001\u7528\u4E8E\u56FE\u50CF\u6570\u636E\u9884\u5904\u7406\u548C\u540E\u5904\u7406\u7684 ",(0,t.jsx)(n.code,{children:"numpy"}),"\u3001TVM Relay \u6846\u67B6\u548C TVM \u56FE\u5F62\u5904\u7406\u5668\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import onnx\nfrom tvm.contrib.download import download_testdata\nfrom PIL import Image\nimport numpy as np\nimport tvm.relay as relay\nimport tvm\nfrom tvm.contrib import graph_executor\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u4E0B\u8F7D\u548C\u52A0\u8F7D-onnx-\u6A21\u578B",children:"\u4E0B\u8F7D\u548C\u52A0\u8F7D ONNX \u6A21\u578B"}),"\n",(0,t.jsxs)(n.p,{children:["\u672C\u6559\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u4F1A\u7528\u5230 ResNet-50 v2\u3002ResNet-50 \u662F\u4E00\u4E2A\u6DF1\u5EA6\u4E3A 50 \u5C42\u7684\u5377\u79EF\u795E\u7ECF\u7F51\u7EDC\uFF0C\u9002\u7528\u4E8E\u56FE\u50CF\u5206\u7C7B\u4EFB\u52A1\u3002\u6211\u4EEC\u5373\u5C06\u7528\u5230\u7684\u6A21\u578B\u5DF2\u7ECF\u5728\u8D85\u8FC7 100 \u4E07\u5F20\u3001\u5177\u6709 1000 \u79CD\u4E0D\u540C\u5206\u7C7B\u7684\u56FE\u50CF\u4E0A\u8FDB\u884C\u4E86\u9884\u8BAD\u7EC3\u3002\u8BE5\u795E\u7ECF\u7F51\u7EDC\u7684\u8F93\u5165\u56FE\u50CF\u5927\u5C0F\u4E3A 224x224\u3002\u63A8\u8350\u4E0B\u8F7D ",(0,t.jsx)(n.a,{href:"https://netron.app/",children:"Netron"}),"\uFF08\u514D\u8D39\u7684 ML \u6A21\u578B\u67E5\u770B\u5668 \uFF09\u4E86\u89E3\u66F4\u591A ResNet-50 \u6A21\u578B\u7684\u7ED3\u6784\u4FE1\u606F\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"TVM \u63D0\u4F9B\u5E2E\u52A9\u5E93\u6765\u4E0B\u8F7D\u9884\u8BAD\u7EC3\u6A21\u578B\u3002\u901A\u8FC7\u63D0\u4F9B\u6A21\u578B URL\u3001\u6587\u4EF6\u540D\u548C\u6A21\u578B\u7C7B\u578B\uFF0CTVM \u53EF\u4E0B\u8F7D\u6A21\u578B\u5E76\u5C06\u5176\u4FDD\u5B58\u5230\u78C1\u76D8\u3002\u53EF\u7528 ONNX runtime \u5C06 ONNX \u6A21\u578B\u5B9E\u4F8B\u52A0\u8F7D\u5230\u5185\u5B58\u3002"}),"\n",(0,t.jsx)(n.admonition,{title:"\u4F7F\u7528\u5176\u4ED6\u6A21\u578B\u683C\u5F0F",type:"note",children:(0,t.jsxs)(n.p,{children:["TVM \u652F\u6301\u8BB8\u591A\u6D41\u884C\u7684\u6A21\u578B\u683C\u5F0F\u3002\u53EF\u5728 TVM \u6587\u6863\u7684 ",(0,t.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/compile_models/index.html#tutorial-frontend",children:"\u7F16\u8BD1\u6DF1\u5EA6\u5B66\u4E60\u6A21\u578B"})," \u90E8\u5206\u627E\u5230\u652F\u6301\u7684\u5217\u8868\u3002"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'model_url = (\n    "https://github.com/onnx/models/raw/main/"\n    "vision/classification/resnet/model/"\n    "resnet50-v2-7.onnx"\n)\n\nmodel_path = download_testdata(model_url, "resnet50-v2-7.onnx", module="onnx")\nonnx_model = onnx.load(model_path)\n\n# \u4E3A numpy \u7684 RNG \u8BBE\u7F6E seed\uFF0C\u5F97\u5230\u4E00\u81F4\u7684\u7ED3\u679C\nnp.random.seed(0)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u4E0B\u8F7D\u9884\u5904\u7406\u548C\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF",children:"\u4E0B\u8F7D\u3001\u9884\u5904\u7406\u548C\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF"}),"\n",(0,t.jsxs)(n.p,{children:["\u6A21\u578B\u7684\u5F20\u91CF shape\u3001\u683C\u5F0F\u548C\u6570\u636E\u7C7B\u578B\u5404\u4E0D\u76F8\u540C\u3002\u56E0\u6B64\uFF0C\u5927\u591A\u6570\u6A21\u578B\u90FD\u9700\u8981\u4E00\u4E9B\u9884\u5904\u7406\u548C\u540E\u5904\u7406\uFF0C\u4EE5\u786E\u4FDD\u8F93\u5165\u6709\u6548\uFF0C\u5E76\u80FD\u89E3\u91CA\u8F93\u51FA\u3002 TVMC \u91C7\u7528\u4E86 NumPy \u7684 ",(0,t.jsx)(n.code,{children:".npz"})," \u683C\u5F0F\u7684\u8F93\u5165\u548C\u8F93\u51FA\u6570\u636E\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u4E2D\u7684\u56FE\u50CF\u8F93\u5165\u4F7F\u7528\u7684\u662F\u4E00\u5F20\u732B\u7684\u56FE\u50CF\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u6839\u636E\u559C\u597D\u9009\u62E9\u5176\u4ED6\u56FE\u50CF\u3002"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://s3.amazonaws.com/model-server/inputs/kitten.jpg",alt:"https://s3.amazonaws.com/model-server/inputs/kitten.jpg"})}),"\n",(0,t.jsx)(n.p,{children:"\u4E0B\u8F7D\u56FE\u50CF\u6570\u636E\uFF0C\u7136\u540E\u5C06\u5176\u8F6C\u6362\u4E3A numpy \u6570\u7EC4\u4F5C\u4E3A\u6A21\u578B\u7684\u8F93\u5165\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'img_url = "https://s3.amazonaws.com/model-server/inputs/kitten.jpg"\nimg_path = download_testdata(img_url, "imagenet_cat.png", module="data")\n\n# \u91CD\u8BBE\u5927\u5C0F\u4E3A 224x224\nresized_image = Image.open(img_path).resize((224, 224))\nimg_data = np.asarray(resized_image).astype("float32")\n\n# \u8F93\u5165\u56FE\u50CF\u662F HWC \u5E03\u5C40\uFF0C\u800C ONNX \u9700\u8981 CHW \u8F93\u5165\uFF0C\u6240\u4EE5\u8F6C\u6362\u6570\u7EC4\nimg_data = np.transpose(img_data, (2, 0, 1))\n\n# \u6839\u636E ImageNet \u8F93\u5165\u89C4\u8303\u8FDB\u884C\u5F52\u4E00\u5316\nimagenet_mean = np.array([0.485, 0.456, 0.406]).reshape((3, 1, 1))\nimagenet_stddev = np.array([0.229, 0.224, 0.225]).reshape((3, 1, 1))\nnorm_img_data = (img_data / 255 - imagenet_mean) / imagenet_stddev\n\n# \u6DFB\u52A0 batch \u7EF4\u5EA6\uFF0C\u671F\u671B 4 \u7EF4\u8F93\u5165\uFF1ANCHW\u3002\nimg_data = np.expand_dims(norm_img_data, axis=0)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u4F7F\u7528-relay-\u7F16\u8BD1\u6A21\u578B",children:"\u4F7F\u7528 Relay \u7F16\u8BD1\u6A21\u578B"}),"\n",(0,t.jsxs)(n.p,{children:["\u4E0B\u4E00\u6B65\u662F\u7F16\u8BD1 ResNet \u6A21\u578B\uFF0C\u9996\u5148\u7528 ",(0,t.jsx)(n.em,{children:"from_onnx"})," \u5BFC\u5165\u5668\uFF0C\u5C06\u6A21\u578B\u5BFC\u5165\u5230 Relay \u4E2D\u3002\u7136\u540E\uFF0C\u7528\u6807\u51C6\u4F18\u5316\uFF0C\u5C06\u6A21\u578B\u6784\u5EFA\u5230 TVM \u5E93\u4E2D\uFF0C\u6700\u540E\u4ECE\u5E93\u4E2D\u521B\u5EFA\u4E00\u4E2A TVM \u8BA1\u7B97\u56FE runtime \u6A21\u5757\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'target = "llvm"\n'})}),"\n",(0,t.jsx)(n.admonition,{title:"\u5B9A\u4E49\u6B63\u786E\u7684 target",type:"note",children:(0,t.jsxs)(n.p,{children:["\u6307\u5B9A\u6B63\u786E\u7684 target\uFF08\u9009\u9879 ",(0,t.jsx)(n.code,{children:"--target"}),"\uFF09\u53EF\u5927\u5927\u63D0\u5347\u7F16\u8BD1\u6A21\u5757\u7684\u6027\u80FD\uFF0C\u56E0\u4E3A\u53EF\u5229\u7528 target \u4E0A\u53EF\u7528\u7684\u786C\u4EF6\u529F\u80FD\u3002\u53C2\u9605 ",(0,t.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/tune_with_autotvm/tune_relay_x86.html#tune-relay-x86",children:"\u9488\u5BF9 x86 CPU \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC"})," \u83B7\u53D6\u66F4\u591A\u4FE1\u606F\u3002\u5EFA\u8BAE\u786E\u5B9A\u597D\u4F7F\u7528\u7684 CPU \u578B\u53F7\u4EE5\u53CA\u53EF\u9009\u529F\u80FD\uFF0C\u7136\u540E\u9002\u5F53\u5730\u8BBE\u7F6E target\u3002\u4F8B\u5982\uFF0C\u5BF9\u4E8E\u67D0\u4E9B\u5904\u7406\u5668\uFF0C\u53EF\u7528 ",(0,t.jsx)(n.code,{children:'target = "llvm -mcpu=skylake"'}),"\uFF1B\u5BF9\u4E8E\u5177\u6709 AVX-512 \u5411\u91CF\u6307\u4EE4\u96C6\u7684\u5904\u7406\u5668\uFF0C\u53EF\u7528 ",(0,t.jsx)(n.code,{children:'target = "llvm -mcpu=skylake-avx512"'}),"\u3002"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# \u8F93\u5165\u540D\u79F0\u53EF\u80FD\u56E0\u6A21\u578B\u7C7B\u578B\u800C\u5F02\n# \u53EF\u7528 Netron \u5DE5\u5177\u68C0\u67E5\u8F93\u5165\u540D\u79F0\ninput_name = "data"\nshape_dict = {input_name: img_data.shape}\n\nmod, params = relay.frontend.from_onnx(onnx_model, shape_dict)\n\nwith tvm.transform.PassContext(opt_level=3):\n    lib = relay.build(mod, target=target, params=params)\n\ndev = tvm.device(str(target), 0)\nmodule = graph_executor.GraphModule(lib["default"](dev))\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u5728-tvm-runtime-\u6267\u884C",children:"\u5728 TVM Runtime \u6267\u884C"}),"\n",(0,t.jsx)(n.p,{children:"\u7F16\u8BD1\u597D\u6A21\u578B\u540E\uFF0C\u5C31\u53EF\u7528 TVM runtime \u5BF9\u5176\u8FDB\u884C\u9884\u6D4B\u3002\u8981\u7528 TVM \u8FD0\u884C\u6A21\u578B\u5E76\u8FDB\u884C\u9884\u6D4B\uFF0C\u9700\u8981\uFF1A"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u521A\u751F\u6210\u7684\u7F16\u8BD1\u6A21\u578B\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u7528\u6765\u9884\u6D4B\u7684\u6A21\u578B\u7684\u6709\u6548\u8F93\u5165\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'dtype = "float32"\nmodule.set_input(input_name, img_data)\nmodule.run()\noutput_shape = (1, 1000)\ntvm_output = module.get_output(0, tvm.nd.empty(output_shape)).numpy()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u6536\u96C6\u57FA\u672C\u6027\u80FD\u6570\u636E",children:"\u6536\u96C6\u57FA\u672C\u6027\u80FD\u6570\u636E"}),"\n",(0,t.jsx)(n.p,{children:"\u6536\u96C6\u4E0E\u672A\u4F18\u5316\u6A21\u578B\u76F8\u5173\u7684\u57FA\u672C\u6027\u80FD\u6570\u636E\uFF0C\u7136\u540E\u5C06\u5176\u4E0E\u8C03\u4F18\u540E\u7684\u6A21\u578B\u8FDB\u884C\u6BD4\u8F83\u3002\u4E3A\u4E86\u89E3\u91CA CPU \u566A\u58F0\uFF0C\u5728\u591A\u4E2A batch \u4E2D\u591A\u6B21\u91CD\u590D\u8BA1\u7B97\uFF0C\u7136\u540E\u6536\u96C6\u5173\u4E8E\u5747\u503C\u3001\u4E2D\u503C\u548C\u6807\u51C6\u5DEE\u7684\u57FA\u7840\u7EDF\u8BA1\u6570\u636E\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import timeit\n\ntiming_number = 10\ntiming_repeat = 10\nunoptimized = (\n    np.array(timeit.Timer(lambda: module.run()).repeat(repeat=timing_repeat, number=timing_number))\n    * 1000\n    / timing_number\n)\nunoptimized = {\n    "mean": np.mean(unoptimized),\n    "median": np.median(unoptimized),\n    "std": np.std(unoptimized),\n}\n\nprint(unoptimized)\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:"{'mean': 495.13895513002353, 'median': 494.6680843500417, 'std': 1.3081147373726523}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u8F93\u51FA\u540E\u5904\u7406",children:"\u8F93\u51FA\u540E\u5904\u7406"}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u524D\u6240\u8FF0\uFF0C\u6BCF\u4E2A\u6A21\u578B\u63D0\u4F9B\u8F93\u51FA\u5F20\u91CF\u7684\u65B9\u5F0F\u90FD\u4E0D\u4E00\u6837\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u672C\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u7528\u4E13\u4E3A\u8BE5\u6A21\u578B\u63D0\u4F9B\u7684\u67E5\u627E\u8868\uFF0C\u8FD0\u884C\u4E00\u4E9B\u540E\u5904\u7406\uFF08post-processing\uFF09\uFF0C\u4ECE\u800C\u4F7F\u5F97 ResNet-50 v2 \u7684\u8F93\u51FA\u5F62\u5F0F\u66F4\u5177\u6709\u53EF\u8BFB\u6027\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from scipy.special import softmax\n\n# \u4E0B\u8F7D\u6807\u7B7E\u5217\u8868\nlabels_url = "https://s3.amazonaws.com/onnx-model-zoo/synset.txt"\nlabels_path = download_testdata(labels_url, "synset.txt", module="data")\n\nwith open(labels_path, "r") as f:\n    labels = [l.rstrip() for l in f]\n\n# \u6253\u5F00\u8F93\u51FA\u6587\u4EF6\u5E76\u8BFB\u53D6\u8F93\u51FA\u5F20\u91CF\nscores = softmax(tvm_output)\nscores = np.squeeze(scores)\nranks = np.argsort(scores)[::-1]\nfor rank in ranks[0:5]:\n    print("class=\'%s\' with probability=%f" % (labels[rank], scores[rank]))\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:"class='n02123045 tabby, tabby cat' with probability=0.621103\nclass='n02123159 tiger cat' with probability=0.356379\nclass='n02124075 Egyptian cat' with probability=0.019712\nclass='n02129604 tiger, Panthera tigris' with probability=0.001215\nclass='n04040759 radiator' with probability=0.000262\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u9884\u671F\u8F93\u51FA\u5982\u4E0B\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:"# class='n02123045 tabby, tabby cat' with probability=0.610553\n# class='n02123159 tiger cat' with probability=0.367179\n# class='n02124075 Egyptian cat' with probability=0.019365\n# class='n02129604 tiger, Panthera tigris' with probability=0.001273\n# class='n04040759 radiator' with probability=0.000261\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u8C03\u4F18\u6A21\u578B",children:"\u8C03\u4F18\u6A21\u578B"}),"\n",(0,t.jsx)(n.p,{children:"\u4EE5\u524D\u7684\u6A21\u578B\u88AB\u7F16\u8BD1\u5230 TVM runtime \u4E0A\u8FD0\u884C\uFF0C\u56E0\u6B64\u4E0D\u5305\u542B\u7279\u5B9A\u4E8E\u5E73\u53F0\u7684\u4F18\u5316\u3002\u672C\u8282\u5C06\u4ECB\u7ECD\u5982\u4F55\u7528 TVMC\uFF0C\u9488\u5BF9\u5DE5\u4F5C\u5E73\u53F0\u6784\u5EFA\u4F18\u5316\u6A21\u578B\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u7F16\u8BD1\u7684\u6A21\u5757\u63A8\u7406\uFF0C\u6709\u65F6\u53EF\u80FD\u65E0\u6CD5\u83B7\u5F97\u9884\u671F\u7684\u6027\u80FD\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u7528\u81EA\u52A8\u8C03\u4F18\u5668\u66F4\u597D\u5730\u914D\u7F6E\u6A21\u578B\uFF0C\u4ECE\u800C\u63D0\u9AD8\u6027\u80FD\u3002 TVM \u4E2D\u7684\u8C03\u4F18\u662F\u6307\uFF0C\u5728\u7ED9\u5B9A target \u4E0A\u4F18\u5316\u6A21\u578B\uFF0C\u4F7F\u5176\u8FD0\u884C\u5F97\u66F4\u5FEB\u3002\u4E0E\u8BAD\u7EC3\u6216\u5FAE\u8C03\u4E0D\u540C\uFF0C\u5B83\u4E0D\u4F1A\u5F71\u54CD\u6A21\u578B\u7684\u51C6\u786E\u6027\uFF0C\u800C\u53EA\u4F1A\u5F71\u54CD runtime \u6027\u80FD\u3002\u4F5C\u4E3A\u8C03\u4F18\u8FC7\u7A0B\u7684\u4E00\u90E8\u5206\uFF0CTVM \u5B9E\u73B0\u5E76\u8FD0\u884C\u8BB8\u591A\u4E0D\u540C\u7B97\u5B50\u7684\u53D8\u4F53\uFF0C\u4EE5\u67E5\u770B\u54EA\u4E2A\u6027\u80FD\u6700\u4F73\u3002\u8FD9\u4E9B\u8FD0\u884C\u7684\u7ED3\u679C\u5B58\u50A8\u5728\u8C03\u4F18\u8BB0\u5F55\u6587\u4EF6\u4E2D\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u6700\u7B80\u5355\u7684\u5F62\u5F0F\u4E2D\uFF0C\u8C03\u4F18\u9700\u8981\uFF1A"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u8FD0\u884C\u6B64\u6A21\u578B\u7684\u8BBE\u5907\u7684\u89C4\u683C"}),"\n",(0,t.jsx)(n.li,{children:"\u5B58\u50A8\u8C03\u4F18\u8BB0\u5F55\u7684\u8F93\u51FA\u6587\u4EF6\u7684\u8DEF\u5F84"}),"\n",(0,t.jsx)(n.li,{children:"\u8981\u8C03\u4F18\u7684\u6A21\u578B\u7684\u8DEF\u5F84\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import tvm.auto_scheduler as auto_scheduler\nfrom tvm.autotvm.tuner import XGBTuner\nfrom tvm import autotvm\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u8BBE\u7F6E\u90E8\u5206\u57FA\u672C\u53C2\u6570\uFF0C\u8FD0\u884C\u7531\u4E00\u7EC4\u7279\u5B9A\u53C2\u6570\u751F\u6210\u7684\u7F16\u8BD1\u4EE3\u7801\u5E76\u6D4B\u8BD5\u5176\u6027\u80FD\u3002",(0,t.jsx)(n.code,{children:"number"})," \u6307\u5B9A\u5C06\u8981\u6D4B\u8BD5\u7684\u4E0D\u540C\u914D\u7F6E\u7684\u6570\u91CF\uFF0C\u800C ",(0,t.jsx)(n.code,{children:"repeat"})," \u6307\u5B9A\u5C06\u5BF9\u6BCF\u4E2A\u914D\u7F6E\u8FDB\u884C\u591A\u5C11\u6B21\u6D4B\u8BD5\u3002 ",(0,t.jsx)(n.code,{children:"min_repeat_ms"})," \u6307\u5B9A\u8FD0\u884C\u914D\u7F6E\u6D4B\u8BD5\u9700\u8981\u591A\u957F\u65F6\u95F4\uFF0C\u5982\u679C\u91CD\u590D\u6B21\u6570\u4F4E\u4E8E\u6B64\u65F6\u95F4\uFF0C\u5219\u589E\u52A0\u5176\u503C\uFF0C\u5728 GPU \u4E0A\u8FDB\u884C\u7CBE\u786E\u8C03\u4F18\u65F6\u6B64\u9009\u9879\u662F\u5FC5\u9700\u7684\uFF0C\u5728 CPU \u8C03\u4F18\u5219\u4E0D\u662F\u5FC5\u9700\u7684\uFF0C\u5C06\u6B64\u503C\u8BBE\u7F6E\u4E3A 0\u8868\u793A\u7981\u7528\uFF0C",(0,t.jsx)(n.code,{children:"timeout"})," \u6307\u660E\u6BCF\u4E2A\u6D4B\u8BD5\u914D\u7F6E\u8FD0\u884C\u8BAD\u7EC3\u4EE3\u7801\u7684\u65F6\u95F4\u4E0A\u9650\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"number = 10\nrepeat = 1\nmin_repeat_ms = 0  # \u8C03\u4F18 CPU \u65F6\u8BBE\u7F6E\u4E3A 0\ntimeout = 10  # \u79D2\n\n# \u521B\u5EFA TVM \u8FD0\u884C\u5668\nrunner = autotvm.LocalRunner(\n    number=number,\n    repeat=repeat,\n    timeout=timeout,\n    min_repeat_ms=min_repeat_ms,\n    enable_cpu_cache_flush=True,\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u521B\u5EFA\u7B80\u5355\u7ED3\u6784\u6765\u4FDD\u5B58\u8C03\u4F18\u9009\u9879\u3002\u4F7F\u7528 XGBoost \u7B97\u6CD5\u6765\u6307\u5BFC\u641C\u7D22\u3002\u5982\u679C\u8981\u5728\u6295\u4EA7\u7684\u9879\u76EE\u4E2D\u5E94\u7528\uFF0C\u5219\u9700\u8981\u5C06\u8BD5\u9A8C\u6B21\u6570\u8BBE\u7F6E\u4E3A\u5927\u4E8E\u6B64\u5904\u7684 20\u3002\u5BF9\u4E8E CPU \u63A8\u8350 1500\uFF0C\u5BF9\u4E8E GPU \u63A8\u8350 3000-4000\u3002\u6240\u9700\u7684\u8BD5\u9A8C\u6B21\u6570\u53EF\u80FD\u53D6\u51B3\u4E8E\u7279\u5B9A\u7684\u6A21\u578B\u548C\u5904\u7406\u5668\uFF0C\u8981\u627E\u5230\u8C03\u4F18\u65F6\u95F4\u548C\u6A21\u578B\u4F18\u5316\u4E4B\u95F4\u7684\u6700\u4F73\u5E73\u8861\uFF0C\u5F97\u82B1\u4E00\u4E9B\u65F6\u95F4\u8BC4\u4F30\u4E00\u7CFB\u5217\u503C\u7684\u6027\u80FD\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u8FD0\u884C\u8C03\u4F18\u9700\u8981\u5927\u91CF\u65F6\u95F4\uFF0C\u6240\u4EE5\u8FD9\u91CC\u5C06\u8BD5\u9A8C\u6B21\u6570\u8BBE\u7F6E\u4E3A 10\uFF0C\u4F46\u4E0D\u63A8\u8350\u4F7F\u7528\u8FD9\u4E48\u5C0F\u7684\u503C\u3002",(0,t.jsx)(n.code,{children:"early_stopping"})," \u53C2\u6570\u662F\u4F7F\u5F97\u641C\u7D22\u63D0\u524D\u505C\u6B62\u7684\u8BD5\u9A8C\u6700\u5C0F\u503C\u3002measure option \u51B3\u5B9A\u4E86\u6784\u5EFA\u8BD5\u7528\u4EE3\u7801\u5E76\u8FD0\u884C\u7684\u4F4D\u7F6E\uFF0C\u672C\u793A\u4F8B\u7528\u7684\u662F\u521A\u521B\u5EFA\u7684 ",(0,t.jsx)(n.code,{children:"LocalRunner"})," \u548C ",(0,t.jsx)(n.code,{children:"LocalBuilder"}),"\u3002",(0,t.jsx)(n.code,{children:"Tuning_records"})," \u9009\u9879\u6307\u5B9A\u5C06\u8C03\u4F18\u6570\u636E\u5199\u5165\u7684\u54EA\u4E2A\u6587\u4EF6\u4E2D\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'tuning_option = {\n    "tuner": "xgb",\n    "trials": 20,\n    "early_stopping": 100,\n    "measure_option": autotvm.measure_option(\n        builder=autotvm.LocalBuilder(build_func="default"), runner=runner\n    ),\n    "tuning_records": "resnet-50-v2-autotuning.json",\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{title:"\u5B9A\u4E49\u8C03\u4F18\u641C\u7D22\u7B97\u6CD5",type:"note",children:(0,t.jsx)(n.p,{children:"\u6B64\u641C\u7D22\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4F7F\u7528 XGBoost Grid \u7B97\u6CD5\u8FDB\u884C\u5F15\u5BFC\u3002\u6839\u636E\u6A21\u578B\u590D\u6742\u6027\u548C\u53EF\u7528\u65F6\u957F\u53EF\u9009\u62E9\u4E0D\u540C\u7684\u7B97\u6CD5\u3002"})}),"\n",(0,t.jsx)(n.admonition,{title:"\u8BBE\u7F6E\u8C03\u4F18\u53C2\u6570",type:"note",children:(0,t.jsx)(n.p,{children:"\u4E3A\u8282\u7701\u65F6\u95F4\u5C06\u8BD5\u9A8C\u6B21\u6570\u548C\u63D0\u524D\u505C\u6B62\u6B21\u6570\u8BBE\u7F6E\u4E3A 20 \u548C 100\uFF0C\u6570\u503C\u8BBE\u7F6E\u8D8A\u5927\uFF0C\u6027\u80FD\u8D8A\u597D\uFF0C\u6240\u9700\u65F6\u95F4\u4E5F\u8D8A\u957F\u3002\u6536\u655B\u6240\u9700\u7684\u8BD5\u9A8C\u6B21\u6570\u6839\u636E\u6A21\u578B\u548C\u76EE\u6807\u5E73\u53F0\u7684\u4E0D\u540C\u800C\u53D8\u5316\u3002"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# \u9996\u5148\u4ECE onnx \u6A21\u578B\u4E2D\u63D0\u53D6\u4EFB\u52A1\ntasks = autotvm.task.extract_from_program(mod["main"], target=target, params=params)\n\n# \u6309\u987A\u5E8F\u8C03\u4F18\u63D0\u53D6\u7684\u4EFB\u52A1\nfor i, task in enumerate(tasks):\n    prefix = "[Task %2d/%2d] " % (i + 1, len(tasks))\n    \n    # choose tuner\n    tuner = "xgb"\n\n    # create tuner\n    if tuner == "xgb":\n        tuner_obj = XGBTuner(task, loss_type="reg")\n    elif tuner == "xgb_knob":\n        tuner_obj = XGBTuner(task, loss_type="reg", feature_type="knob")\n    elif tuner == "xgb_itervar":\n        tuner_obj = XGBTuner(task, loss_type="reg", feature_type="itervar")\n    elif tuner == "xgb_curve":\n        tuner_obj = XGBTuner(task, loss_type="reg", feature_type="curve")\n    elif tuner == "xgb_rank":\n        tuner_obj = XGBTuner(task, loss_type="rank")\n    elif tuner == "xgb_rank_knob":\n        tuner_obj = XGBTuner(task, loss_type="rank", feature_type="knob")\n    elif tuner == "xgb_rank_itervar":\n        tuner_obj = XGBTuner(task, loss_type="rank", feature_type="itervar")\n    elif tuner == "xgb_rank_curve":\n        tuner_obj = XGBTuner(task, loss_type="rank", feature_type="curve")\n    elif tuner == "xgb_rank_binary":\n        tuner_obj = XGBTuner(task, loss_type="rank-binary")\n    elif tuner == "xgb_rank_binary_knob":\n        tuner_obj = XGBTuner(task, loss_type="rank-binary", feature_type="knob")\n    elif tuner == "xgb_rank_binary_itervar":\n        tuner_obj = XGBTuner(task, loss_type="rank-binary", feature_type="itervar")\n    elif tuner == "xgb_rank_binary_curve":\n        tuner_obj = XGBTuner(task, loss_type="rank-binary", feature_type="curve")\n    elif tuner == "ga":\n        tuner_obj = GATuner(task, pop_size=50)\n    elif tuner == "random":\n        tuner_obj = RandomTuner(task)\n    elif tuner == "gridsearch":\n        tuner_obj = GridSearchTuner(task)\n    else:\n        raise ValueError("Invalid tuner: " + tuner)\n\n    tuner_obj.tune(\n        n_trial=min(tuning_option["trials"], len(task.config_space)),\n        early_stopping=tuning_option["early_stopping"],\n        measure_option=tuning_option["measure_option"],\n        callbacks=[\n            autotvm.callback.progress_bar(tuning_option["trials"], prefix=prefix),\n            autotvm.callback.log_to_file(tuning_option["tuning_records"]),\n        ],\n    )\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n\n[Task  1/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  1/25]  Current/Best:   17.48/  17.48 GFLOPS | Progress: (4/20) | 6.23 s\n[Task  1/25]  Current/Best:    6.16/  17.48 GFLOPS | Progress: (8/20) | 9.24 s\n[Task  1/25]  Current/Best:   11.54/  22.69 GFLOPS | Progress: (12/20) | 11.75 s\n[Task  1/25]  Current/Best:   16.79/  22.69 GFLOPS | Progress: (16/20) | 13.44 s\n[Task  1/25]  Current/Best:   11.62/  23.90 GFLOPS | Progress: (20/20) | 15.17 s Done.\n\n[Task  2/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  2/25]  Current/Best:   12.28/  12.93 GFLOPS | Progress: (4/20) | 3.93 s\n[Task  2/25]  Current/Best:   14.28/  17.39 GFLOPS | Progress: (8/20) | 5.27 s\n[Task  2/25]  Current/Best:   20.53/  20.53 GFLOPS | Progress: (12/20) | 6.61 s\n[Task  2/25]  Current/Best:   11.88/  20.53 GFLOPS | Progress: (16/20) | 7.87 s\n[Task  2/25]  Current/Best:   19.41/  20.53 GFLOPS | Progress: (20/20) | 9.47 s Done.\n\n[Task  3/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  3/25]  Current/Best:    1.64/  10.51 GFLOPS | Progress: (4/20) | 5.83 s\n[Task  3/25]  Current/Best:   15.62/  17.07 GFLOPS | Progress: (8/20) | 7.73 s\n[Task  3/25]  Current/Best:   15.07/  17.07 GFLOPS | Progress: (12/20) | 9.42 s\n[Task  3/25]  Current/Best:    7.27/  24.05 GFLOPS | Progress: (16/20) | 11.36 s\n[Task  3/25]  Current/Best:   12.61/  24.05 GFLOPS | Progress: (20/20) | 15.89 s Done.\n\n[Task  4/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  4/25]  Current/Best:    9.66/  20.74 GFLOPS | Progress: (4/20) | 2.38 s\n[Task  4/25]  Current/Best:    6.87/  20.74 GFLOPS | Progress: (8/20) | 7.09 s\n[Task  4/25]  Current/Best:   21.79/  21.79 GFLOPS | Progress: (12/20) | 11.94 s\n[Task  4/25]  Current/Best:   17.19/  21.79 GFLOPS | Progress: (16/20) | 14.31 s\n[Task  4/25]  Current/Best:   13.38/  21.79 GFLOPS | Progress: (20/20) | 16.40 s Done.\n\n[Task  5/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  5/25]  Current/Best:    9.68/  10.34 GFLOPS | Progress: (4/20) | 2.58 s\n[Task  5/25]  Current/Best:   11.96/  13.13 GFLOPS | Progress: (8/20) | 4.62 s\n[Task  5/25]  Current/Best:   11.49/  18.26 GFLOPS | Progress: (12/20) | 7.64 s\n[Task  5/25]  Current/Best:   11.79/  22.76 GFLOPS | Progress: (16/20) | 9.05 s\n[Task  5/25]  Current/Best:   11.98/  22.76 GFLOPS | Progress: (20/20) | 10.95 s Done.\n\n[Task  6/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  6/25]  Current/Best:   12.28/  20.75 GFLOPS | Progress: (4/20) | 4.08 s\n[Task  6/25]  Current/Best:   19.20/  20.75 GFLOPS | Progress: (8/20) | 5.83 s\n[Task  6/25]  Current/Best:   13.29/  20.75 GFLOPS | Progress: (12/20) | 7.77 s\n[Task  6/25]  Current/Best:   20.29/  20.75 GFLOPS | Progress: (16/20) | 10.00 s\n[Task  6/25]  Current/Best:    3.74/  20.75 GFLOPS | Progress: (20/20) | 12.53 s Done.\n\n[Task  7/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  7/25]  Current/Best:   11.29/  12.56 GFLOPS | Progress: (4/20) | 3.61 s\n[Task  7/25]  Current/Best:   20.39/  21.29 GFLOPS | Progress: (8/20) | 5.11 s\n[Task  7/25]  Current/Best:   16.12/  21.29 GFLOPS | Progress: (12/20) | 7.01 s\n[Task  7/25]  Current/Best:   12.36/  21.29 GFLOPS | Progress: (16/20) | 9.05 s\n[Task  7/25]  Current/Best:    6.38/  21.95 GFLOPS | Progress: (20/20) | 11.49 s Done.\n\n[Task  8/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  8/25]  Current/Best:   10.24/  14.44 GFLOPS | Progress: (4/20) | 2.91 s\n[Task  8/25]  Current/Best:    9.52/  14.44 GFLOPS | Progress: (8/20) | 8.03 s\n[Task  8/25]  Current/Best:   12.94/  14.44 GFLOPS | Progress: (12/20) | 14.49 s\n[Task  8/25]  Current/Best:   18.92/  18.92 GFLOPS | Progress: (16/20) | 16.58 s\n[Task  8/25]  Current/Best:   20.19/  20.19 GFLOPS | Progress: (20/20) | 23.57 s Done.\n\n[Task  9/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task  9/25]  Current/Best:   14.38/  15.82 GFLOPS | Progress: (4/20) | 11.96 s\n[Task  9/25]  Current/Best:   23.36/  23.36 GFLOPS | Progress: (8/20) | 13.71 s\n[Task  9/25]  Current/Best:    8.34/  23.36 GFLOPS | Progress: (12/20) | 16.27 s\n[Task  9/25]  Current/Best:   18.17/  23.36 GFLOPS | Progress: (16/20) | 19.12 s\n[Task  9/25]  Current/Best:    9.22/  23.36 GFLOPS | Progress: (20/20) | 27.69 s\n[Task 10/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 10/25]  Current/Best:   18.38/  18.38 GFLOPS | Progress: (4/20) | 2.56 s\n[Task 10/25]  Current/Best:   15.58/  18.38 GFLOPS | Progress: (8/20) | 4.18 s\n[Task 10/25]  Current/Best:   13.30/  19.16 GFLOPS | Progress: (12/20) | 5.71 s\n[Task 10/25]  Current/Best:   19.30/  20.58 GFLOPS | Progress: (16/20) | 6.82 s\n[Task 10/25]  Current/Best:    8.86/  20.58 GFLOPS | Progress: (20/20) | 8.33 s Done.\n\n[Task 11/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 11/25]  Current/Best:   11.06/  18.40 GFLOPS | Progress: (4/20) | 3.40 s\n[Task 11/25]  Current/Best:   17.14/  18.40 GFLOPS | Progress: (8/20) | 6.19 s\n[Task 11/25]  Current/Best:   16.38/  18.40 GFLOPS | Progress: (12/20) | 8.26 s\n[Task 11/25]  Current/Best:   13.59/  21.40 GFLOPS | Progress: (16/20) | 11.11 s\n[Task 11/25]  Current/Best:   19.64/  21.83 GFLOPS | Progress: (20/20) | 13.19 s Done.\n\n[Task 12/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 12/25]  Current/Best:    7.87/  18.27 GFLOPS | Progress: (4/20) | 5.68 s\n[Task 12/25]  Current/Best:    5.29/  18.27 GFLOPS | Progress: (8/20) | 9.61 s\n[Task 12/25]  Current/Best:   18.95/  19.15 GFLOPS | Progress: (12/20) | 11.57 s\n[Task 12/25]  Current/Best:   15.07/  19.15 GFLOPS | Progress: (16/20) | 14.51 s\n[Task 12/25]  Current/Best:   15.33/  19.15 GFLOPS | Progress: (20/20) | 16.46 s Done.\n\n[Task 13/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 13/25]  Current/Best:    8.75/  17.46 GFLOPS | Progress: (4/20) | 3.75 s\n[Task 13/25]  Current/Best:   15.84/  20.93 GFLOPS | Progress: (8/20) | 6.37 s\n[Task 13/25]  Current/Best:   19.65/  21.81 GFLOPS | Progress: (12/20) | 9.48 s\n[Task 13/25]  Current/Best:   12.32/  21.81 GFLOPS | Progress: (16/20) | 12.86 s\n[Task 13/25]  Current/Best:   18.88/  21.81 GFLOPS | Progress: (20/20) | 15.15 s Done.\n\n[Task 14/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 14/25]  Current/Best:   13.62/  13.62 GFLOPS | Progress: (4/20) | 3.39 s\n[Task 14/25]  Current/Best:    6.18/  13.62 GFLOPS | Progress: (8/20) | 5.59 s\n[Task 14/25]  Current/Best:   20.88/  20.88 GFLOPS | Progress: (12/20) | 8.29 s\n[Task 14/25]  Current/Best:   16.63/  20.88 GFLOPS | Progress: (16/20) | 9.99 s Done.\n\n[Task 14/25]  Current/Best:   17.36/  20.88 GFLOPS | Progress: (20/20) | 11.79 s\n[Task 15/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 15/25]  Current/Best:   16.39/  17.82 GFLOPS | Progress: (4/20) | 2.72 s\n[Task 15/25]  Current/Best:   14.58/  18.33 GFLOPS | Progress: (8/20) | 4.05 s\n[Task 15/25]  Current/Best:   10.47/  22.24 GFLOPS | Progress: (12/20) | 6.26 s\n[Task 15/25]  Current/Best:   20.60/  22.24 GFLOPS | Progress: (16/20) | 9.86 s\n[Task 15/25]  Current/Best:    9.80/  22.24 GFLOPS | Progress: (20/20) | 10.87 s\n[Task 16/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 16/25]  Current/Best:   20.68/  20.68 GFLOPS | Progress: (4/20) | 3.01 s\n[Task 16/25]  Current/Best:    3.07/  20.68 GFLOPS | Progress: (8/20) | 4.61 s\n[Task 16/25]  Current/Best:   19.68/  20.68 GFLOPS | Progress: (12/20) | 5.82 s\n[Task 16/25]  Current/Best:   17.95/  20.68 GFLOPS | Progress: (16/20) | 7.18 s\n[Task 16/25]  Current/Best:   10.15/  22.12 GFLOPS | Progress: (20/20) | 9.33 s Done.\n\n[Task 17/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 17/25]  Current/Best:   13.51/  18.93 GFLOPS | Progress: (4/20) | 4.79 s\n[Task 17/25]  Current/Best:   14.55/  23.37 GFLOPS | Progress: (8/20) | 7.56 s\n[Task 17/25]  Current/Best:   16.89/  23.37 GFLOPS | Progress: (12/20) | 9.61 s\n[Task 17/25]  Current/Best:   16.77/  23.37 GFLOPS | Progress: (16/20) | 11.81 s\n[Task 17/25]  Current/Best:   10.14/  23.37 GFLOPS | Progress: (20/20) | 13.94 s Done.\n\n[Task 18/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 18/25]  Current/Best:   11.52/  18.15 GFLOPS | Progress: (4/20) | 3.78 s\n[Task 18/25]  Current/Best:   10.71/  19.51 GFLOPS | Progress: (8/20) | 7.45 s\n[Task 18/25]  Current/Best:   19.44/  19.51 GFLOPS | Progress: (12/20) | 9.39 s\n[Task 18/25]  Current/Best:   10.08/  19.51 GFLOPS | Progress: (16/20) | 13.17 s\n[Task 18/25]  Current/Best:   20.94/  20.94 GFLOPS | Progress: (20/20) | 14.66 s Done.\n\n[Task 19/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 19/25]  Current/Best:    7.21/  20.46 GFLOPS | Progress: (4/20) | 6.09 s\n[Task 19/25]  Current/Best:    2.63/  20.46 GFLOPS | Progress: (8/20) | 9.41 s\n[Task 19/25]  Current/Best:   19.25/  21.00 GFLOPS | Progress: (12/20) | 12.32 s\n[Task 19/25]  Current/Best:   15.32/  22.01 GFLOPS | Progress: (16/20) | 15.25 s\n[Task 19/25]  Current/Best:    2.72/  23.38 GFLOPS | Progress: (20/20) | 18.04 s Done.\n\n[Task 20/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 20/25]  Current/Best:    8.70/  15.13 GFLOPS | Progress: (4/20) | 3.34 s Done.\n Done.\n\n[Task 20/25]  Current/Best:   10.07/  15.13 GFLOPS | Progress: (8/20) | 6.70 s\n[Task 20/25]  Current/Best:    2.35/  16.65 GFLOPS | Progress: (12/20) | 10.62 s\n[Task 20/25]  Current/Best:   12.51/  16.65 GFLOPS | Progress: (16/20) | 14.49 s\n[Task 20/25]  Current/Best:   13.29/  22.42 GFLOPS | Progress: (20/20) | 16.56 s\n[Task 21/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 21/25]  Current/Best:    6.47/  18.00 GFLOPS | Progress: (4/20) | 3.24 s\n[Task 21/25]  Current/Best:   14.70/  18.00 GFLOPS | Progress: (8/20) | 4.84 s\n[Task 21/25]  Current/Best:    1.63/  18.00 GFLOPS | Progress: (12/20) | 6.96 s\n[Task 21/25]  Current/Best:   18.46/  18.46 GFLOPS | Progress: (16/20) | 10.46 s\n[Task 21/25]  Current/Best:    4.52/  18.46 GFLOPS | Progress: (20/20) | 17.74 s\n[Task 22/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 22/25]  Current/Best:    2.74/  17.31 GFLOPS | Progress: (4/20) | 2.66 s\n[Task 22/25]  Current/Best:    9.18/  22.31 GFLOPS | Progress: (8/20) | 4.69 s\n[Task 22/25]  Current/Best:   19.91/  22.31 GFLOPS | Progress: (12/20) | 7.04 s\n[Task 22/25]  Current/Best:   15.37/  22.31 GFLOPS | Progress: (16/20) | 9.12 s\n[Task 22/25]  Current/Best:   14.47/  22.31 GFLOPS | Progress: (20/20) | 10.83 s Done.\n\n[Task 23/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 23/25]  Current/Best:   17.75/  20.70 GFLOPS | Progress: (4/20) | 3.23 s\n[Task 23/25]  Current/Best:   15.91/  20.70 GFLOPS | Progress: (8/20) | 6.67 s\n[Task 23/25]  Current/Best:   21.19/  21.55 GFLOPS | Progress: (12/20) | 8.49 s\n[Task 23/25]  Current/Best:    6.53/  21.55 GFLOPS | Progress: (16/20) | 15.43 s\n[Task 23/25]  Current/Best:    7.96/  21.55 GFLOPS | Progress: (20/20) | 19.61 s Done.\n\n[Task 24/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 24/25]  Current/Best:    8.44/   8.44 GFLOPS | Progress: (4/20) | 11.80 s\n[Task 24/25]  Current/Best:    2.01/   8.44 GFLOPS | Progress: (8/20) | 22.82 s\n[Task 24/25]  Current/Best:    4.44/   8.44 GFLOPS | Progress: (12/20) | 34.34 s Done.\n Done.\n\n[Task 24/25]  Current/Best:    7.18/   8.73 GFLOPS | Progress: (16/20) | 40.14 s\n[Task 24/25]  Current/Best:    3.29/   8.99 GFLOPS | Progress: (20/20) | 46.23 s Done.\n\n[Task 25/25]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/20) | 0.00 s\n[Task 25/25]  Current/Best:    1.56/   2.93 GFLOPS | Progress: (4/20) | 11.63 s\n[Task 25/25]  Current/Best:    5.65/   7.64 GFLOPS | Progress: (8/20) | 22.93 s\n[Task 25/25]  Current/Best:    5.95/   7.64 GFLOPS | Progress: (12/20) | 34.36 s\n[Task 25/25]  Current/Best:    5.80/   9.36 GFLOPS | Progress: (16/20) | 36.05 s\n[Task 25/25]  Current/Best:    2.94/   9.36 GFLOPS | Progress: (20/20) | 46.76 s\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8C03\u4F18\u8FC7\u7A0B\u7684\u8F93\u51FA\u5982\u4E0B\u6240\u793A\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:"# [Task  1/24]  Current/Best:   10.71/  21.08 GFLOPS | Progress: (60/1000) | 111.77 s Done.\n# [Task  1/24]  Current/Best:    9.32/  24.18 GFLOPS | Progress: (192/1000) | 365.02 s Done.\n# [Task  2/24]  Current/Best:   22.39/ 177.59 GFLOPS | Progress: (960/1000) | 976.17 s Done.\n# [Task  3/24]  Current/Best:   32.03/ 153.34 GFLOPS | Progress: (800/1000) | 776.84 s Done.\n# [Task  4/24]  Current/Best:   11.96/ 156.49 GFLOPS | Progress: (960/1000) | 632.26 s Done.\n# [Task  5/24]  Current/Best:   23.75/ 130.78 GFLOPS | Progress: (800/1000) | 739.29 s Done.\n# [Task  6/24]  Current/Best:   38.29/ 198.31 GFLOPS | Progress: (1000/1000) | 624.51 s Done.\n# [Task  7/24]  Current/Best:    4.31/ 210.78 GFLOPS | Progress: (1000/1000) | 701.03 s Done.\n# [Task  8/24]  Current/Best:   50.25/ 185.35 GFLOPS | Progress: (972/1000) | 538.55 s Done.\n# [Task  9/24]  Current/Best:   50.19/ 194.42 GFLOPS | Progress: (1000/1000) | 487.30 s Done.\n# [Task 10/24]  Current/Best:   12.90/ 172.60 GFLOPS | Progress: (972/1000) | 607.32 s Done.\n# [Task 11/24]  Current/Best:   62.71/ 203.46 GFLOPS | Progress: (1000/1000) | 581.92 s Done.\n# [Task 12/24]  Current/Best:   36.79/ 224.71 GFLOPS | Progress: (1000/1000) | 675.13 s Done.\n# [Task 13/24]  Current/Best:    7.76/ 219.72 GFLOPS | Progress: (1000/1000) | 519.06 s Done.\n# [Task 14/24]  Current/Best:   12.26/ 202.42 GFLOPS | Progress: (1000/1000) | 514.30 s Done.\n# [Task 15/24]  Current/Best:   31.59/ 197.61 GFLOPS | Progress: (1000/1000) | 558.54 s Done.\n# [Task 16/24]  Current/Best:   31.63/ 206.08 GFLOPS | Progress: (1000/1000) | 708.36 s Done.\n# [Task 17/24]  Current/Best:   41.18/ 204.45 GFLOPS | Progress: (1000/1000) | 736.08 s Done.\n# [Task 18/24]  Current/Best:   15.85/ 222.38 GFLOPS | Progress: (980/1000) | 516.73 s Done.\n# [Task 19/24]  Current/Best:   15.78/ 203.41 GFLOPS | Progress: (1000/1000) | 587.13 s Done.\n# [Task 20/24]  Current/Best:   30.47/ 205.92 GFLOPS | Progress: (\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u4F7F\u7528\u8C03\u4F18\u6570\u636E\u7F16\u8BD1\u4F18\u5316\u6A21\u578B",children:"\u4F7F\u7528\u8C03\u4F18\u6570\u636E\u7F16\u8BD1\u4F18\u5316\u6A21\u578B"}),"\n",(0,t.jsxs)(n.p,{children:["\u83B7\u53D6\u5B58\u50A8\u5728 ",(0,t.jsx)(n.code,{children:"resnet-50-v2-autotuning.json"}),"\uFF08\u4E0A\u8FF0\u8C03\u4F18\u8FC7\u7A0B\u7684\u8F93\u51FA\u6587\u4EF6\uFF09\u4E2D\u7684\u8C03\u4F18\u8BB0\u5F55\u3002\u7F16\u8BD1\u5668\u4F1A\u7528\u8FD9\u4E2A\u7ED3\u679C\uFF0C\u4E3A\u6307\u5B9A target \u4E0A\u7684\u6A21\u578B\u751F\u6210\u9AD8\u6027\u80FD\u4EE3\u7801\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u6536\u96C6\u5230\u6A21\u578B\u7684\u8C03\u4F18\u6570\u636E\u540E\uFF0C\u53EF\u7528\u4F18\u5316\u7684\u7B97\u5B50\u91CD\u65B0\u7F16\u8BD1\u6A21\u578B\u6765\u52A0\u5FEB\u8BA1\u7B97\u901F\u5EA6\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'with autotvm.apply_history_best(tuning_option["tuning_records"]):\n    with tvm.transform.PassContext(opt_level=3, config={}):\n        lib = relay.build(mod, target=target, params=params)\n\ndev = tvm.device(str(target), 0)\nmodule = graph_executor.GraphModule(lib["default"](dev))\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u9A8C\u8BC1\u4F18\u5316\u6A21\u578B\u662F\u5426\u8FD0\u884C\u5E76\u4EA7\u751F\u76F8\u540C\u7684\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'dtype = "float32"\nmodule.set_input(input_name, img_data)\nmodule.run()\noutput_shape = (1, 1000)\ntvm_output = module.get_output(0, tvm.nd.empty(output_shape)).numpy()\n\nscores = softmax(tvm_output)\nscores = np.squeeze(scores)\nranks = np.argsort(scores)[::-1]\nfor rank in ranks[0:5]:\n    print("class=\'%s\' with probability=%f" % (labels[rank], scores[rank]))\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:"class='n02123045 tabby, tabby cat' with probability=0.621104\nclass='n02123159 tiger cat' with probability=0.356378\nclass='n02124075 Egyptian cat' with probability=0.019712\nclass='n02129604 tiger, Panthera tigris' with probability=0.001215\nclass='n04040759 radiator' with probability=0.000262\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u9A8C\u8BC1\u9884\u6D4B\u503C\u662F\u5426\u76F8\u540C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:"# class='n02123045 tabby, tabby cat' with probability=0.610550\n# class='n02123159 tiger cat' with probability=0.367181\n# class='n02124075 Egyptian cat' with probability=0.019365\n# class='n02129604 tiger, Panthera tigris' with probability=0.001273\n# class='n04040759 radiator' with probability=0.000261\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u6BD4\u8F83\u8C03\u4F18\u548C\u672A\u8C03\u4F18\u7684\u6A21\u578B",children:"\u6BD4\u8F83\u8C03\u4F18\u548C\u672A\u8C03\u4F18\u7684\u6A21\u578B"}),"\n",(0,t.jsx)(n.p,{children:"\u6536\u96C6\u4E0E\u6B64\u4F18\u5316\u6A21\u578B\u76F8\u5173\u7684\u4E00\u4E9B\u57FA\u672C\u6027\u80FD\u6570\u636E\uFF0C\u5E76\u5C06\u5176\u4E0E\u672A\u4F18\u5316\u6A21\u578B\u8FDB\u884C\u6BD4\u8F83\u3002\u6839\u636E\u5E95\u5C42\u786C\u4EF6\u3001\u8FED\u4EE3\u6B21\u6570\u548C\u5176\u4ED6\u56E0\u7D20\uFF0C\u5C06\u4F18\u5316\u6A21\u578B\u548C\u672A\u4F18\u5316\u6A21\u578B\u6BD4\u8F83\u65F6\uFF0C\u53EF\u4EE5\u770B\u5230\u6027\u80FD\u7684\u63D0\u5347\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import timeit\n\ntiming_number = 10\ntiming_repeat = 10\noptimized = (\n    np.array(timeit.Timer(lambda: module.run()).repeat(repeat=timing_repeat, number=timing_number))\n    * 1000\n    / timing_number\n)\noptimized = {"mean": np.mean(optimized), "median": np.median(optimized), "std": np.std(optimized)}\n\n\n\nprint("optimized: %s" % (optimized))\nprint("unoptimized: %s" % (unoptimized))\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",children:"optimized: {'mean': 407.31687583000166, 'median': 407.3377107500164, 'std': 1.692177042688564}\nunoptimized: {'mean': 495.13895513002353, 'median': 494.6680843500417, 'std': 1.3081147373726523}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u5199\u5728\u6700\u540E",children:"\u5199\u5728\u6700\u540E"}),"\n",(0,t.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u901A\u8FC7\u4E00\u4E2A\u7B80\u77ED\u793A\u4F8B\uFF0C\u8BF4\u660E\u4E86\u5982\u4F55\u7528 TVM Python API \u7F16\u8BD1\u3001\u8FD0\u884C\u548C\u8C03\u4F18\u6A21\u578B\u3002\u8FD8\u8BA8\u8BBA\u4E86\u5BF9\u8F93\u5165\u548C\u8F93\u51FA\u8FDB\u884C\u9884\u5904\u7406\u548C\u540E\u5904\u7406\u7684\u5FC5\u8981\u6027\u3002\u5728\u8C03\u4F18\u8FC7\u7A0B\u4E4B\u540E\uFF0C\u6F14\u793A\u4E86\u5982\u4F55\u6BD4\u8F83\u672A\u4F18\u5316\u548C\u4F18\u5316\u6A21\u578B\u7684\u6027\u80FD\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u672C\u6587\u6863\u5C55\u793A\u4E86\u4E00\u4E2A\u5728\u672C\u5730\u4F7F\u7528 ResNet-50 v2 \u7684\u7B80\u5355\u793A\u4F8B\u3002TVMC \u8FD8\u652F\u6301\u66F4\u591A\u529F\u80FD\uFF0C\u5305\u62EC\u4EA4\u53C9\u7F16\u8BD1\u3001\u8FDC\u7A0B\u6267\u884C\u548C\u5206\u6790/\u57FA\u51C6\u6D4B\u8BD5\u7B49\u3002"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u811A\u672C\u603B\u8FD0\u884C\u65F6\u95F4\uFF1A"}),"\uFF0810 \u5206 27.660 \u79D2\uFF09"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Aautotvm_relay_x86.py"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Aautotvm_relay_x86.ipynb"})})]})}function p(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},21494:function(e,n,s){s.d(n,{Z:function(){return i},a:function(){return o}});var r=s(39546);let t={},a=r.createContext(t);function o(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);