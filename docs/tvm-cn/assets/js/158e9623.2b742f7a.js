"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["91977"],{73796:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>d,metadata:()=>o,assets:()=>l,toc:()=>i,contentTitle:()=>a});var o=JSON.parse('{"id":"how_to/deploy/deploy_models/deploy_ssd","title":"\u90E8\u7F72 Single Shot Multibox Detector\uFF08SSD\uFF09\u6A21\u578B","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/how_to/deploy/deploy_models/09-deploy_ssd.md","sourceDirName":"how_to/deploy/deploy_models","slug":"/how_to/deploy/deploy_models/deploy_ssd","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/deploy/deploy_models/deploy_ssd","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/how_to/deploy/deploy_models/09-deploy_ssd.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":9,"frontMatter":{"title":"\u90E8\u7F72 Single Shot Multibox Detector\uFF08SSD\uFF09\u6A21\u578B"},"sidebar":"tutorialSidebar","previous":{"title":"\u5728 CPU \u4E0A\u90E8\u7F72 Hugging Face \u526A\u679D\u6A21\u578B","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/deploy/deploy_models/hugging_face"},"next":{"title":"\u4F7F\u7528 Relay","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/relay/"}}'),s=t("74132"),r=t("21494");let d={title:"\u90E8\u7F72 Single Shot Multibox Detector\uFF08SSD\uFF09\u6A21\u578B"},a="\u90E8\u7F72 Single Shot Multibox Detector\uFF08SSD\uFF09\u6A21\u578B",l={},i=[{value:"\u521D\u6B65\u53C2\u6570\u8BBE\u7F6E",id:"\u521D\u6B65\u53C2\u6570\u8BBE\u7F6E",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\u90E8\u7F72-single-shot-multibox-detectorssd\u6A21\u578B",children:"\u90E8\u7F72 Single Shot Multibox Detector\uFF08SSD\uFF09\u6A21\u578B"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["\u5355\u51FB ",(0,s.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/deploy_models/deploy_ssd_gluoncv.html#sphx-glr-download-how-to-deploy-models-deploy-ssd-gluoncv-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,s.jsx)(n.a,{href:"https://github.com/kevinthesun",children:"Yao Wang"}),"\uFF0C",(0,s.jsx)(n.a,{href:"https://github.com/Laurawly",children:"Leyuan Wang"})]}),"\n",(0,s.jsx)(n.p,{children:"\u672C\u6587\u4ECB\u7ECD\u5982\u4F55\u7528 TVM \u90E8\u7F72 SSD \u6A21\u578B\u3002\u8FD9\u91CC\u5C06\u4F7F\u7528 GluonCV \u9884\u8BAD\u7EC3\u7684 SSD \u6A21\u578B\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A Relay IR\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import tvm\nfrom tvm import te\n\nfrom matplotlib import pyplot as plt\nfrom tvm import relay\nfrom tvm.contrib import graph_executor\nfrom tvm.contrib.download import download_testdata\nfrom gluoncv import model_zoo, data, utils\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/usr/local/lib/python3.7/dist-packages/gluoncv/__init__.py:40: UserWarning: Both `mxnet==1.6.0` and `torch==1.11.0+cpu` are installed. You might encounter increased GPU memory footprint if both framework are used at the same time.\n  warnings.warn(f'Both `mxnet=={mx.__version__}` and `torch=={torch.__version__}` are installed. '\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u521D\u6B65\u53C2\u6570\u8BBE\u7F6E",children:"\u521D\u6B65\u53C2\u6570\u8BBE\u7F6E"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"\u73B0\u5728\u652F\u6301\u5728 CPU \u548C GPU \u4E0A\u7F16\u8BD1 SSD\u3002"}),(0,s.jsxs)(n.p,{children:["\u4E3A\u53D6\u5F97 CPU \u4E0A\u7684\u6700\u4F73\u63A8\u7406\u6027\u80FD\uFF0C\u9700\u8981\u6839\u636E\u8BBE\u5907\u4FEE\u6539 target \u53C2\u6570\u2014\u2014\u5BF9\u4E8E x86 CPU\uFF1A\u53C2\u8003 ",(0,s.jsx)(n.a,{href:"/docs/how_to/autotune/autotuning_x86",children:"\u4E3A x86 CPU \u81EA\u52A8\u8C03\u6574\u5377\u79EF\u7F51\u7EDC"})," \u6765\u8C03\u6574\uFF1B\u5BF9\u4E8E arm CPU\uFF1A\u53C2\u8003 ",(0,s.jsx)(n.a,{href:"/docs/how_to/autotune/autotuning_arm",children:"\u4E3A ARM CPU \u81EA\u52A8\u8C03\u6574\u5377\u79EF\u7F51\u7EDC"})," \u6765\u8C03\u6574\u3002"]}),(0,s.jsxs)(n.p,{children:["\u4E3A\u5728 Intel \u663E\u5361\u4E0A\u53D6\u5F97\u6700\u4F73\u63A8\u7406\u6027\u80FD\uFF0C\u5C06 target \u53C2\u6570\u4FEE\u6539\u4E3A ",(0,s.jsx)(n.code,{children:"opencl -device=intel_graphics"})," \u3002\u6CE8\u610F\uFF1A\u5728 Mac \u4E0A\u4F7F\u7528 Intel \u663E\u5361\u65F6\uFF0Ctarget \u8981\u8BBE\u7F6E\u4E3A ",(0,s.jsx)(n.code,{children:"opencl"})," \uFF0C\u56E0\u4E3A Mac \u4E0A\u4E0D\u652F\u6301 Intel \u5B50\u7EC4\u6269\u5C55\u3002"]}),(0,s.jsxs)(n.p,{children:["\u4E3A\u53D6\u5F97\u57FA\u4E8E CUDA \u7684 GPU \u4E0A\u7684\u6700\u4F73\u63A8\u7406\u6027\u80FD\uFF0C\u5C06 target \u53C2\u6570\u4FEE\u6539\u4E3A ",(0,s.jsx)(n.code,{children:"cuda"}),"\uFF1B\u5BF9\u4E8E\u57FA\u4E8E OPENCL \u7684 GPU\uFF0C\u5C06 target \u53C2\u6570\u4FEE\u6539\u4E3A ",(0,s.jsx)(n.code,{children:"opencl"}),"\uFF0C\u7136\u540E\u6839\u636E\u8BBE\u5907\u6765\u4FEE\u6539\u8BBE\u5907\u53C2\u6570\u3002"]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'supported_model = [\n    "ssd_512_resnet50_v1_voc",\n    "ssd_512_resnet50_v1_coco",\n    "ssd_512_resnet101_v2_voc",\n    "ssd_512_mobilenet1.0_voc",\n    "ssd_512_mobilenet1.0_coco",\n    "ssd_300_vgg16_atrous_voc" "ssd_512_vgg16_atrous_coco",\n]\n\nmodel_name = supported_model[0]\ndshape = (1, 3, 512, 512)\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u4E0B\u8F7D\u5E76\u9884\u5904\u7406 demo \u56FE\u50CF\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'im_fname = download_testdata(\n    "https://github.com/dmlc/web-data/blob/main/" + "gluoncv/detection/street_small.jpg?raw=true",\n    "street_small.jpg",\n    module="data",\n)\nx, img = data.transforms.presets.ssd.load_test(im_fname, short=512)\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u4E3A CPU \u8F6C\u6362\u548C\u7F16\u8BD1\u6A21\u578B\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'block = model_zoo.get_model(model_name, pretrained=True)\n\ndef build(target):\n    mod, params = relay.frontend.from_mxnet(block, {"data": dshape})\n    with tvm.transform.PassContext(opt_level=3):\n        lib = relay.build(mod, target, params=params)\n    return lib\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/usr/local/lib/python3.7/dist-packages/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:\n        data: None\n  input_sym_arg_type = in_param.infer_type()[0]\nDownloading /workspace/.mxnet/models/ssd_512_resnet50_v1_voc-9c8b225a.zip from https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/models/ssd_512_resnet50_v1_voc-9c8b225a.zip...\n\n  0%|          | 0/132723 [00:00<?, ?KB/s]\n  2%|1         | 2429/132723 [00:00<00:05, 24288.69KB/s]\n  8%|8         | 10888/132723 [00:00<00:02, 59757.20KB/s]\n 14%|#4        | 18798/132723 [00:00<00:01, 68586.60KB/s]\n 21%|##        | 27307/132723 [00:00<00:01, 75099.17KB/s]\n 27%|##7       | 35836/132723 [00:00<00:01, 78765.91KB/s]\n 33%|###3      | 44460/132723 [00:00<00:01, 81298.98KB/s]\n 40%|###9      | 53075/132723 [00:00<00:00, 82882.32KB/s]\n 46%|####6     | 61612/132723 [00:00<00:00, 83671.87KB/s]\n 53%|#####2    | 69980/132723 [00:00<00:00, 82355.51KB/s]\n 59%|#####9    | 78462/132723 [00:01<00:00, 83105.52KB/s]\n 65%|######5   | 86777/132723 [00:01<00:00, 79179.66KB/s]\n 72%|#######1  | 95291/132723 [00:01<00:00, 80915.06KB/s]\n 78%|#######7  | 103417/132723 [00:01<00:00, 62776.56KB/s]\n 84%|########4 | 111967/132723 [00:01<00:00, 68364.35KB/s]\n 90%|########9 | 119368/132723 [00:01<00:00, 44237.04KB/s]\n 96%|#########6| 127829/132723 [00:01<00:00, 51926.12KB/s]\n100%|##########| 132723/132723 [00:02<00:00, 64946.94KB/s]\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u521B\u5EFA TVM runtime\uFF0C\u5E76\u8FDB\u884C\u63A8\u7406\uFF0C\u6CE8\u610F\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'Use target = "cuda -libs" to enable thrust based sort, if you\nenabled thrust during cmake by -DUSE_THRUST=ON.\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def run(lib, dev):\n    # \u6784\u5EFA TVM runtime\n    m = graph_executor.GraphModule(lib["default"](dev))\n    tvm_input = tvm.nd.array(x.asnumpy(), device=dev)\n    m.set_input("data", tvm_input)\n    # \u6267\u884C\n    m.run()\n    # \u5F97\u5230\u8F93\u51FA\n    class_IDs, scores, bounding_boxs = m.get_output(0), m.get_output(1), m.get_output(2)\n    return class_IDs, scores, bounding_boxs\n\nfor target in ["llvm", "cuda"]:\n    dev = tvm.device(target, 0)\n    if dev.exist:\n        lib = build(target)\n        class_IDs, scores, bounding_boxs = run(lib, dev)\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u663E\u793A\u7ED3\u679C\uFF1A"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"ax = utils.viz.plot_bbox(\n    img,\n    bounding_boxs.numpy()[0],\n    scores.numpy()[0],\n    class_IDs.numpy()[0],\n    class_names=block.classes,\n)\nplt.show()\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://tvm.apache.org/docs/_images/sphx_glr_deploy_ssd_gluoncv_001.png",alt:"\u56FE\u7247"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u811A\u672C\u603B\u8FD0\u884C\u65F6\u957F\uFF1A"}),"\uFF08 2 \u5206 32.231 \u79D2\uFF09"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/cccb17d28e5e8b2e94ea8cd5ec59f6ed/deploy_ssd_gluoncv.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Adeploy_ssd_gluoncv.py"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/d92aacfae35477bed0f7f60aa8d2714e/deploy_ssd_gluoncv.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Adeploy_ssd_gluoncv.ipynb"})})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},21494:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return d}});var o=t(39546);let s={},r=o.createContext(s);function d(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);