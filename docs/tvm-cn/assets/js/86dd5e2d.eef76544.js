"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["26931"],{92764:function(e,n,t){t.r(n),t.d(n,{default:()=>_,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>l,contentTitle:()=>d});var s=JSON.parse('{"id":"how_to/te_schedules/scan_recurrent","title":"\u7EBF\u6027\u548C\u9012\u5F52\u6838","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/how_to/te_schedules/04-scan_recurrent.md","sourceDirName":"how_to/te_schedules","slug":"/how_to/te_schedules/scan_recurrent","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/te_schedules/scan_recurrent","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/how_to/te_schedules/04-scan_recurrent.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":4,"frontMatter":{"title":"\u7EBF\u6027\u548C\u9012\u5F52\u6838"},"sidebar":"tutorialSidebar","previous":{"title":"\u5185\u8054\u53CA\u6570\u5B66\u51FD\u6570","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/te_schedules/math"},"next":{"title":"\u5916\u90E8\u5F20\u91CF\u51FD\u6570","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/te_schedules/external_tensor"}}'),a=t("74132"),i=t("21494");let r={title:"\u7EBF\u6027\u548C\u9012\u5F52\u6838"},d="\u7EBF\u6027\u548C\u9012\u5F52\u6838",c={},l=[{value:"\u8C03\u5EA6\u7EBF\u6027\u5355\u5143",id:"\u8C03\u5EA6\u7EBF\u6027\u5355\u5143",level:2},{value:"\u6784\u5EFA\u548C\u9A8C\u8BC1",id:"\u6784\u5EFA\u548C\u9A8C\u8BC1",level:2},{value:"\u591A\u9636\u6BB5\u7EBF\u6027\u5355\u5143",id:"\u591A\u9636\u6BB5\u7EBF\u6027\u5355\u5143",level:2},{value:"\u591A\u72B6\u6001",id:"\u591A\u72B6\u6001",level:2},{value:"\u603B\u7ED3",id:"\u603B\u7ED3",level:2}];function o(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\u7EBF\u6027\u548C\u9012\u5F52\u6838",children:"\u7EBF\u6027\u548C\u9012\u5F52\u6838"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["\u5355\u51FB ",(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/work_with_schedules/scan.html#sphx-glr-download-how-to-work-with-schedules-scan-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,a.jsx)(n.a,{href:"https://tqchen.github.io/",children:"Tianqi Chen"})]}),"\n",(0,a.jsx)(n.p,{children:"\u4E0B\u9762\u4ECB\u7ECD\u5982\u4F55\u5728 TVM \u4E2D\u8FDB\u884C\u9012\u5F52\u8BA1\u7B97\uFF08\u795E\u7ECF\u7F51\u7EDC\u4E2D\u7684\u5178\u578B\u6A21\u5F0F\uFF09\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from __future__ import absolute_import, print_function\n\nimport tvm\nimport tvm.testing\nfrom tvm import te\nimport numpy as np\n"})}),"\n",(0,a.jsx)(n.p,{children:"TVM \u7528\u7EBF\u6027\u7B97\u5B50\u6765\u63CF\u8FF0\u7B26\u53F7\u5FAA\u73AF\u3002\u4EE5\u4E0B\u7EBF\u6027\u7B97\u5B50\u8BA1\u7B97 X \u5217\u4E0A\u7684\u7D2F\u79EF\u548C\u3002"}),"\n",(0,a.jsxs)(n.p,{children:["\u7EBF\u6027\u5728\u5F20\u91CF\u7684\u6700\u9AD8\u7EF4\u5EA6\u4E0A\u8FDB\u884C\u3002",(0,a.jsx)(n.code,{children:"s_state"})," \u662F\u63CF\u8FF0\u7EBF\u6027\u8F6C\u6362\u72B6\u6001\u7684\u5360\u4F4D\u7B26\u3002",(0,a.jsx)(n.code,{children:"s_init"})," \u63CF\u8FF0\u5982\u4F55\u521D\u59CB\u5316\u524D k \u4E2A\u65F6\u95F4\u6B65\u957F\uFF0C\u5176\u7B2C\u4E00\u4E2A\u7EF4\u5EA6\u4E3A 1\uFF0C\u63CF\u8FF0\u4E86\u5982\u4F55\u521D\u59CB\u5316\u7B2C\u4E00\u4E2A\u65F6\u95F4\u6B65\u957F\u7684\u72B6\u6001\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"s_update"})," \u63CF\u8FF0\u4E86\u5982\u4F55\u66F4\u65B0\u65F6\u95F4\u6B65\u957F t \u5904\u7684\u503C\uFF0C\u66F4\u65B0\u7684\u503C\u53EF\u901A\u8FC7\u72B6\u6001\u5360\u4F4D\u7B26\u5F15\u7528\u4E0A\u4E00\u4E2A\u65F6\u95F4\u6B65\u957F\u7684\u503C\u3002\u6CE8\u610F\u5728\u5F53\u524D\u6216\u4E4B\u540E\u7684\u65F6\u95F4\u6B65\u957F\u5F15\u7528 ",(0,a.jsx)(n.code,{children:"s_state"})," \u662F\u65E0\u6548\u7684\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:["\u7EBF\u6027\u5305\u542B\u72B6\u6001\u5360\u4F4D\u7B26\u3001\u521D\u59CB\u503C\u548C\u66F4\u65B0\u63CF\u8FF0\u3002\u63A8\u8350\u5217\u51FA\u7EBF\u6027\u5355\u5143\u7684\u8F93\u5165\uFF0C\u7EBF\u6027\u7684\u7ED3\u679C\u662F\u4E00\u4E2A\u5F20\u91CF\u2014\u2014 ",(0,a.jsx)(n.code,{children:"s_state"})," \u5728\u65F6\u57DF\u66F4\u65B0\u540E\u7684\u7ED3\u679C\u3002"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'m = te.var("m")\nn = te.var("n")\nX = te.placeholder((m, n), name="X")\ns_state = te.placeholder((m, n))\ns_init = te.compute((1, n), lambda _, i: X[0, i])\ns_update = te.compute((m, n), lambda t, i: s_state[t - 1, i] + X[t, i])\ns_scan = tvm.te.scan(s_init, s_update, s_state, inputs=[X])\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u8C03\u5EA6\u7EBF\u6027\u5355\u5143",children:"\u8C03\u5EA6\u7EBF\u6027\u5355\u5143"}),"\n",(0,a.jsx)(n.p,{children:"\u901A\u8FC7\u5206\u522B\u8C03\u5EA6 update \u548C init \u90E8\u5206\u6765\u8C03\u5EA6\u7EBF\u6027\u4F53\u3002\u6CE8\u610F\uFF0C\u8C03\u5EA6\u66F4\u65B0\u90E8\u5206\u7684\u7B2C\u4E00\u4E2A\u8FED\u4EE3\u7EF4\u5EA6\u662F\u65E0\u6548\u7684\u3002\u8981\u5728\u65F6\u95F4\u8FED\u4EE3\u4E0A\u62C6\u5206\uFF0C\u7528\u6237\u53EF\u4EE5\u5728 scan_op.scan_axis \u4E0A\u8FDB\u884C\u8C03\u5EA6\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'s = te.create_schedule(s_scan.op)\nnum_thread = 256\nblock_x = te.thread_axis("blockIdx.x")\nthread_x = te.thread_axis("threadIdx.x")\nxo, xi = s[s_init].split(s_init.op.axis[1], factor=num_thread)\ns[s_init].bind(xo, block_x)\ns[s_init].bind(xi, thread_x)\nxo, xi = s[s_update].split(s_update.op.axis[1], factor=num_thread)\ns[s_update].bind(xo, block_x)\ns[s_update].bind(xi, thread_x)\nprint(tvm.lower(s, [X, s_scan], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'@main = primfn(X_1: handle, scan_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {X: Buffer(X_2: Pointer(float32), float32, [(stride: int32*m: int32)], [], type="auto"),\n             scan: Buffer(scan_2: Pointer(float32), float32, [(stride_1: int32*m)], [], type="auto")}\n  buffer_map = {X_1: X, scan_1: scan}\n  preflattened_buffer_map = {X_1: X_3: Buffer(X_2, float32, [m, n: int32], [stride, stride_2: int32], type="auto"), scan_1: scan_3: Buffer(scan_2, float32, [m, n], [stride_1, stride_3: int32], type="auto")} {\n  attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = floordiv((n + 255), 256);\n  attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 256;\n  if @tir.likely((((blockIdx.x*256) + threadIdx.x) < n), dtype=bool) {\n    scan[(((blockIdx.x*256) + threadIdx.x)*stride_3)] = X[(((blockIdx.x*256) + threadIdx.x)*stride_2)]\n  }\n  for (scan.idx: int32, 0, (m - 1)) {\n    attr [IterVar(blockIdx.x, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = floordiv((n + 255), 256);\n    attr [IterVar(threadIdx.x, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 256;\n    if @tir.likely((((blockIdx.x*256) + threadIdx.x) < n), dtype=bool) {\n      let cse_var_1: int32 = (scan.idx + 1)\n      scan[((cse_var_1*stride_1) + (((blockIdx.x*256) + threadIdx.x)*stride_3))] = (scan[((scan.idx*stride_1) + (((blockIdx.x*256) + threadIdx.x)*stride_3))] + X[((cse_var_1*stride) + (((blockIdx.x*256) + threadIdx.x)*stride_2))])\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u6784\u5EFA\u548C\u9A8C\u8BC1",children:"\u6784\u5EFA\u548C\u9A8C\u8BC1"}),"\n",(0,a.jsx)(n.p,{children:"\u53EF\u4EE5\u50CF\u5176\u4ED6 TVM \u5185\u6838\u4E00\u6837\u6784\u5EFA\u7EBF\u6027\u5185\u6838\uFF0C\u8FD9\u91CC\u7528 numpy \u6765\u9A8C\u8BC1\u7ED3\u679C\u7684\u6B63\u786E\u6027\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'fscan = tvm.build(s, [X, s_scan], "cuda", name="myscan")\ndev = tvm.cuda(0)\nn = 1024\nm = 10\na_np = np.random.uniform(size=(m, n)).astype(s_scan.dtype)\na = tvm.nd.array(a_np, dev)\nb = tvm.nd.array(np.zeros((m, n), dtype=s_scan.dtype), dev)\nfscan(a, b)\ntvm.testing.assert_allclose(b.numpy(), np.cumsum(a_np, axis=0))\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u591A\u9636\u6BB5\u7EBF\u6027\u5355\u5143",children:"\u591A\u9636\u6BB5\u7EBF\u6027\u5355\u5143"}),"\n",(0,a.jsx)(n.p,{children:"\u4EE5\u4E0A\u793A\u4F8B\u7528 s_update \u4E2D\u7684\u4E00\u4E2A\u5F20\u91CF\u8BA1\u7B97\u9636\u6BB5\u63CF\u8FF0\u4E86\u7EBF\u6027\u5355\u5143\uFF0C\u53EF\u4EE5\u5728\u7EBF\u6027\u5355\u5143\u4E2D\u4F7F\u7528\u591A\u4E2A\u5F20\u91CF\u7EA7\u3002"}),"\n",(0,a.jsx)(n.p,{children:"\u4EE5\u4E0B\u4EE3\u7801\u6F14\u793A\u4E86\u6709\u4E24\u4E2A\u9636\u6BB5\u64CD\u4F5C\u7684\u7EBF\u6027\u5355\u5143\u4E2D\u7684\u7EBF\u6027\u8FC7\u7A0B\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'m = te.var("m")\nn = te.var("n")\nX = te.placeholder((m, n), name="X")\ns_state = te.placeholder((m, n))\ns_init = te.compute((1, n), lambda _, i: X[0, i])\ns_update_s1 = te.compute((m, n), lambda t, i: s_state[t - 1, i] * 2, name="s1")\ns_update_s2 = te.compute((m, n), lambda t, i: s_update_s1[t, i] + X[t, i], name="s2")\ns_scan = tvm.te.scan(s_init, s_update_s2, s_state, inputs=[X])\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8FD9\u4E9B\u4E2D\u95F4\u5F20\u91CF\u53EF\u4EE5\u6B63\u5E38\u8C03\u5EA6\u3002\u4E3A\u4E86\u786E\u4FDD\u6B63\u786E\u6027\uFF0CTVM \u521B\u5EFA\u4E86\u4E00\u4E2A\u7EC4\u7EA6\u675F\u2014\u2014\u7981\u7528\u7EBF\u6027\u5FAA\u73AF\u4E4B\u5916\u7684 compute_at \u4F4D\u7F6E\u7684\u7EBF\u6027\u4F53\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"s = te.create_schedule(s_scan.op)\nxo, xi = s[s_update_s2].split(s_update_s2.op.axis[1], factor=32)\ns[s_update_s1].compute_at(s[s_update_s2], xo)\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'print(tvm.lower(s, [X, s_scan], simple_mode=True))\n@main = primfn(X_1: handle, scan_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {X: Buffer(X_2: Pointer(float32), float32, [(stride: int32*m: int32)], [], type="auto"),\n             scan: Buffer(scan_2: Pointer(float32), float32, [(stride_1: int32*m)], [], type="auto")}\n  buffer_map = {X_1: X, scan_1: scan}\n  preflattened_buffer_map = {X_1: X_3: Buffer(X_2, float32, [m, n: int32], [stride, stride_2: int32], type="auto"), scan_1: scan_3: Buffer(scan_2, float32, [m, n], [stride_1, stride_3: int32], type="auto")} {\n  allocate(s1: Pointer(global float32), float32, [32]), storage_scope = global {\n    for (i: int32, 0, n) {\n      scan[(i*stride_3)] = X[(i*stride_2)]\n    }\n    for (scan.idx: int32, 0, (m - 1)) {\n      for (i.outer: int32, 0, floordiv((n + 31), 32)) {\n        for (i_1: int32, 0, 32) {\n          if @tir.likely((((i.outer*32) + i_1) < n), dtype=bool) {\n            s1_1: Buffer(s1, float32, [32], [])[i_1] = (scan[((scan.idx*stride_1) + (((i.outer*32) + i_1)*stride_3))]*2f32)\n          }\n        }\n        for (i.inner: int32, 0, 32) {\n          if @tir.likely((((i.outer*32) + i.inner) < n), dtype=bool) {\n            let cse_var_2: int32 = (scan.idx + 1)\n            let cse_var_1: int32 = ((i.outer*32) + i.inner)\n            scan[((cse_var_2*stride_1) + (cse_var_1*stride_3))] = (s1_1[i.inner] + X[((cse_var_2*stride) + (cse_var_1*stride_2))])\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u591A\u72B6\u6001",children:"\u591A\u72B6\u6001"}),"\n",(0,a.jsx)(n.p,{children:"\u5BF9\u4E8E\u50CF RNN \u8FD9\u6837\u7684\u590D\u6742\u5E94\u7528\uFF0C\u9700\u8981\u591A\u4E2A\u9012\u5F52\u72B6\u6001\u3002\u7EBF\u6027\u652F\u6301\u591A\u4E2A\u9012\u5F52\u72B6\u6001\uFF0C\u4EE5\u4E0B\u793A\u4F8B\u6F14\u793A\u5982\u4F55\u6784\u5EFA\u5177\u6709\u4E24\u79CD\u72B6\u6001\u7684\u9012\u5F52\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'m = te.var("m")\nn = te.var("n")\nl = te.var("l")\nX = te.placeholder((m, n), name="X")\ns_state1 = te.placeholder((m, n))\ns_state2 = te.placeholder((m, l))\ns_init1 = te.compute((1, n), lambda _, i: X[0, i])\ns_init2 = te.compute((1, l), lambda _, i: 0.0)\ns_update1 = te.compute((m, n), lambda t, i: s_state1[t - 1, i] + X[t, i])\ns_update2 = te.compute((m, l), lambda t, i: s_state2[t - 1, i] + s_state1[t - 1, 0])\ns_scan1, s_scan2 = tvm.te.scan(\n    [s_init1, s_init2], [s_update1, s_update2], [s_state1, s_state2], inputs=[X]\n)\ns = te.create_schedule(s_scan1.op)\nprint(tvm.lower(s, [X, s_scan1, s_scan2], simple_mode=True))\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'@main = primfn(X_1: handle, scan_2: handle, scan_3: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {X: Buffer(X_2: Pointer(float32), float32, [(stride: int32*m: int32)], [], type="auto"),\n             scan: Buffer(scan_4: Pointer(float32), float32, [(stride_1: int32*m)], [], type="auto"),\n             scan_1: Buffer(scan_5: Pointer(float32), float32, [(stride_2: int32*m)], [], type="auto")}\n  buffer_map = {X_1: X, scan_2: scan, scan_3: scan_1}\n  preflattened_buffer_map = {X_1: X_3: Buffer(X_2, float32, [m, n: int32], [stride, stride_3: int32], type="auto"), scan_2: scan_6: Buffer(scan_4, float32, [m, n], [stride_1, stride_4: int32], type="auto"), scan_3: scan_7: Buffer(scan_5, float32, [m, l: int32], [stride_2, stride_5: int32], type="auto")} {\n  for (i: int32, 0, n) {\n    scan[(i*stride_4)] = X[(i*stride_3)]\n  }\n  for (i_1: int32, 0, l) {\n    scan_1[(i_1*stride_5)] = 0f32\n  }\n  for (scan.idx: int32, 0, (m - 1)) {\n    for (i_2: int32, 0, n) {\n      let cse_var_1: int32 = (scan.idx + 1)\n      scan[((cse_var_1*stride_1) + (i_2*stride_4))] = (scan[((scan.idx*stride_1) + (i_2*stride_4))] + X[((cse_var_1*stride) + (i_2*stride_3))])\n    }\n    for (i_3: int32, 0, l) {\n      scan_1[(((scan.idx + 1)*stride_2) + (i_3*stride_5))] = (scan_1[((scan.idx*stride_2) + (i_3*stride_5))] + scan[(scan.idx*stride_1)])\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u603B\u7ED3",children:"\u603B\u7ED3"}),"\n",(0,a.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u6F14\u793A\u4E86\u5982\u4F55\u4F7F\u7528\u7EBF\u6027\u539F\u8BED\u3002"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u7528 init \u548C update \u63CF\u8FF0\u7EBF\u6027\u3002"}),"\n",(0,a.jsx)(n.li,{children:"\u5C06\u7EBF\u6027\u5355\u5143\u5F53\u4F5C\u6B63\u5E38 schedule \u8FDB\u884C\u8C03\u5EA6\u3002"}),"\n",(0,a.jsx)(n.li,{children:"\u5BF9\u4E8E\u590D\u6742\u7684\u5DE5\u4F5C\u8D1F\u8F7D\uFF0C\u5728\u7EBF\u6027\u5355\u5143\u4E2D\u4F7F\u7528\u591A\u4E2A\u72B6\u6001\u548C\u6B65\u9AA4\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/8c7d8fd6a4b93bcff1f5573943dd02f4/scan.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Ascan.py"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/729378592a96230b4f7be71b44da43a4/scan.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Ascan.ipynb"})})]})}function _(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},21494:function(e,n,t){t.d(n,{Z:function(){return d},a:function(){return r}});var s=t(39546);let a={},i=s.createContext(a);function r(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);