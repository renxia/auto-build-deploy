"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["15105"],{80612:function(t,e,n){n.r(e),n.d(e,{default:()=>m,frontMatter:()=>l,metadata:()=>a,assets:()=>i,toc:()=>d,contentTitle:()=>s});var a=JSON.parse('{"id":"how_to/compile/compile_darknet","title":"\u5728 DarkNet \u6A21\u578B\u4E2D\u7F16\u8BD1 YOLO-V2 \u548C YOLO-V3","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/docs/how_to/compile/08-compile_darknet.md","sourceDirName":"how_to/compile","slug":"/how_to/compile/compile_darknet","permalink":"/docs/tvm-cn/docs/how_to/compile/compile_darknet","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/docs/how_to/compile/08-compile_darknet.md","tags":[],"version":"current","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":8,"frontMatter":{"title":"\u5728 DarkNet \u6A21\u578B\u4E2D\u7F16\u8BD1 YOLO-V2 \u548C YOLO-V3"},"sidebar":"tutorialSidebar","previous":{"title":"\u7F16\u8BD1 CoreML \u6A21\u578B","permalink":"/docs/tvm-cn/docs/how_to/compile/compile_coreml"},"next":{"title":"\u7F16\u8BD1 PaddlePaddle \u6A21\u578B","permalink":"/docs/tvm-cn/docs/how_to/compile/compile_paddlepaddle"}}'),o=n("74132"),r=n("21494");let l={title:"\u5728 DarkNet \u6A21\u578B\u4E2D\u7F16\u8BD1 YOLO-V2 \u548C YOLO-V3"},s="\u5728 DarkNet \u6A21\u578B\u4E2D\u7F16\u8BD1 YOLO-V2 \u548C YOLO-V3",i={},d=[{value:"\u9009\u62E9\u6A21\u578B",id:"\u9009\u62E9\u6A21\u578B",level:2},{value:"\u4E0B\u8F7D\u6240\u9700\u6587\u4EF6",id:"\u4E0B\u8F7D\u6240\u9700\u6587\u4EF6",level:2},{value:"\u5C06\u8BA1\u7B97\u56FE\u5BFC\u5165\u5230 Relay \u4E2D",id:"\u5C06\u8BA1\u7B97\u56FE\u5BFC\u5165\u5230-relay-\u4E2D",level:2},{value:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF",id:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF",level:2},{value:"\u5728 TVM Runtime \u4E0A\u6267\u884C",id:"\u5728-tvm-runtime-\u4E0A\u6267\u884C",level:2}];function p(t){let e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"\u5728-darknet-\u6A21\u578B\u4E2D\u7F16\u8BD1-yolo-v2-\u548C-yolo-v3",children:"\u5728 DarkNet \u6A21\u578B\u4E2D\u7F16\u8BD1 YOLO-V2 \u548C YOLO-V3"})}),"\n",(0,o.jsx)(e.admonition,{type:"note",children:(0,o.jsxs)(e.p,{children:["\u5355\u51FB ",(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/how_to/compile_models/from_darknet.html#sphx-glr-download-how-to-compile-models-from-darknet-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,o.jsx)(e.a,{href:"https://siju-samuel.github.io/",children:"Siju Samuel"})]}),"\n",(0,o.jsx)(e.p,{children:"\u672C\u6587\u4ECB\u7ECD\u5982\u4F55\u7528 TVM \u90E8\u7F72 DarkNet \u6A21\u578B\u3002\u6240\u6709\u5FC5\u9700\u7684\u6A21\u578B\u548C\u5E93\u90FD\u53EF\u901A\u8FC7\u811A\u672C\u4ECE Internet \u4E0B\u8F7D\u3002\u6B64\u811A\u672C\u8FD0\u884C\u5E26\u6709\u8FB9\u754C\u6846\u7684 YOLO-V2 \u548C YOLO-V3 \u6A21\u578B\u3002DarkNet \u89E3\u6790\u4F9D\u8D56 CFFI \u548C CV2 \u5E93\uFF0C\u56E0\u6B64\u6267\u884C\u811A\u672C\u524D\u8981\u5B89\u88C5\u8FD9\u4E24\u4E2A\u5E93\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"pip install cffi opencv-python\n"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"# numpy \u548C matplotlib\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sys\n\n# tvm \u548C relay\nimport tvm\nfrom tvm import te\nfrom tvm import relay\nfrom ctypes import *\nfrom tvm.contrib.download import download_testdata\nfrom tvm.relay.testing.darknet import __darknetffi__\nimport tvm.relay.testing.yolo_detection\nimport tvm.relay.testing.darknet\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u9009\u62E9\u6A21\u578B",children:"\u9009\u62E9\u6A21\u578B"}),"\n",(0,o.jsx)(e.p,{children:"\u6A21\u578B\u6709\uFF1A\u2018yolov2\u2019\u3001\u2018yolov3\u2019 \u6216 \u2018yolov3-tiny\u2019"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'# \u6A21\u578B\u540D\u79F0\nMODEL_NAME = "yolov3"\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u4E0B\u8F7D\u6240\u9700\u6587\u4EF6",children:"\u4E0B\u8F7D\u6240\u9700\u6587\u4EF6"}),"\n",(0,o.jsx)(e.p,{children:"\u7B2C\u4E00\u6B21\u7F16\u8BD1\u7684\u8BDD\u9700\u8981\u4E0B\u8F7D cfg \u548C weights \u6587\u4EF6\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'CFG_NAME = MODEL_NAME + ".cfg"\nWEIGHTS_NAME = MODEL_NAME + ".weights"\nREPO_URL = "https://github.com/dmlc/web-data/blob/main/darknet/"\nCFG_URL = REPO_URL + "cfg/" + CFG_NAME + "?raw=true"\nWEIGHTS_URL = "https://pjreddie.com/media/files/" + WEIGHTS_NAME\n\ncfg_path = download_testdata(CFG_URL, CFG_NAME, module="darknet")\nweights_path = download_testdata(WEIGHTS_URL, WEIGHTS_NAME, module="darknet")\n\n# \u4E0B\u8F7D\u5E76\u52A0\u8F7D DarkNet \u5E93\nif sys.platform in ["linux", "linux2"]:\n    DARKNET_LIB = "libdarknet2.0.so"\n    DARKNET_URL = REPO_URL + "lib/" + DARKNET_LIB + "?raw=true"\nelif sys.platform == "darwin":\n    DARKNET_LIB = "libdarknet_mac2.0.so"\n    DARKNET_URL = REPO_URL + "lib_osx/" + DARKNET_LIB + "?raw=true"\nelse:\n    err = "Darknet lib is not supported on {} platform".format(sys.platform)\n    raise NotImplementedError(err)\n\nlib_path = download_testdata(DARKNET_URL, DARKNET_LIB, module="darknet")\n\nDARKNET_LIB = __darknetffi__.dlopen(lib_path)\nnet = DARKNET_LIB.load_network(cfg_path.encode("utf-8"), weights_path.encode("utf-8"), 0)\ndtype = "float32"\nbatch_size = 1\n\ndata = np.empty([batch_size, net.c, net.h, net.w], dtype)\nshape_dict = {"data": data.shape}\nprint("Converting darknet to relay functions...")\nmod, params = relay.frontend.from_darknet(net, dtype=dtype, shape=data.shape)\n'})}),"\n",(0,o.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"Converting darknet to relay functions...\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u5C06\u8BA1\u7B97\u56FE\u5BFC\u5165\u5230-relay-\u4E2D",children:"\u5C06\u8BA1\u7B97\u56FE\u5BFC\u5165\u5230 Relay \u4E2D"}),"\n",(0,o.jsx)(e.p,{children:"\u7F16\u8BD1\u6A21\u578B\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'target = tvm.target.Target("llvm", host="llvm")\ndev = tvm.cpu(0)\ndata = np.empty([batch_size, net.c, net.h, net.w], dtype)\nshape = {"data": data.shape}\nprint("Compiling the model...")\nwith tvm.transform.PassContext(opt_level=3):\n    lib = relay.build(mod, target=target, params=params)\n\n[neth, netw] = shape["data"][2:]  # \u5F53\u524D\u56FE\u50CF shape \u662F 608x608\n'})}),"\n",(0,o.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'Compiling the model...\n/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF",children:"\u52A0\u8F7D\u6D4B\u8BD5\u56FE\u50CF"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'test_image = "dog.jpg"\nprint("Loading the test image...")\nimg_url = REPO_URL + "data/" + test_image + "?raw=true"\nimg_path = download_testdata(img_url, test_image, "data")\n\ndata = tvm.relay.testing.darknet.load_image(img_path, netw, neth)\n'})}),"\n",(0,o.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"Loading the test image...\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u5728-tvm-runtime-\u4E0A\u6267\u884C",children:"\u5728 TVM Runtime \u4E0A\u6267\u884C"}),"\n",(0,o.jsx)(e.p,{children:"\u8FD9\u4E2A\u8FC7\u7A0B\u4E0E\u5176\u4ED6\u793A\u4F8B\u7684\u76F8\u540C\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'from tvm.contrib import graph_executor\n\nm = graph_executor.GraphModule(lib["default"](dev))\n\n# \u8BBE\u7F6E\u8F93\u5165\nm.set_input("data", tvm.nd.array(data.astype(dtype)))\n# \u6267\u884C\nprint("Running the test image...")\n\n# \u68C0\u6D4B\n# \u9608\u503C\nthresh = 0.5\nnms_thresh = 0.45\n\nm.run()\n# \u5F97\u5230\u8F93\u51FA\ntvm_out = []\nif MODEL_NAME == "yolov2":\n    layer_out = {}\n    layer_out["type"] = "Region"\n    # \u83B7\u53D6\u533A\u57DF\u5C42\u5C5E\u6027\uFF08n\u3001out_c\u3001out_h\u3001out_w\u3001classes\u3001coords \u548C background\uFF09\n    layer_attr = m.get_output(2).numpy()\n    layer_out["biases"] = m.get_output(1).numpy()\n    out_shape = (layer_attr[0], layer_attr[1] // layer_attr[0], layer_attr[2], layer_attr[3])\n    layer_out["output"] = m.get_output(0).numpy().reshape(out_shape)\n    layer_out["classes"] = layer_attr[4]\n    layer_out["coords"] = layer_attr[5]\n    layer_out["background"] = layer_attr[6]\n    tvm_out.append(layer_out)\nelif MODEL_NAME == "yolov3":\n    for i in range(3):\n        layer_out = {}\n        layer_out["type"] = "Yolo"\n        # \u83B7\u53D6 yolo \u5C42\u5C5E\u6027\uFF08n\u3001out_c\u3001out_h\u3001out_w\u3001classes \u548C total\uFF09\n        layer_attr = m.get_output(i * 4 + 3).numpy()\n        layer_out["biases"] = m.get_output(i * 4 + 2).numpy()\n        layer_out["mask"] = m.get_output(i * 4 + 1).numpy()\n        out_shape = (layer_attr[0], layer_attr[1] // layer_attr[0], layer_attr[2], layer_attr[3])\n        layer_out["output"] = m.get_output(i * 4).numpy().reshape(out_shape)\n        layer_out["classes"] = layer_attr[4]\n        tvm_out.append(layer_out)\nelif MODEL_NAME == "yolov3-tiny":\n    for i in range(2):\n        layer_out = {}\n        layer_out["type"] = "Yolo"\n        # \u83B7\u53D6 yolo \u5C42\u5C5E\u6027\uFF08n\u3001out_c\u3001out_h\u3001out_w\u3001classes \u548C total\uFF09\n        layer_attr = m.get_output(i * 4 + 3).numpy()\n        layer_out["biases"] = m.get_output(i * 4 + 2).numpy()\n        layer_out["mask"] = m.get_output(i * 4 + 1).numpy()\n        out_shape = (layer_attr[0], layer_attr[1] // layer_attr[0], layer_attr[2], layer_attr[3])\n        layer_out["output"] = m.get_output(i * 4).numpy().reshape(out_shape)\n        layer_out["classes"] = layer_attr[4]\n        tvm_out.append(layer_out)\n        thresh = 0.560\n\n# \u68C0\u6D4B\uFF0C\u5E76\u753B\u51FA\u8FB9\u754C\u6846\nimg = tvm.relay.testing.darknet.load_image_color(img_path)\n_, im_h, im_w = img.shape\ndets = tvm.relay.testing.yolo_detection.fill_network_boxes(\n    (netw, neth), (im_w, im_h), thresh, 1, tvm_out\n)\nlast_layer = net.layers[net.n - 1]\ntvm.relay.testing.yolo_detection.do_nms_sort(dets, last_layer.classes, nms_thresh)\n\ncoco_name = "coco.names"\ncoco_url = REPO_URL + "data/" + coco_name + "?raw=true"\nfont_name = "arial.ttf"\nfont_url = REPO_URL + "data/" + font_name + "?raw=true"\ncoco_path = download_testdata(coco_url, coco_name, module="data")\nfont_path = download_testdata(font_url, font_name, module="data")\n\nwith open(coco_path) as f:\n    content = f.readlines()\n\nnames = [x.strip() for x in content]\n\ntvm.relay.testing.yolo_detection.show_detections(img, dets, thresh, names, last_layer.classes)\ntvm.relay.testing.yolo_detection.draw_detections(\n    font_path, img, dets, thresh, names, last_layer.classes\n)\nplt.imshow(img.transpose(1, 2, 0))\nplt.show()\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:"https://tvm.apache.org/docs/_images/sphx_glr_from_darknet_001.png",alt:"from darknet"})}),"\n",(0,o.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"Running the test image...\nclass:['dog 0.994'] left:127 top:227 right:316 bottom:533\nclass:['truck 0.9266'] left:471 top:83 right:689 bottom:169\nclass:['bicycle 0.9984'] left:111 top:113 right:577 bottom:447\n"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"\u811A\u672C\u603B\u8FD0\u884C\u65F6\u957F\uFF1A"}),"\uFF081 \u5206 1.020 \u79D2\uFF09"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/7716f96385bd5abb6e822041e285be54/from_darknet.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Afrom_darknet.py"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/f97d815b408ef3f4d6bcb3e073c2d4dd/from_darknet.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Afrom_darknet.ipynb"})})]})}function m(t={}){let{wrapper:e}={...(0,r.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(p,{...t})}):p(t)}},21494:function(t,e,n){n.d(e,{Z:function(){return s},a:function(){return l}});var a=n(39546);let o={},r=a.createContext(o);function l(t){let e=a.useContext(r);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:l(t.components),a.createElement(r.Provider,{value:e},t.children)}}}]);