"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["11645"],{84632:function(t,e,n){n.r(e),n.d(e,{default:()=>p,frontMatter:()=>i,metadata:()=>r,assets:()=>c,toc:()=>l,contentTitle:()=>a});var r=JSON.parse('{"id":"how_to/microtvm/micro_pytorch","title":"4. microTVM PyTorch \u6559\u7A0B","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/docs/how_to/microtvm/08-micro_pytorch.md","sourceDirName":"how_to/microtvm","slug":"/how_to/microtvm/micro_pytorch","permalink":"/docs/tvm-cn/docs/how_to/microtvm/micro_pytorch","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/docs/how_to/microtvm/08-micro_pytorch.md","tags":[],"version":"current","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":8,"frontMatter":{"title":"4. microTVM PyTorch \u6559\u7A0B"},"sidebar":"tutorialSidebar","previous":{"title":"1. microRVM CLI \u5DE5\u5177","permalink":"/docs/tvm-cn/docs/how_to/microtvm/tvmc_micro"},"next":{"title":"8. \u521B\u5EFA\u4F7F\u7528 microTVM \u7684 MLPerfTiny \u63D0\u4EA4","permalink":"/docs/tvm-cn/docs/how_to/microtvm/micro_mlperftiny"}}'),o=n("74132"),s=n("21494");let i={title:"4. microTVM PyTorch \u6559\u7A0B"},a="4. microTVM PyTorch \u6559\u7A0B",c={},l=[{value:"\u5B89\u88C5 microTVM Python \u4F9D\u8D56\u9879",id:"\u5B89\u88C5-microtvm-python-\u4F9D\u8D56\u9879",level:2},{value:"\u52A0\u8F7D\u9884\u8BAD\u7EC3 PyTorch \u6A21\u578B",id:"\u52A0\u8F7D\u9884\u8BAD\u7EC3-pytorch-\u6A21\u578B",level:2},{value:"\u5B9A\u4E49\u76EE\u6807\u3001\u8FD0\u884C\u65F6\u4E0E\u6267\u884C\u5668",id:"\u5B9A\u4E49\u76EE\u6807\u8FD0\u884C\u65F6\u4E0E\u6267\u884C\u5668",level:2},{value:"\u7F16\u8BD1\u6A21\u578B",id:"\u7F16\u8BD1\u6A21\u578B",level:2},{value:"\u521B\u5EFA microTVM \u9879\u76EE",id:"\u521B\u5EFA-microtvm-\u9879\u76EE",level:2},{value:"\u6784\u5EFA\u3001\u70E7\u5F55\u548C\u6267\u884C\u6A21\u578B",id:"\u6784\u5EFA\u70E7\u5F55\u548C\u6267\u884C\u6A21\u578B",level:2},{value:"\u67E5\u8BE2 Synset \u540D\u79F0",id:"\u67E5\u8BE2-synset-\u540D\u79F0",level:2}];function m(t){let e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.admonition,{type:"note",children:(0,o.jsxs)(e.p,{children:["\u5355\u51FB ",(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/v0.13.0/how_to/work_with_microtvm/micro_pytorch.html#sphx-glr-download-how-to-work-with-microtvm-micro-pytorch-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"4-microtvm-pytorch-\u6559\u7A0B",children:"4. microTVM PyTorch \u6559\u7A0B"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"\u4F5C\u8005\uFF1A"}),(0,o.jsx)(e.a,{href:"https://github.com/mehrdadh",children:"Mehrdad Hessar"})]}),"\n",(0,o.jsx)(e.p,{children:"\u8BE5\u6559\u7A0B\u5C55\u793A\u4E86\u5982\u4F55\u4F7F\u7528 PyTorch \u6A21\u578B\u8FDB\u884C microTVM \u4E3B\u673A\u9A71\u52A8\u7684 AOT \u7F16\u8BD1\u3002\u6B64\u6559\u7A0B\u53EF\u4EE5\u5728\u4F7F\u7528 C \u8FD0\u884C\u65F6\uFF08CRT\uFF09\u7684 x86 CPU \u4E0A\u6267\u884C\u3002"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"\u6CE8\u610F\uFF1A"})," \u6B64\u6559\u7A0B\u4EC5\u5728\u4F7F\u7528 CRT \u7684 x86 CPU \u4E0A\u8FD0\u884C\uFF0C\u4E0D\u652F\u6301\u5728 Zephyr \u4E0A\u8FD0\u884C\uFF0C\u56E0\u4E3A\u8BE5\u6A21\u578B\u4E0D\u9002\u7528\u4E8E\u6211\u4EEC\u5F53\u524D\u652F\u6301\u7684 Zephyr \u5355\u677F\u3002"]}),"\n",(0,o.jsx)(e.h2,{id:"\u5B89\u88C5-microtvm-python-\u4F9D\u8D56\u9879",children:"\u5B89\u88C5 microTVM Python \u4F9D\u8D56\u9879"}),"\n",(0,o.jsx)(e.p,{children:"TVM \u4E0D\u5305\u542B\u7528\u4E8E Python \u4E32\u884C\u901A\u4FE1\u5305\uFF0C\u56E0\u6B64\u5728\u4F7F\u7528 microTVM \u4E4B\u524D\u6211\u4EEC\u5FC5\u987B\u5148\u5B89\u88C5\u4E00\u4E2A\u3002\u6211\u4EEC\u8FD8\u9700\u8981TFLite\u6765\u52A0\u8F7D\u6A21\u578B\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"pip install pyserial==3.5 tflite==2.1\n"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"import pathlib\nimport torch\nimport torchvision\nfrom torchvision import transforms\nimport numpy as np\nfrom PIL import Image\n\nimport tvm\nfrom tvm import relay\nfrom tvm.contrib.download import download_testdata\nfrom tvm.relay.backend import Executor\nimport tvm.micro.testing\n\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u52A0\u8F7D\u9884\u8BAD\u7EC3-pytorch-\u6A21\u578B",children:"\u52A0\u8F7D\u9884\u8BAD\u7EC3 PyTorch \u6A21\u578B"}),"\n",(0,o.jsx)(e.p,{children:"\u9996\u5148\uFF0C\u4ECE torchvision \u4E2D\u52A0\u8F7D\u9884\u8BAD\u7EC3\u7684 MobileNetV2 \u6A21\u578B\u3002\u7136\u540E\uFF0C\u4E0B\u8F7D\u4E00\u5F20\u732B\u7684\u56FE\u50CF\u5E76\u8FDB\u884C\u9884\u5904\u7406\uFF0C\u4EE5\u4FBF\u7528\u4F5C\u6A21\u578B\u7684\u8F93\u5165\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'model = torchvision.models.quantization.mobilenet_v2(weights="DEFAULT", quantize=True)\nmodel = model.eval()\n\ninput_shape = [1, 3, 224, 224]\ninput_data = torch.randn(input_shape)\nscripted_model = torch.jit.trace(model, input_data).eval()\n\nimg_url = "https://github.com/dmlc/mxnet.js/blob/main/data/cat.png?raw=true"\nimg_path = download_testdata(img_url, "cat.png", module="data")\nimg = Image.open(img_path).resize((224, 224))\n\n# \u9884\u5904\u7406\u56FE\u7247\u5E76\u8F6C\u6362\u4E3A\u5F20\u91CF\nmy_preprocess = transforms.Compose(\n    [\n        transforms.Resize(256),\n        transforms.CenterCrop(224),\n        transforms.ToTensor(),\n        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\n    ]\n)\nimg = my_preprocess(img)\nimg = np.expand_dims(img, 0)\n\ninput_name = "input0"\nshape_list = [(input_name, input_shape)]\nrelay_mod, params = relay.frontend.from_pytorch(scripted_model, shape_list)\n\n'})}),"\n",(0,o.jsx)(e.p,{children:"\u8F93\u51FA\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'/venv/apache-tvm-py3.8/lib/python3.8/site-packages/torch/ao/quantization/utils.py:310: UserWarning: must run observer before calling calculate_qparams. Returning default values.\n  warnings.warn(\nDownloading: "https://download.pytorch.org/models/quantized/mobilenet_v2_qnnpack_37f702c5.pth" to /workspace/.cache/torch/hub/checkpoints/mobilenet_v2_qnnpack_37f702c5.pth\n\n  0%|          | 0.00/3.42M [00:00<?, ?B/s]\n 61%|######    | 2.09M/3.42M [00:00<00:00, 11.6MB/s]\n100%|##########| 3.42M/3.42M [00:00<00:00, 18.5MB/s]\n/venv/apache-tvm-py3.8/lib/python3.8/site-packages/torch/_utils.py:314: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()\n  device=storage.device,\n/workspace/python/tvm/relay/frontend/pytorch_utils.py:47: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.\n  return LooseVersion(torch_ver) > ver\n/venv/apache-tvm-py3.8/lib/python3.8/site-packages/setuptools/_distutils/version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.\n  other = LooseVersion(other)\n\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u5B9A\u4E49\u76EE\u6807\u8FD0\u884C\u65F6\u4E0E\u6267\u884C\u5668",children:"\u5B9A\u4E49\u76EE\u6807\u3001\u8FD0\u884C\u65F6\u4E0E\u6267\u884C\u5668"}),"\n",(0,o.jsxs)(e.p,{children:["\u5728\u672C\u6559\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528 AOT \u4E3B\u673A\u9A71\u52A8\u6267\u884C\u5668\u3002\u4E3A\u4E86\u5728 x86 \u673A\u5668\u4E0A\u5BF9\u5D4C\u5165\u5F0F\u6A21\u62DF\u73AF\u5883\u7F16\u8BD1\u6A21\u578B\uFF0C\u6211\u4EEC\u4F7F\u7528 C \u8FD0\u884C\u65F6\uFF08CRT\uFF09\uFF0C\u5E76\u4F7F\u7528\u4E3B\u673A\u5FAE\u578B\u76EE\u6807\u3002\u4F7F\u7528\u8BE5\u8BBE\u7F6E\uFF0CTVM \u4E3A C \u8FD0\u884C\u65F6\u7F16\u8BD1\u53EF\u4EE5\u5728 x86 CPU \u673A\u5668\u4E0A\u8FD0\u884C\u7684\u6A21\u578B\uFF0C\u53EF\u4EE5\u5728\u7269\u7406\u5FAE\u63A7\u5236\u5668\u4E0A\u8FD0\u884C\u7684\u76F8\u540C\u6D41\u7A0B\u3002CRT \u4F7F\u7528 ",(0,o.jsx)(e.code,{children:"src/runtime/crt/host/main.cc"})," \u4E2D\u7684 main()\u3002\u8981\u4F7F\u7528\u7269\u7406\u786C\u4EF6\uFF0C\u8BF7\u5C06 board \u66FF\u6362\u4E3A\u53E6\u4E00\u4E2A\u7269\u7406\u5FAE\u578B\u76EE\u6807\uFF0C\u4F8B\u5982 ",(0,o.jsx)(e.code,{children:"nrf5340dk_nrf5340_cpuapp"})," \u6216 ",(0,o.jsx)(e.code,{children:"mps2_an521"}),"\uFF0C\u5E76\u5C06\u5E73\u53F0\u7C7B\u578B\u66F4\u6539\u4E3A Zephyr\u3002\u5728\u300A",(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/v0.13.0/how_to/work_with_microtvm/micro_train.html#tutorial-micro-train-arduino",children:"\u4E3A Arduino \u4E0A\u7684 microTVM \u8BAD\u7EC3\u89C6\u89C9\u6A21\u578B"}),"\u300B\u548C\u300A",(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/v0.13.0/how_to/work_with_microtvm/micro_tflite.html#tutorial-micro-tflite",children:"microTVM TFLite \u6559\u7A0B"}),"\u300B\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230 \u66F4\u591A\u76EE\u6807\u793A\u4F8B\u3002"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'target = tvm.micro.testing.get_target(platform="crt", board=None)\n\n# \u4F7F\u7528 C \u8FD0\u884C\u65F6 (crt) \u5E76\u901A\u8FC7\u8BBE\u7F6E system-lib \u4E3A True \u6253\u5F00\u9759\u6001\u94FE\u63A5\nruntime = tvm.relay.backend.Runtime("crt", {"system-lib": True})\n\n# \u4F7F\u7528 AOT \u6267\u884C\u5668\u4EE3\u66FF\u56FE\u6216 vm \u6267\u884C\u5668\u3002\u4E0D\u8981\u4F7F\u7528\u672A\u5305\u88C5\u7684 API \u6216 C \u98CE\u683C\u8C03\u7528\nexecutor = Executor("aot")\n\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u7F16\u8BD1\u6A21\u578B",children:"\u7F16\u8BD1\u6A21\u578B"}),"\n",(0,o.jsx)(e.p,{children:"\u73B0\u5728\u4E3A\u76EE\u6807\u7F16\u8BD1\u6A21\u578B\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'with tvm.transform.PassContext(\n    opt_level=3,\n    config={"tir.disable_vectorize": True},\n):\n    module = tvm.relay.build(\n        relay_mod, target=target, runtime=runtime, executor=executor, params=params\n    )\n\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u521B\u5EFA-microtvm-\u9879\u76EE",children:"\u521B\u5EFA microTVM \u9879\u76EE"}),"\n",(0,o.jsx)(e.p,{children:"\u73B0\u5728\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5C06\u7F16\u8BD1\u597D\u7684\u6A21\u578B\u4F5C\u4E3A IRModule \u51C6\u5907\u597D\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u56FA\u4EF6\u9879\u76EE\uFF0C\u4EE5\u4FBF\u5728 microTVM \u4E2D\u4F7F\u7528\u7F16\u8BD1\u597D\u7684\u6A21\u578B\u3002\u4E3A\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528 Project API\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'template_project_path = pathlib.Path(tvm.micro.get_microtvm_template_projects("crt"))\nproject_options = {"verbose": False, "workspace_size_bytes": 6 * 1024 * 1024}\n\ntemp_dir = tvm.contrib.utils.tempdir() / "project"\nproject = tvm.micro.generate_project(\n    str(template_project_path),\n    module,\n    temp_dir,\n    project_options,\n)\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u6784\u5EFA\u70E7\u5F55\u548C\u6267\u884C\u6A21\u578B",children:"\u6784\u5EFA\u3001\u70E7\u5F55\u548C\u6267\u884C\u6A21\u578B"}),"\n",(0,o.jsxs)(e.p,{children:["\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u6784\u5EFA microTVM\u9879 \u76EE\u5E76\u8FDB\u884C\u70E7\u5F55\u3002\u70E7\u5F55\u6B65\u9AA4\u7279\u5B9A\u4E8E\u7269\u7406\u5FAE\u63A7\u5236\u5668\uFF0C\u5982\u679C\u901A\u8FC7\u4E3B\u673A\u7684  ",(0,o.jsx)(e.code,{children:"main.cc"})," \u6A21\u62DF\u5FAE\u63A7\u5236\u5668\uFF0C\u6216\u8005\u9009\u62E9 Zephyr \u6A21\u62DF\u5355\u677F\u4F5C\u4E3A\u76EE\u6807\uFF0C\u5219\u4F1A\u8DF3\u8FC7\u8BE5\u6B65\u9AA4\u3002"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'project.build()\nproject.flash()\n\ninput_data = {input_name: tvm.nd.array(img.astype("float32"))}\nwith tvm.micro.Session(project.transport()) as session:\n    aot_executor = tvm.runtime.executor.aot_executor.AotModule(session.create_aot_executor())\n    aot_executor.set_input(**input_data)\n    aot_executor.run()\n    result = aot_executor.get_output(0).numpy()\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u67E5\u8BE2-synset-\u540D\u79F0",children:"\u67E5\u8BE2 Synset \u540D\u79F0"}),"\n",(0,o.jsx)(e.p,{children:"\u67E5\u8BE2\u5728 1000 \u4E2A\u7C7B\u522B Synset \u4E2D\u7684 top-1 \u7684\u9884\u6D4B\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'synset_url = (\n    "https://raw.githubusercontent.com/Cadene/"\n    "pretrained-models.pytorch/master/data/"\n    "imagenet_synsets.txt"\n)\nsynset_name = "imagenet_synsets.txt"\nsynset_path = download_testdata(synset_url, synset_name, module="data")\nwith open(synset_path) as f:\n    synsets = f.readlines()\n\nsynsets = [x.strip() for x in synsets]\nsplits = [line.split(" ") for line in synsets]\nkey_to_classname = {spl[0]: " ".join(spl[1:]) for spl in splits}\n\nclass_url = (\n    "https://raw.githubusercontent.com/Cadene/"\n    "pretrained-models.pytorch/master/data/"\n    "imagenet_classes.txt"\n)\nclass_path = download_testdata(class_url, "imagenet_classes.txt", module="data")\nwith open(class_path) as f:\n    class_id_to_key = f.readlines()\n\nclass_id_to_key = [x.strip() for x in class_id_to_key]\n\n# Get top-1 result for TVM\ntop1_tvm = np.argmax(result)\ntvm_class_key = class_id_to_key[top1_tvm]\n\n# Convert input to PyTorch variable and get PyTorch result for comparison\nwith torch.no_grad():\n    torch_img = torch.from_numpy(img)\n    output = model(torch_img)\n\n    # Get top-1 result for PyTorch\n    top1_torch = np.argmax(output.numpy())\n    torch_class_key = class_id_to_key[top1_torch]\n\nprint("Relay top-1 id: {}, class name: {}".format(top1_tvm, key_to_classname[tvm_class_key]))\nprint("Torch top-1 id: {}, class name: {}".format(top1_torch, key_to_classname[torch_class_key]))\n\n'})}),"\n",(0,o.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Relay top-1 id: 282, class name: tiger cat\nTorch top-1 id: 282, class name: tiger cat\n"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"\u8BE5\u811A\u672C\u603B\u8FD0\u884C\u65F6\u95F4\uFF1A"}),"\uFF081\u520626.552\u79D2\uFF09"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/v0.13.0/_downloads/12b9ecc04c41abaa12022061771821d1/micro_pytorch.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Amicro_pytorch.py"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://tvm.apache.org/docs/v0.13.0/_downloads/09df7d9b9c90a2a1bdd570520693fd9f/micro_pytorch.ipynb",children:"\u4E0B\u8F7D Jupyter notebook\uFF1Amicro_pytorch.ipynb"})})]})}function p(t={}){let{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(m,{...t})}):m(t)}},21494:function(t,e,n){n.d(e,{Z:function(){return a},a:function(){return i}});var r=n(39546);let o={},s=r.createContext(o);function i(t){let e=r.useContext(s);return r.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:i(t.components),r.createElement(s.Provider,{value:e},t.children)}}}]);