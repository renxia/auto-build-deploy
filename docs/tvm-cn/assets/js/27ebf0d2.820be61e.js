"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["41563"],{77286:function(e,n,r){r.r(n),r.d(n,{default:()=>u,frontMatter:()=>s,metadata:()=>c,assets:()=>o,toc:()=>l,contentTitle:()=>d});var c=JSON.parse('{"id":"dev/how_to/relay_bring_your_own_codegen","title":"\u5411 TVM \u4E2D\u6DFB\u52A0 Codegen","description":"\u968F\u7740\u6DF1\u5EA6\u5B66\u4E60\u5DE5\u4F5C\u8D1F\u8F7D\u6240\u9488\u5BF9\u7684\u786C\u4EF6\u8BBE\u5907\u6570\u91CF\u4E0D\u65AD\u589E\u52A0\uFF0C\u7528\u6237\u5728\u5404\u79CD\u8BBE\u5907\u4E0A\u5B9E\u73B0\u9AD8\u6027\u80FD\u6240\u9700\u7684\u77E5\u8BC6\u4E5F\u5728\u4E0D\u65AD\u589E\u52A0\u3002\u4E3A\u4E86\u8BA9\u6570\u636E\u79D1\u5B66\u5BB6\u5728\u5F00\u53D1\u65B0\u6A21\u578B\u65F6\u4E0D\u5FC5\u62C5\u5FC3\u6027\u80FD\u95EE\u9898\uFF0C\u786C\u4EF6\u5382\u5546\u6216\u662F\u57FA\u4E8E\u4E00\u4E9B\u5E38\u89C1\u7684\u6DF1\u5EA6\u5B66\u4E60\u7B97\u5B50\uFF0C\u63D0\u4F9B MKLDNN \u6216 cuDNN \u7B49\u5E93\uFF0C\u6216\u662F\u63D0\u4F9B TensorRT \u7B49\u6846\u67B6\uFF0C\u8BA9\u7528\u6237\u6309\u7167\u67D0\u79CD\u65B9\u5F0F\u63CF\u8FF0\u6A21\u578B\uFF0C\u4ECE\u800C\u63D0\u9AD8\u6A21\u578B\u6027\u80FD\u3002","source":"@site/docs/dev/how_to/04-relay_bring_your_own_codegen.md","sourceDirName":"dev/how_to","slug":"/dev/how_to/relay_bring_your_own_codegen","permalink":"/docs/tvm-cn/docs/dev/how_to/relay_bring_your_own_codegen","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/docs/dev/how_to/04-relay_bring_your_own_codegen.md","tags":[],"version":"current","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":4,"frontMatter":{"title":"\u5411 TVM \u4E2D\u6DFB\u52A0 Codegen"},"sidebar":"tutorialSidebar","previous":{"title":"\u5411 Relay \u4E2D\u6DFB\u52A0 Compiler Pass","permalink":"/docs/tvm-cn/docs/dev/how_to/relay_add_pass"},"next":{"title":"Python Target \u53C2\u6570\u5316","permalink":"/docs/tvm-cn/docs/dev/how_to/python_target_parametrization"}}'),i=r("74132"),t=r("21494");let s={title:"\u5411 TVM \u4E2D\u6DFB\u52A0 Codegen"},d="\u5411 TVM \u4E2D\u6DFB\u52A0 Codegen",o={},l=[{value:"\u5B9E\u73B0 CodegenC",id:"\u5B9E\u73B0-codegenc",level:2},{value:"\u7B97\u5B50\u7684\u4EE3\u7801\u751F\u6210",id:"\u7B97\u5B50\u7684\u4EE3\u7801\u751F\u6210",level:3},{value:"1. \u751F\u6210\u51FD\u6570\u58F0\u660E",id:"1-\u751F\u6210\u51FD\u6570\u58F0\u660E",level:4},{value:"2. \u751F\u6210\u51FD\u6570\u8C03\u7528",id:"2-\u751F\u6210\u51FD\u6570\u8C03\u7528",level:4},{value:"3. \u751F\u6210\u8F93\u51FA\u6570\u7EC4\uFF08output buffer\uFF09",id:"3-\u751F\u6210\u8F93\u51FA\u6570\u7EC4output-buffer",level:4},{value:"4. \u66F4\u65B0\u8F93\u51FA\u6570\u7EC4",id:"4-\u66F4\u65B0\u8F93\u51FA\u6570\u7EC4",level:4},{value:"\u8F93\u5165\u53D8\u91CF\u7684\u4EE3\u7801\u751F\u6210",id:"\u8F93\u5165\u53D8\u91CF\u7684\u4EE3\u7801\u751F\u6210",level:3},{value:"Code Emitting",id:"code-emitting",level:3},{value:"\u5B9E\u73B0 CSourceCodegen",id:"\u5B9E\u73B0-csourcecodegen",level:4},{value:"\u5B9E\u73B0 GenCFunc",id:"\u5B9E\u73B0-gencfunc",level:4},{value:"\u5B9E\u73B0 CreateCSourceModule",id:"\u5B9E\u73B0-createcsourcemodule",level:4},{value:"\u6CE8\u518C CodegenC",id:"\u6CE8\u518C-codegenc",level:3},{value:"\u4E3A\u8868\u5F81\uFF08Representation\uFF09\u5B9E\u73B0 Codegen",id:"\u4E3A\u8868\u5F81representation\u5B9E\u73B0-codegen",level:2},{value:"\u5B9E\u73B0 ExampleJsonCodeGen",id:"\u5B9E\u73B0-examplejsoncodegen",level:3},{value:"\u5B9E\u73B0\u81EA\u5B9A\u4E49 runtime",id:"\u5B9E\u73B0\u81EA\u5B9A\u4E49-runtime",level:3},{value:"\u5B9E\u73B0\u6784\u9020\u51FD\u6570",id:"\u5B9E\u73B0\u6784\u9020\u51FD\u6570",level:4},{value:"\u5B9E\u73B0 GetFunction",id:"\u5B9E\u73B0-getfunction",level:4},{value:"\u5B9E\u73B0 Run",id:"\u5B9E\u73B0-run",level:4},{value:"\u5B9E\u73B0 SaveToBinary \u548C LoadFromBinary",id:"\u5B9E\u73B0-savetobinary-\u548C-loadfrombinary",level:4},{value:"\u603B\u7ED3",id:"\u603B\u7ED3",level:2}];function a(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\u5411-tvm-\u4E2D\u6DFB\u52A0-codegen",children:"\u5411 TVM \u4E2D\u6DFB\u52A0 Codegen"})}),"\n",(0,i.jsx)(n.p,{children:"\u968F\u7740\u6DF1\u5EA6\u5B66\u4E60\u5DE5\u4F5C\u8D1F\u8F7D\u6240\u9488\u5BF9\u7684\u786C\u4EF6\u8BBE\u5907\u6570\u91CF\u4E0D\u65AD\u589E\u52A0\uFF0C\u7528\u6237\u5728\u5404\u79CD\u8BBE\u5907\u4E0A\u5B9E\u73B0\u9AD8\u6027\u80FD\u6240\u9700\u7684\u77E5\u8BC6\u4E5F\u5728\u4E0D\u65AD\u589E\u52A0\u3002\u4E3A\u4E86\u8BA9\u6570\u636E\u79D1\u5B66\u5BB6\u5728\u5F00\u53D1\u65B0\u6A21\u578B\u65F6\u4E0D\u5FC5\u62C5\u5FC3\u6027\u80FD\u95EE\u9898\uFF0C\u786C\u4EF6\u5382\u5546\u6216\u662F\u57FA\u4E8E\u4E00\u4E9B\u5E38\u89C1\u7684\u6DF1\u5EA6\u5B66\u4E60\u7B97\u5B50\uFF0C\u63D0\u4F9B MKLDNN \u6216 cuDNN \u7B49\u5E93\uFF0C\u6216\u662F\u63D0\u4F9B TensorRT \u7B49\u6846\u67B6\uFF0C\u8BA9\u7528\u6237\u6309\u7167\u67D0\u79CD\u65B9\u5F0F\u63CF\u8FF0\u6A21\u578B\uFF0C\u4ECE\u800C\u63D0\u9AD8\u6A21\u578B\u6027\u80FD\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u7136\u800C\uFF0C\u7528\u6237\u5728\u5C1D\u8BD5\u4F7F\u7528\u65B0\u7684\u5E93\u6216\u8BBE\u5907\u65F6\uFF0C\u5FC5\u987B\u5B66\u4E60\u65B0\u7684\u7F16\u7A0B\u63A5\u53E3\u3002\u56E0\u6B64\uFF0C\u4E00\u4E2A\u7EDF\u4E00\u7684\u7F16\u7A0B\u63A5\u53E3\u53D8\u5F97\u8D8A\u6765\u8D8A\u91CD\u8981\uFF1A1\uFF09\u8BA9\u6240\u6709\u7528\u6237\u53CA\u786C\u4EF6\u5382\u5546\u4FE1\u606F\u540C\u6B65\uFF0C2\uFF09\u63D0\u4F9B\u4E00\u4E2A\u53EF\u884C\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u8BA9\u7279\u5B9A\u786C\u4EF6\u6216\u5E93\u53EA\u652F\u6301\u5177\u6709\u6781\u9AD8\u6027\u80FD\u7684\u3001\u5E7F\u6CDB\u4F7F\u7528\u7684\u7B97\u5B50\uFF0C\u4E0D\u53D7\u652F\u6301\u7684\u7B97\u5B50\u5219\u56DE\u9000\u5230 CPU/GPU \u7B49\u901A\u7528\u8BBE\u5907\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u672C\u5F00\u53D1\u624B\u518C\u6F14\u793A\u4E86\u786C\u4EF6\u5382\u5546\u5982\u4F55\u8F7B\u677E\u5B9E\u73B0\u81EA\u5DF1\u7684 Codegen\uFF0C\u5E76\u5C06\u5176\u6CE8\u518C\u4E3A Relay \u540E\u7AEF\u7F16\u8BD1\u5668\uFF0C\u4ECE\u800C\u652F\u6301\u81EA\u5DF1\u7684\u786C\u4EF6\u8BBE\u5907/\u5E93\u3002\u672C\u624B\u518C\u6DB5\u76D6\u4E86\u4E24\u79CD\u57FA\u4E8E\u4E0D\u540C\u8BA1\u7B97\u56FE\u7684 codegen\uFF1A"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. \u5E0C\u671B\u751F\u6210 C \u4EE3\u7801\u3002"})}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u679C\u4F60\u7684\u786C\u4EF6\u5DF2\u7ECF\u5177\u5907\u4E86\u4E00\u4E2A\u9AD8\u5EA6\u4F18\u5316\u7684 C/C++ \u5E93\uFF0C\u5982\u5BF9\u4E8E CPU \u800C\u8A00\u7684 Intel CBLAS/MKL \u5E93\uFF0C\u6216\u9488\u5BF9 GPU \u800C\u8A00\u7684 NVIDIA CUBLAS \u5E93\uFF0C\u90A3\u4E48\u672C\u8282\u5185\u5BB9\u975E\u5E38\u9002\u5408\u4F60\u3002\u5E78\u8FD0\u7684\u662F\uFF0CC \u6E90\u4EE3\u7801\u6A21\u5757\u4E0E TVM runtime \u6A21\u5757\u5B8C\u5168\u517C\u5BB9\uFF0C\u8FD9\u610F\u5473\u7740\u751F\u6210\u7684\u4EE3\u7801\u53EF\u4EE5\u7531\u4EFB\u4F55\u5177\u6709\u9002\u5F53\u7F16\u8BD1\u6807\u5FD7\u7684 C/C++ \u7F16\u8BD1\u5668\u7F16\u8BD1\uFF0C\u56E0\u6B64\u7528\u6237\u53EA\u9700\u5B9E\u73B0\u4E00\u4E2A\u80FD\u4E3A\u5B50\u56FE\u751F\u6210 C \u4EE3\u7801\u7684 codegen\uFF0C\u5E76\u5C06 C \u6E90\u4EE3\u7801\u6A21\u5757\u96C6\u6210\u5230 TVM runtime \u6A21\u5757\u4E2D\u3002\u4E0B\u4E00\u8282\u5185\u5BB9\u8BB2\u8BE6\u7EC6\u6F14\u793A\u5982\u4F55\u4E3A\u786C\u4EF6\u5B9E\u73B0 C codegen\u3002"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. \u5E0C\u671B\u751F\u6210\u4EFB\u610F\u8BA1\u7B97\u56FE\u3002"})}),"\n",(0,i.jsx)(n.p,{children:"\u6709\u65F6\u5019\uFF0C\u786C\u4EF6\u53EF\u80FD\u9700\u8981\u5176\u4ED6\u5F62\u5F0F\u7684\u8BA1\u7B97\u56FE\u5982 JSON\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u7528\u6237\u4E0D\u4EC5\u8981\u5B9E\u73B0\u4E00\u4E2A codegen\uFF0C\u8FD8\u8981\u5B9E\u73B0\u4E00\u4E2A\u81EA\u5B9A\u4E49 TVM runtime \u6A21\u5757\uFF0C\u4ECE\u800C\u4F7F\u5F97 TVM runtime \u77E5\u9053\u5982\u4F55\u6267\u884C\u8FD9\u4E2A\u8BA1\u7B97\u56FE\u3002\u5982\u679C\u4F60\u7684\u786C\u4EF6\u5DF2\u7ECF\u62E5\u6709\u5B8C\u6574\u7684\u8BA1\u7B97\u56FE\u6267\u884C\u5F15\u64CE\uFF08graph execution engine\uFF09\uFF0C\u5982\u9002\u7528\u4E8E GPU \u7684 TensorRT\uFF0C\u90A3\u4E48\u8BE5\u89E3\u51B3\u65B9\u6848\u5BF9\u4F60\u800C\u8A00\u975E\u5E38\u5177\u6709\u53C2\u8003\u4EF7\u503C\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u5B8C\u6210 codegen \u548C runtime \u540E\uFF0C\u53EF\u4EE5\u8BA9\u5BA2\u6237\u501F\u52A9\u4F60\u7684\u81EA\u5B9A\u4E49\u6807\u7B7E\uFF0C\u5BF9\u6A21\u578B\u8FDB\u884C\u6CE8\u91CA\u5E76\u52A0\u4EE5\u5229\u7528\u3002\u7EC8\u7AEF\u7528\u6237\u5982\u4F55\u6CE8\u91CA\u548C\u542F\u52A8\u7279\u5B9A codegen \u7684\u6559\u7A0B\uFF0C\u5C06\u5728\u540E\u7EED\u8FDB\u884C\u8865\u5145\u3002"}),"\n",(0,i.jsx)(n.h1,{id:"\u5B9E\u73B0-c-codegen",children:"\u5B9E\u73B0 C Codegen"}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u8FD9\u4E00\u90E8\u5206\u4E2D\uFF0C\u6211\u4EEC\u5C06\u6F14\u793A\u5982\u4F55\u501F\u52A9\u9884\u5B9E\u73B0\u7684\u7B97\u5B50\u51FD\u6570\uFF0C\u751F\u6210 C \u4EE3\u7801\u7684 codegen\u3002\u7B80\u5355\u8D77\u89C1\uFF0C\u672C\u793A\u4F8B codegen \u4E0D\u4F9D\u8D56\u4E8E\u7B2C\u4E09\u65B9\u5E93\u3002\u76F8\u53CD\uFF0C\u6211\u4EEC\u5728 C \u4E2D\u624B\u52A8\u5B9E\u73B0\u4E86\u4E24\u4E2A\u5B8F\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'#define CSOURCE_BINARY_OP_1D(p_ID_, p_OP_, p_DIM1_)         \\\n    extern "C" void p_ID_(float* a, float* b, float* out) { \\\n        for (int64_t i = 0; i < p_DIM1_; ++i) {             \\\n            out[i] = a[i] p_OP_ b[i];                       \\\n        }                                                   \\\n    }\n\n#define CSOURCE_BINARY_OP_2D(p_ID_, p_OP_, p_DIM1_, p_DIM2_)  \\\n    extern "C" void p_ID_(float* a, float* b, float* out) {   \\\n        for (int64_t i = 0; i < p_DIM1_; ++i) {               \\\n            for (int64_t j = 0; j < p_DIM2_; ++j) {           \\\n                int64_t k = i * p_DIM2_ + j;                  \\\n                out[k] = a[k] p_OP_ b[k];                     \\\n            }                                                 \\\n        }                                                     \\\n    }\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u4F7F\u7528\u8FD9\u4E24\u4E2A\u5B8F\uFF0C\u53EF\u4EE5\u4E3A\u4E00\u7EF4\u548C\u4E8C\u7EF4\u5F20\u91CF\u751F\u6210\u4E8C\u5143\u7B97\u5B50\uFF08binary operator\uFF09\u3002\u4F8B\u5982\uFF0C\u7ED9\u5B9A\u5982\u4E0B\u6240\u793A\u7684\u5B50\u56FE\uFF0C\u5047\u8BBE\u6240\u6709\u8F93\u5165\u90FD\u662F shape \u4E3A\uFF0810, 10\uFF09\u7684\u4E8C\u7EF4\u5F20\u91CF\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"c_compiler_input0\n       |\n      add <-- c_compiler_input1\n       |\n    subtract <-- c_compiler_input2\n       |\n    multiply <-- c_compiler_input3\n       |\n      out\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u6211\u4EEC\u7684\u76EE\u6807\u662F\u751F\u6210\u4EE5\u4E0B\u53EF\u7F16\u8BD1\u4EE3\u7801\u6765\u6267\u884C\u5B50\u56FE\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <tvm/runtime/c_runtime_api.h>\n#include <tvm/runtime/packed_func.h>\n#include <dlpack/dlpack.h>\n#include <cstdint>\n#include <cstring>\n#include <iostream>\n\n#define GCC_BINARY_OP_1D(p_ID_, p_OP_, p_DIM1_)           \\\n  extern "C" void p_ID_(float* a, float* b, float* out) { \\\n    for (int64_t i = 0; i < p_DIM1_; ++i) {               \\\n      out[i] = a[i] p_OP_ b[i];                           \\\n    }                                                     \\\n  }\n\n#define GCC_BINARY_OP_2D(p_ID_, p_OP_, p_DIM1_, p_DIM2_)  \\\n  extern "C" void p_ID_(float* a, float* b, float* out) { \\\n    for (int64_t i = 0; i < p_DIM1_; ++i) {               \\\n      for (int64_t j = 0; j < p_DIM2_; ++j) {             \\\n        int64_t k = i * p_DIM2_ + j;                      \\\n        out[k] = a[k] p_OP_ b[k];                         \\\n      }                                                   \\\n    }                                                     \\\n  }\n\n// \u6CE8 1\nGCC_BINARY_OP_2D(gcc_0_0, *, 10, 10);\nGCC_BINARY_OP_2D(gcc_0_1, -, 10, 10);\nGCC_BINARY_OP_2D(gcc_0_2, +, 10, 10);\n\n// \u6CE8 2\nextern "C" void gcc_0_(float* gcc_input0, float* gcc_input1,\n                       float* gcc_input2, float* gcc_input3, float* out) {\n  float* buf_0 = (float*)malloc(4 * 100);\n  float* buf_1 = (float*)malloc(4 * 100);\n  gcc_0_2(gcc_input0, gcc_input1, buf_0);\n  gcc_0_1(buf_0, gcc_input2, buf_1);\n  gcc_0_0(buf_1, gcc_input3, out);\n  free(buf_0);\n  free(buf_1);\n}\n\n// \u6CE8 3\nextern "C" int gcc_0_wrapper(DLTensor* arg0, DLTensor* arg1, DLTensor* arg2,\n                             DLTensor* arg3, DLTensor* out) {\n  gcc_0_(static_cast<float*>(arg0->data), static_cast<float*>(arg1->data),\n         static_cast<float*>(arg2->data), static_cast<float*>(arg3->data),\n         static_cast<float*>(out->data));\n  return 0;\n}\nTVM_DLL_EXPORT_TYPED_FUNC(gcc_0, gcc_0_wrapper);\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u8FD9\u91CC\u8BE6\u7EC6\u4ECB\u7ECD\u4E00\u4E0B\u4E0A\u9762\u4EE3\u7801\u91CC\u7684\u6CE8\u91CA\uFF1A"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6CE81"}),"\uFF1A\u5B50\u56FE\u4E2D\u4E09\u4E2A\u8282\u70B9\u7684\u51FD\u6570\u5B9E\u73B0\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6CE82"}),"\uFF1A\u901A\u8FC7\u5206\u914D\u4E2D\u95F4\u6570\u7EC4\uFF08intermediate buffer\uFF09\u5E76\u8C03\u7528\u76F8\u5E94\u51FD\u6570\u6765\u6267\u884C\u5B50\u56FE\u7684\u51FD\u6570\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6CE83"}),"\uFF1ATVM runtime \u517C\u5BB9\u7684\u5305\u88C5\u51FD\u6570\u3002\u5B83\u63A5\u6536\u4E00\u4E2A\u8F93\u5165\u5F20\u91CF\u5217\u8868\u548C\u4E00\u4E2A\u8F93\u51FA\u5F20\u91CF\uFF08\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF09\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A\u6B63\u786E\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u8C03\u7528\u6CE82 \u4E2D\u63CF\u8FF0\u7684\u5B50\u56FE\u51FD\u6570\u3002\u6B64\u5916\uFF0C",(0,i.jsx)(n.code,{children:"TVM_DLL_EXPORT_TYPED_FUNC"})," \u662F\u4E00\u4E2A TVM \u5B8F\uFF0C\u5B83\u901A\u8FC7\u5C06\u6240\u6709\u5F20\u91CF\u6253\u5305\u5230 ",(0,i.jsx)(n.code,{children:"TVMArgs"})," \u6765\u751F\u6210\u53E6\u4E00\u4E2A\u51FD\u6570 ",(0,i.jsx)(n.code,{children:"gcc_0"}),"\uFF0C\u8BE5\u51FD\u6570\u5177\u6709\u7EDF\u4E00\u7684\u51FD\u6570\u53C2\u6570\u3002\u56E0\u6B64\uFF0CTVM runtime \u53EF\u4EE5\u76F4\u63A5\u8C03\u7528 ",(0,i.jsx)(n.code,{children:"gcc_0"})," \u6765\u6267\u884C\u5B50\u56FE\uFF0C\u65E0\u9700\u5176\u4ED6\u64CD\u4F5C\u3002\u751F\u6210\u4E0A\u8FF0\u4EE3\u7801\u540E\uFF0CTVM \u80FD\u591F\u5C06\u5176\u4E0E\u8BA1\u7B97\u56FE\u7684\u5176\u4F59\u90E8\u5206\u4E00\u8D77\u7F16\u8BD1\u5E76\u5BFC\u51FA\u5355\u4E2A\u5E93\u4EE5\u8FDB\u884C\u90E8\u7F72\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5728\u672C\u8282\u7684\u5176\u4F59\u90E8\u5206\uFF0C\u6211\u4EEC\u5C06\u9010\u6B65\u521B\u5EFA\u4E00\u4E2A codegen\uFF0C\u6765\u5B9E\u73B0\u4E0A\u8FF0\u4EE3\u7801\u3002\u4F60\u7684 codegen \u5FC5\u987B\u4F4D\u4E8E ",(0,i.jsx)(n.code,{children:"src/relay/backend/contrib/<your-codegen-name>/"}),'\u3002\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5C06 codegen \u547D\u540D\u4E3A "codegen_c"\uFF0C\u5E76\u5C06\u5176\u653E\u5728 ',(0,i.jsx)(n.a,{href:"https://github.com/apache/tvm/blob/main/src/relay/backend/contrib/codegen_c/codegen.cc",children:"/src/relay/backend/contrib/codegen_c/"})," \u76EE\u5F55\u4E0B\u3002\u4F60\u53EF\u4EE5\u968F\u65F6\u67E5\u770B\u8FD9\u4E2A\u6587\u4EF6\uFF0C\u4E86\u89E3\u5B8C\u6574\u7684\u5B9E\u73B0\u8FC7\u7A0B\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u5177\u4F53\u6765\u8BF4\uFF0C\u6211\u4EEC\u5C06\u5728\u8FD9\u4E2A\u6587\u4EF6\u4E2D\u5B9E\u73B0\u4E24\u4E2A\u7C7B\uFF0C\u4E24\u4E2A\u7C7B\u7684\u5173\u7CFB\u5982\u4E0B\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"            subgraph                                subgraph\nTVM backend -----------------------------\x3e CSourceCodegen -------------\x3e CodegenC\n       ^                                       |    ^                       |\n       |                                       |    |                       |\n       ----------------------------------------      ------------------------\n          generated C source runtime module              generated C code\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5F53 TVM \u540E\u7AEF\u53D1\u73B0 Relay \u8BA1\u7B97\u56FE\u4E2D\u7684\u51FD\u6570\uFF08\u5B50\u56FE\uFF09\uFF0C\u7528\u6CE8\u518C\u7684\u7F16\u8BD1\u5668\u6807\u7B7E\uFF08\u672C\u4F8B\u4E2D\u4E3A ",(0,i.jsx)(n.code,{children:"ccompiler"}),"\uFF09\u8FDB\u884C\u4E86\u6CE8\u91CA\u65F6\uFF0CTVM \u540E\u7AEF\u5C31\u4F1A\u8C03\u7528 ",(0,i.jsx)(n.code,{children:"CSourceCodegen"})," \u5E76\u4F20\u9012\u5B50\u56FE\u3002 ",(0,i.jsx)(n.code,{children:"CSourceCodegen"})," \u7684\u6210\u5458\u51FD\u6570 ",(0,i.jsx)(n.code,{children:"CreateCSourceModule"})," \u5C06\uFF1A"]}),"\n",(0,i.jsx)(n.p,{children:"1\uFF09\u4E3A\u5B50\u56FE\u751F\u6210 C \u4EE3\u7801\uFF1B"}),"\n",(0,i.jsx)(n.p,{children:"2\uFF09\u5C06\u751F\u6210\u7684 C \u4EE3\u7801\u5305\u88C5\u5230 C source runtime \u6A21\u5757\u4E2D\uFF0C\u4EE5\u4FBF TVM \u540E\u7AEF\u8FDB\u884C\u7F16\u8BD1\u548C\u90E8\u7F72\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u7279\u522B\u662F\uFF0CC codegen \u5BF9 ",(0,i.jsx)(n.code,{children:"CodegenC"})," \u7C7B\u662F\u900F\u660E\u7684\uFF0C\u56E0\u4E3A\u5B83\u63D0\u4F9B\u4E86\u8BB8\u591A\u6709\u7528\u7684\u5B9E\u7528\u7A0B\u5E8F\u6765\u7B80\u5316 codegen \u5B9E\u73B0\u3002\u4E0B\u9762\u7684\u7AE0\u8282\u5C06\u81EA\u4E0B\u800C\u4E0A\u5B9E\u73B0\u8FD9\u4E24\u4E2A\u7C7B\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5B9E\u73B0-codegenc",children:"\u5B9E\u73B0 CodegenC"}),"\n",(0,i.jsxs)(n.p,{children:["\u5728 ",(0,i.jsx)(n.code,{children:"src/relay/backend/contrib/codegen_c/codegen.cc"})," \u4E2D\uFF0C\u9996\u5148\u5728 ",(0,i.jsx)(n.code,{children:"tvm.relay.contrib"})," \u7684\u547D\u540D\u7A7A\u95F4\u4E0B\u521B\u5EFA\u4E00\u4E2A codegen \u7C7B\u9AA8\u67B6\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <tvm/relay/expr_functor.h>\n#include <tvm/relay/transform.h>\n#include <tvm/relay/type.h>\n#include <tvm/runtime/module.h>\n#include <tvm/runtime/object.h>\n\n#include <fstream>\n#include <sstream>\n\n#include "codegen_c.h"\n\nnamespace tvm {\nnamespace relay {\nnamespace contrib {\n\nclass CodegenC : public ExprVisitor, public CodegenCBase {\n  public:\n    explicit CodegenC(const std::string& id) { this->ext_func_id_ = id; }\n\n    void VisitExpr_(const VarNode* node) { ; }\n    void VisitExpr_(const CallNode* call) final { ; }\n    std::string JIT() { ; }\n\n  private:\n    /*! \\brief The function id that represents a C source function. */\n    std::string ext_func_id_ = "";\n    /*! \\brief The index of a wrapped C function. */\n    int func_idx = 0;\n    /*! \\brief The index of allocated buffers. */\n    int buf_idx_ = 0;\n    /*! \\brief The arguments of a C compiler compatible function. */\n    std::vector<std::string> ext_func_args_;\n    /*! \\brief The statements of a C compiler compatible function. */\n    std::vector<std::string> ext_func_body;\n    /*! \\brief The declaration statements of a C compiler compatible function. */\n    std::vector<std::string> func_decl_;\n    /*! \\brief The declaration statements of buffers. */\n    std::vector<std::string> buf_decl_;\n    /*! \\brief The name and index pairs for output. */\n    std::vector<std::pair<std::string, int>> out_;\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CodegenC"})," \u7C7B\u7EE7\u627F\u4E86\u4E24\u4E2A\u7C7B\uFF1A ",(0,i.jsx)(n.code,{children:"ExprVisitor"})," \u63D0\u4F9B\u904D\u5386\u5B50\u56FE\u7684\u80FD\u529B\uFF0C\u7136\u540E\u6536\u96C6\u6240\u9700\u7684\u4FE1\u606F\u5E76\u751F\u6210\u5B50\u56FE\u51FD\u6570\uFF0C\u4F8B\u5982 ",(0,i.jsx)(n.code,{children:"gcc_0_"}),"\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CodegenCBase"})," \u63D0\u4F9B\u4E86\u751F\u6210\u5305\u88C5\u51FD\u6570\u7684\u80FD\u529B\u548C\u5B9E\u7528\u7A0B\u5E8F\uFF0C\u4F8B\u5982\u4E0A\u4F8B\u4E2D\u7684 ",(0,i.jsx)(n.code,{children:"gcc_0"}),"\u3002\u53EF\u4EE5\u770B\u51FA\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u5728\u8FD9\u4E2A codegen \u7C7B\u4E2D\u5B9E\u73B0\u4E09\u4E2A\u51FD\u6570\u5C31\u53EF\u4EE5\u4E86\u3002"]}),"\n",(0,i.jsx)(n.h3,{id:"\u7B97\u5B50\u7684\u4EE3\u7801\u751F\u6210",children:"\u7B97\u5B50\u7684\u4EE3\u7801\u751F\u6210"}),"\n",(0,i.jsxs)(n.p,{children:["\u9996\u5148\u5B9E\u73B0 ",(0,i.jsx)(n.code,{children:"VisitExpr_(const CallNode* call)"}),"\u3002\u8BE5\u51FD\u6570\u5728\u904D\u5386\u5B50\u56FE\u65F6\u4F1A\u8BBF\u95EE\u6240\u6709\u8C03\u7528\u8282\u70B9\u3002\u6BCF\u4E2A\u8C03\u7528\u8282\u70B9\u90FD\u5305\u542B\u4E00\u4E2A\u6211\u4EEC\u60F3\u8981\u5378\u8F7D\uFF08offload\uFF09\u5230\u786C\u4EF6\u4E2D\u7684\u7B97\u5B50\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u6309\u7167\u62D3\u6251\u987A\u5E8F\u751F\u6210\u5177\u6709\u6B63\u786E\u7B97\u5B50\u7684\u76F8\u5E94 C \u4EE3\u7801\u3002\u5B8C\u6574\u5B9E\u73B0\u8FC7\u7A0B\u5982\u4E0B\uFF1A"]}),"\n",(0,i.jsx)(n.h4,{id:"1-\u751F\u6210\u51FD\u6570\u58F0\u660E",children:"1. \u751F\u6210\u51FD\u6570\u58F0\u660E"}),"\n",(0,i.jsxs)(n.p,{children:["\u793A\u4F8B\u7ED3\u679C\uFF1A",(0,i.jsx)(n.code,{children:"GCC_BINARY_OP_2D(gcc_0_0, *, 10, 10);"})]}),"\n",(0,i.jsx)(n.p,{children:"\u8981\u751F\u6210\u51FD\u6570\u58F0\u660E\uFF0C\u5982\u4E0A\u6240\u793A\uFF0C\u6211\u4EEC\u9700\u8981\uFF1A"}),"\n",(0,i.jsxs)(n.p,{children:["1\uFF09\u51FD\u6570\u540D\uFF08\u4F8B\u5982 ",(0,i.jsx)(n.code,{children:"gcc_0_0"}),"\uFF09"]}),"\n",(0,i.jsxs)(n.p,{children:["2\uFF09\u7B97\u5B50\u7684\u7C7B\u578B\uFF08\u4F8B\u5982 ",(0,i.jsx)(n.code,{children:"*"})," \uFF09"]}),"\n",(0,i.jsxs)(n.p,{children:["3\uFF09\u8F93\u5165\u5F20\u91CF shape\uFF08\u4F8B\u5982 ",(0,i.jsx)(n.code,{children:"(10, 10)"})," \uFF09"]}),"\n",(0,i.jsxs)(n.p,{children:["\u8FD9\u4E9B\u4FE1\u606F\u53EF\u4EE5\u4ECE ",(0,i.jsx)(n.code,{children:"CallNode"})," \u8F7B\u677E\u83B7\u53D6\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'std::ostringstream macro_stream;\nstd::ostringstream decl_stream;\nstd::ostringstream buf_stream;\n\n// Generate a unique function name you like.\nstd::string func_name = ext_func_id_ + "_" + std::to_string(func_idx++);\n\n// Make function declaration string.\nmacro_stream << "CSOURCE_BINARY_OP_" << call->args.size() << "D(" << func_name << ", ";\n\n// Check the operator type.\nif (IsOp(call, "add")) {\n  macro_stream << "+";\n} else if (IsOp(call, "subtract")) {\n  macro_stream << "-";\n} else if (IsOp(call, "multiply")) {\n  macro_stream << "*";\n} else {\n  LOG(FATAL) << "Unrecognized op";\n}\n\n// Extract the input tensor shape.\nauto in_shape = GetShape(call->args[0]->checked_type());\nfor (size_t i = 0; i < in_shape.size(); ++i) {\n  macro_stream << ", " << in_shape[i];\n}\nmacro_stream << ");";\nfunc_decl_.push_back(macro_stream.str());\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u53EF\u4EE5\u770B\u51FA\uFF0C\u6211\u4EEC\u5C06\u751F\u6210\u7684\u4EE3\u7801\u63A8\u9001\u5230\u7C7B\u6210\u5458\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"func_decl_"})," \u4E2D\u3002\u8FD9\u610F\u5473\u7740\u5728\u6211\u4EEC\u5B8C\u6210\u904D\u5386\u6574\u4E2A\u5B50\u56FE\u4E4B\u540E\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u6536\u96C6\u4E86\u6240\u6709\u5FC5\u9700\u7684\u51FD\u6570\u58F0\u660E\uFF0C\u6211\u4EEC\u552F\u4E00\u9700\u8981\u505A\u7684\u5C31\u662F\u7528 GCC \u7F16\u8BD1\u5B83\u4EEC\u3002 ",(0,i.jsx)(n.code,{children:"VisitExpr_(const CallNode* call)"})," \u7684\u5176\u4F59\u5B9E\u73B0\u4E5F\u9075\u5FAA\u8FD9\u4E2A\u6982\u5FF5\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"2-\u751F\u6210\u51FD\u6570\u8C03\u7528",children:"2. \u751F\u6210\u51FD\u6570\u8C03\u7528"}),"\n",(0,i.jsxs)(n.p,{children:["\u793A\u4F8B\u7ED3\u679C\uFF1A",(0,i.jsx)(n.code,{children:"gcc_0_0(buf_1, gcc_input3, out);"})]}),"\n",(0,i.jsx)(n.p,{children:"\u751F\u6210\u51FD\u6570\u58F0\u660E\u540E\uFF0C\u6211\u4EEC\u9700\u8981\u751F\u6210\u4E00\u4E2A\u5177\u6709\u6B63\u786E\u8F93\u5165\u548C\u8F93\u51FA\u7684\u51FD\u6570\u8C03\u7528\u3002\u8981\u60F3\u77E5\u9053\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u65F6\u5E94\u8BE5\u653E\u7F6E\u54EA\u4E9B\u8F93\u5165\u6216\u6570\u7EC4\uFF0C\u5FC5\u987B\u8BBF\u95EE\u5B83\u7684\u53C2\u6570\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'bool first = true;\ndecl_stream << func_name << "(";\nfor (size_t i = 0; i < call->args.size(); ++i) {\n  VisitExpr(call->args[i]); // \u6CE8 1\n  for (auto out : out_) {\n    if (!first) {\n      decl_stream << ", ";\n    }\n    first = false;\n    decl_stream << out.first;\n  }\n}\n// \u6CE8 2\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u540C\u6837\uFF0C\u91CD\u70B9\u4ECB\u7ECD\u4E00\u4E0B\u4E0A\u8FF0\u4EE3\u7801\u4E2D\u7684\u6CE8\u91CA\uFF1A"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE81"}),"\uFF1A",(0,i.jsx)(n.code,{children:"VisitExpr(call->args[i])"})," \u662F\u8BBF\u95EE\u5F53\u524D\u51FD\u6570\u53C2\u6570\u7684\u9012\u5F52\u8C03\u7528\u3002\u53C2\u6570\u53EF\u4EE5\u662F\u53E6\u4E00\u4E2A\u8282\u70B9\u7684\u8F93\u51FA\u6216\u8F93\u5165\u5F20\u91CF\u3002\u5728\u8BE5\u793A\u4F8B\u4E2D\uFF0C\u9700\u8981\u786E\u4FDD\u6BCF\u4E2A\u8282\u70B9\u5728\u79BB\u5F00\u8BBF\u95EE\u5668\u4E4B\u524D\uFF0C\u90FD\u66F4\u65B0\u4E00\u4E2A\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"out_"}),"\u3002\u56FE\u89E3\u5982\u4E0B\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:' arg_node                 arg_node <- Visit arg (Note 1)       arg_node\n     |                        |                                    |\n curr_node <- Process      curr_node                            curr_node <- Put "buf_0" as an input buffer\n\n(a) out_ = {}            (b) out_ = {}                   (c) out_ = {("buf_0", 20)}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u4ECE\u4E0A\u56FE\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"out_"})," \u5728\u8BBF\u95EE\u53C2\u6570\u8282\u70B9\u524D\u662F\u7A7A\u7684\uFF0C\u5B83\u88AB\u586B\u5145\u4E86 ",(0,i.jsx)(n.code,{children:"arg_node"})," \u8F93\u51FA\u6570\u7EC4\u7684\u540D\u79F0\u548C\u5927\u5C0F\u3002\u56E0\u6B64\u5728\u5B8C\u6210\u5BF9\u53C2\u6570\u8282\u70B9\u7684\u8BBF\u95EE\u65F6\uFF0C\u53EF\u4EE5\u901A\u8FC7\u67E5\u770B ",(0,i.jsx)(n.code,{children:"out_"})," \u5F97\u77E5\u5E94\u8BE5\u653E\u7F6E\u7684\u6B63\u786E\u8F93\u5165\u6570\u7EC4\u3002\u672C\u8282\u672B\u5C3E\u4EE5\u53CA\u4E0B\u4E00\u8282\u4E2D\uFF0C\u6211\u4EEC\u5C06\u4ECB\u7ECD\u5982\u4F55\u66F4\u65B0 ",(0,i.jsx)(n.code,{children:"out_"}),"\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE82"}),"\uFF1A\u4F60\u53EF\u80FD\u6CE8\u610F\u5230\uFF0C\u6211\u4EEC\u5728\u8FD9\u4E00\u6B65\u6CA1\u6709\u5173\u95ED\u51FD\u6570\u8C03\u7528\u5B57\u7B26\u4E32\u3002\u5F53\u524D\u51FD\u6570\u8C03\u7528\u5B57\u7B26\u4E32\u770B\u8D77\u6765\u50CF\uFF1A",(0,i.jsx)(n.code,{children:"gcc_0_0(buf_1, gcc_input3"}),"\u3002\u8FD9\u662F\u56E0\u4E3A\u6211\u4EEC\u6CA1\u6709\u5C06\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF08\u5982 output\uFF09\u653E\u5165\u6B64\u8C03\u7528\u4E2D\u3002\u51FD\u6570\u8C03\u7528\u7684\u8F93\u51FA\u53EF\u4EE5\u662F\u5206\u914D\u7684\u4E34\u65F6\u6570\u7EC4\u6216\u5B50\u56FE\u8F93\u51FA\u5F20\u91CF\u3002\u7B80\u5355\u8D77\u89C1\uFF0C\u5728\u672C\u4F8B\u4E2D\u6211\u4EEC\u4E3A\u6BCF\u4E2A\u8C03\u7528\u8282\u70B9\u90FD\u5206\u914D\u8001\u4E00\u4E2A\u8F93\u51FA\u6570\u7EC4\uFF08\u4E0B\u4E00\u6B65\uFF09\uFF0C\u5E76\u5C06\u6700\u540E\u4E00\u4E2A\u6570\u7EC4\u4E2D\u7684\u7ED3\u679C\u590D\u5236\u5230\u4E86\u8F93\u51FA\u5F20\u91CF\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"3-\u751F\u6210\u8F93\u51FA\u6570\u7EC4output-buffer",children:"3. \u751F\u6210\u8F93\u51FA\u6570\u7EC4\uFF08output buffer\uFF09"}),"\n",(0,i.jsxs)(n.p,{children:["\u793A\u4F8B\u7ED3\u679C\uFF1A",(0,i.jsx)(n.code,{children:"float buf_0 = (float)malloc(4 * 100);"})]}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u4E0A\u4E00\u6B65\u6240\u8FF0\uFF0C\u9664\u4E86\u5B50\u56FE\u8F93\u5165\u548C\u8F93\u51FA\u5F20\u91CF\u5916\uFF0C\u8FD8\u9700\u8981\u6570\u7EC4\u6765\u4FDD\u5B58\u4E2D\u95F4\u7ED3\u679C\u3002\u4E3A\u4E86\u751F\u6210\u6570\u7EC4\uFF0C\u6211\u4EEC\u63D0\u53D6 shape \u4FE1\u606F\uFF0C\u4EE5\u786E\u5B9A\u6570\u7EC4\u7684\u7C7B\u578B\u548C\u5927\u5C0F\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'// \u8FD9\u4E2A\u4F8B\u5B50\u4EC5\u652F\u6301\u5355\u4E2A\u8F93\u51FA\u3002\nauto type_node = call->checked_type().as<TensorTypeNode>();\nICHECK(type_node != nullptr && runtime::TypeMatch(type_node->dtype, kDLFloat, 32))\n      << "Only support single output tensor with float type";\n\n// \u751F\u6210\u4E00\u4E2A\u552F\u4E00\u7684\u6570\u7EC4\u540D\u5B57\u3002\nstd::string out = "buf_" + std::to_string(buf_idx_++);\n\n// \u63D0\u53D6 shape \u4F5C\u4E3A\u6570\u7EC4\u5927\u5C0F\u3002\nauto out_shape = GetShape(call->checked_type());\nint out_size = 1;\nfor (size_t i = 0; i < out_shape.size(); ++i) {\n  out_size *= out_shape[i];\n}\n\n// \u5206\u914D\u6570\u7EC4\u5E76\u63A8\u9001\u81F3\u6570\u7EC4\u58F0\u660E\nbuf_stream << "float* " << out << " = (float*)std::malloc(4 * " << out_size << ");";\nbuf_decl_.push_back(buf_stream.str());\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u5206\u914D\u4E86\u8F93\u51FA\u6570\u7EC4\u4E4B\u540E\uFF0C\u73B0\u5728\u53EF\u4EE5\u5173\u95ED\u51FD\u6570\u8C03\u7528\u5B57\u7B26\u4E32\uFF0C\u5E76\u5C06\u751F\u6210\u7684\u51FD\u6570\u8C03\u7528\u63A8\u9001\u5230\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"ext_func_body"}),"\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plain",children:'decl_stream << ", " << out << ");";\next_func_body.push_back(decl_stream.str());\n'})}),"\n",(0,i.jsx)(n.h4,{id:"4-\u66F4\u65B0\u8F93\u51FA\u6570\u7EC4",children:"4. \u66F4\u65B0\u8F93\u51FA\u6570\u7EC4"}),"\n",(0,i.jsxs)(n.p,{children:["\u4E3A\u4E86\u4F7F\u5F97\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF08\u63A5\u53D7\u5F53\u524D\u8C03\u7528\u8282\u70B9\u7684\u8F93\u51FA\uFF0C\u4F5C\u4E3A\u5176\u8F93\u5165\uFF09\u77E5\u9053\u5B83\u5E94\u8BE5\u4F7F\u7528\u54EA\u4E2A\u6570\u7EC4\uFF0C\u6211\u4EEC\u9700\u8981\u5728\u79BB\u5F00\u8FD9\u4E2A\u8BBF\u95EE\u51FD\u6570\u4E4B\u524D\u66F4\u65B0\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"out_"}),"\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plain",children:"out_.clear();\nout_.push_back({out, out_size});\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u606D\u559C\uFF01\u5230\u8FD9\u4E00\u6B65\u6211\u4EEC\u5DF2\u7ECF\u5B8C\u6210\u4E86\u8FD9\u4E2A\u7C7B\u4E2D\u6700\u56F0\u96BE\u7684\u51FD\u6570\u3002\u63A5\u4E0B\u6765\u7684\u4E24\u8282\u4E2D\uFF0C\u6211\u4EEC\u5C06\u8FDB\u4E00\u6B65\u5B8C\u5584\u8FD9\u4E2A\u51FD\u6570\u7684\u529F\u80FD\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u8F93\u5165\u53D8\u91CF\u7684\u4EE3\u7801\u751F\u6210",children:"\u8F93\u5165\u53D8\u91CF\u7684\u4EE3\u7801\u751F\u6210"}),"\n",(0,i.jsxs)(n.p,{children:["\u56DE\u60F3\u4E00\u4E0B\uFF0C\u6211\u4EEC\u901A\u8FC7\u8BBF\u95EE\u8C03\u7528\u8282\u70B9\u7684\u53C2\u6570\uFF08\u4E0A\u4E00\u8282\u4E2D\u7684\u7B2C 2 \u6B65\uFF09\u6536\u96C6\u4E86\u8F93\u5165\u6570\u7EC4\u4FE1\u606F\uFF0C\u5E76\u5904\u7406\u4E86\u53C2\u6570\u662F\u53E6\u4E00\u4E2A\u8C03\u7528\u8282\u70B9\u7684\u60C5\u51B5\uFF08\u7B2C 4 \u6B65\uFF09\u3002\u672C\u8282\u6211\u4EEC\u5C06\u4EE5 ",(0,i.jsx)(n.code,{children:"VarNode"})," \u4E3A\u4F8B\uFF0C\u6F14\u793A\u5982\u4F55\u5904\u7406\u5176\u4ED6\u8282\u70B9\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"VarNode"})," \u8868\u793A\u6A21\u578B\u4E2D\u7684\u8F93\u5165\u5F20\u91CF\u3002\u5B83\u975E\u5E38\u91CD\u8981\u7684\u4E00\u70B9\u5C31\u662F\u540D\u79F0\u63D0\u793A\uFF08\u4F8B\u5982\uFF0C",(0,i.jsx)(n.code,{children:"data"}),"\u3001",(0,i.jsx)(n.code,{children:"weight"})," \u7B49\uFF09\u3002\u8BBF\u95EE ",(0,i.jsx)(n.code,{children:"VarNode"})," \u65F6\uFF0C\u53EA\u9700\u66F4\u65B0\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"out_"})," \u4F20\u9012\u540D\u79F0\u63D0\u793A\uFF0C\u540E\u4EE3\uFF08descendant\uFF09\u8C03\u7528\u8282\u70B9\u5C31\u53EF\u4EE5\u751F\u6210\u6B63\u786E\u7684\u51FD\u6570\u8C03\u7528\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"void VisitExpr_(const VarNode* node) {\n  ext_func_args_.push_back(node->name_hint());\n  out_.clear();\n  out_.push_back({node->name_hint(), 0});\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u6CE8\u610F\uFF1A\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5047\u8BBE\u8981\u5378\u8F7D\u7684\u5B50\u56FE\u53EA\u6709\u8C03\u7528\u8282\u70B9\u548C\u53D8\u91CF\u8282\u70B9\u3002\u5982\u679C\u5B50\u56FE\u5305\u542B\u5176\u4ED6\u7C7B\u578B\u7684\u8282\u70B9\uFF0C\u5982 ",(0,i.jsx)(n.code,{children:"TupleNode"}),"\uFF0C\u90A3\u4E48\u4F60\u4E5F\u9700\u8981\u8BBF\u95EE\u5B83\u4EEC\u5E76\u7ED5\u8FC7\u8F93\u51FA\u6570\u7EC4\u4FE1\u606F\u3002"]}),"\n",(0,i.jsx)(n.h3,{id:"code-emitting",children:"Code Emitting"}),"\n",(0,i.jsxs)(n.p,{children:["Codegen Class \u7684\u6700\u540E\u4E00\u90E8\u5206\u662F ",(0,i.jsx)(n.code,{children:"JIT"})," \u51FD\u6570\uFF0C\u5B83\u4E3A\u5B50\u56FE emit \u4E00\u4E2A C \u51FD\u6570\uFF0C\u5E76\u5C06\u521A\u751F\u6210\u7684 C \u4EE3\u7801\u4F5C\u4E3A\u51FD\u6570\u4F53\u3002\u6CE8\u610F\uFF0C\u9664\u4E86\u5728\u524D\u51E0\u8282\u4E2D\u751F\u6210\u7684\u5B50\u56FE\u51FD\u6570\u5916\uFF0C\u8FD8\u9700\u8981\u4E00\u4E2A\u5177\u6709\u7EDF\u4E00\u53C2\u6570\u7684 wrapper \u51FD\u6570\uFF0C\u4F9B TVM runtime \u8C03\u7528\u548C\u4F20\u9012\u6570\u636E\u3002\u5E78\u8FD0\u7684\u662F\uFF0C\u6211\u4EEC\u7EE7\u627F\u7684\u57FA\u7C7B\u5DF2\u7ECF\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5B9E\u73B0\uFF0C\u5373 ",(0,i.jsx)(n.code,{children:"JitImpl"}),"\uFF0C\u6765\u751F\u6210\u8BE5\u51FD\u6570\u3002\u8C03\u7528 ",(0,i.jsx)(n.code,{children:"JitImpl"}),"\u7684\u65B9\u5F0F\u5982\u4E0B\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'JitImpl("gcc_0" /* Subgraph symbol (ID) */,\n        {"gcc_input0", "gcc_input1", "gcc_input2", "gcc_input3"} /* Input arguments */,\n        {"float *buf_0 = (float*)malloc(4 * 20)", ...} /* Buffer allocations */,\n        {"gcc_0_2(gcc_input0, gcc_input1, buf_0);"} /* Function body */,\n        {"out"} /* Output */);\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u4E0A\u8FF0\u8C03\u7528\u5C06\u751F\u6210\u4E09\u4E2A\u51FD\u6570\uFF08\u4E00\u4E2A\u6765\u81EA TVM wrapper \u5B8F\uFF09\uFF1A"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5B50\u56FE\u51FD\u6570 ",(0,i.jsx)(n.code,{children:"gcc_0_"}),"\uFF08\u51FD\u6570\u540D\u672B\u5C3E\u591A\u4E86\u4E00\u4E2A\u4E0B\u5212\u7EBF\uFF09\u4EE5\u53CA\u4E3A\u6267\u884C\u5B50\u56FE\u800C\u751F\u6210\u7684\u6240\u6709 C \u4EE3\u7801\uFF1B"]}),"\n",(0,i.jsxs)(n.li,{children:["\u5E26\u6709 ",(0,i.jsx)(n.code,{children:"DLTensor"})," \u53C2\u6570\u5217\u8868\u7684 wrapper \u51FD\u6570 ",(0,i.jsx)(n.code,{children:"gcc_0__wrapper_"})," \uFF0C\u5C06\u6570\u636E\u8F6C\u6362\u4E3A\u6B63\u786E\u7684\u7C7B\u578B\u5E76\u8C03\u7528 ",(0,i.jsx)(n.code,{children:"gcc_0_"})]}),"\n",(0,i.jsxs)(n.li,{children:["TVM runtime \u517C\u5BB9\u51FD\u6570 ",(0,i.jsx)(n.code,{children:"gcc_0"})," \u5177\u6709 TVM \u7EDF\u4E00\u51FD\u6570\u53C2\u6570\uFF0C\u53EF\u89E3\u5305 TVM \u6253\u5305\u5F20\u91CF\u5E76\u8C03\u7528  ",(0,i.jsx)(n.code,{children:"gcc_0__wrapper_"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u56E0\u6B64\uFF0C\u5728 ",(0,i.jsx)(n.code,{children:"JIT"})," \u5B9E\u73B0\u4E2D\u552F\u4E00\u8981\u505A\u7684\uFF0C\u5C31\u662F\u5C06\u751F\u6210\u7684\u6240\u6709\u5B50\u56FE\u51FD\u6570\u4EE3\u7801\u4F20\u9012\u7ED9 ",(0,i.jsx)(n.code,{children:"JitImpl"}),"\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'std::string JIT() {\n  // Write function macros\n  for (auto decl : func_decl_) {\n    code_stream_ << decl << "\\n";\n  }\n  return JitImpl(ext_func_id_, ext_func_args_, buf_decl_, ext_func_body, out_);\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u4F20\u9012\u7684\u6240\u6709\u53D8\u91CF\uFF08",(0,i.jsx)(n.code,{children:"ext_func_id"})," \u7B49\uFF09\u90FD\u662F\u7C7B\u53D8\u91CF\uFF0C\u5E76\u5728\u904D\u5386\u5B50\u56FE\u65F6\u88AB\u586B\u5145\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"\u5B9E\u73B0-csourcecodegen",children:"\u5B9E\u73B0 CSourceCodegen"}),"\n",(0,i.jsxs)(n.p,{children:["\u521B\u5EFA\u4E00\u4E2A\u7C7B\u5E76\u5B9E\u73B0\u6240\u9700\u529F\u80FD\uFF0C\u6CE8\u610F\uFF1A\u9700\u8981\u7EE7\u627F\u81EA ",(0,i.jsx)(n.code,{children:"CSourceModuleCodegenBase"}),"\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class CSourceCodegen : public CSourceModuleCodegenBase {\n public:\n  // \u4F20\u9012\u4E00\u4E2A\u5B50\u56FE\u51FD\u6570, \u5E76\u751F\u6210 C \u4EE3\u7801\u3002\n  void GenCFunc(const Function& func) { ; }\n\n  // \u4F7F\u7528 GenCFunc \u6765\u751F\u6210 C \u4EE3\u7801\u5E76\u5C06\u5B83\u5305\u88C5\u6210\u4E00\u4E2A C \u6E90\u6A21\u5757\u3002\n  runtime::Module CreateCSourceModule(const NodeRef& ref) override { ; }\n\n private:\n  std::ostringstream code_stream_;\n};\n"})}),"\n",(0,i.jsx)(n.h4,{id:"\u5B9E\u73B0-gencfunc",children:"\u5B9E\u73B0 GenCFunc"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"GenCFunc"})," \u53EA\u662F\u7B80\u5355\u5730\u4F7F\u7528\u6211\u4EEC\u521A\u521A\u5B9E\u73B0\u7684 ",(0,i.jsx)(n.code,{children:"CodegenC"})," \u6765\u904D\u5386\u4E00\u4E2A Relay \u51FD\u6570\uFF08\u5B50\u56FE\uFF09\uFF0C\u5F97\u5230\u751F\u6210\u7684 C \u4EE3\u7801\u3002\u5185\u7F6E\u51FD\u6570 ",(0,i.jsx)(n.code,{children:"GetExtSymbol"})," \u5728 Relay \u51FD\u6570\u4E2D\u68C0\u7D22\u552F\u4E00\u7684\u7B26\u53F7\u540D\u79F0\uFF08\u4F8B\u5982 ",(0,i.jsx)(n.code,{children:"gcc_0"}),"\uFF09\uFF0C\u6CE8\u610F\uFF1A",(0,i.jsx)(n.strong,{children:"\u5FC5\u987B"}),"\u5C06\u5176\u7528\u4F5C C \u51FD\u6570\u540D\u79F0\uFF0C\u56E0\u4E3A\u8BE5\u7B26\u53F7\u5C06\u7528\u4E8E DSO \u8FD0\u884C\u67E5\u627E\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plain",children:'void GenCFunc(const Function& func) {\n  ICHECK(func.defined()) << "Input error: expect a Relay function.";\n\n  // \u8BB0\u5F55\u8FD0\u884C\u67E5\u627E\u7684\u5916\u90E8\u7B26\u53F7\u3002\n  auto sid = GetExtSymbol(func);\n\n  CodeGenC builder(sid);\n  builder.VisitExpr(func->body);\n  code_stream_ << builder.JIT();\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"\u5B9E\u73B0-createcsourcemodule",children:"\u5B9E\u73B0 CreateCSourceModule"}),"\n",(0,i.jsxs)(n.p,{children:["\u6B64\u51FD\u6570\u4E3A\u5916\u90E8\u5E93\u521B\u5EFA\u4E86\u4E00\u4E2A runtime \u6A21\u5757\u3002\u672C\u4E8B\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u521B\u5EFA\u4E86\u4E00\u4E2A\u53EF\u4EE5\u76F4\u63A5\u88AB\u7F16\u8BD1\u5E76\u4E0E TVM \u751F\u6210\u7684 DSOModule \u94FE\u63A5\u5728\u4E00\u8D77\u7684 CSourceModule\u3002",(0,i.jsx)(n.code,{children:"CodegenC"})," \u5B9E\u73B0\u4E4B\u540E\uFF0C\u518D\u5B9E\u73B0\u8FD9\u4E2A\u529F\u80FD\u5C31\u6BD4\u8F83\u7B80\u5355\u4E86\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'runtime::Module CreateCSourceModule(const NodeRef& ref) override {\n  // \u521B\u5EFA\u5934\u6587\u4EF6\n  code_stream_ << "#include <cstdint>\\n";\n  code_stream_ << "#include <iostream>\\n";\n  code_stream_ << "#include <cstdlib>\\n";\n  code_stream_ << "#include <stdio.h>\\n";\n  code_stream_ << "#include <cstring>\\n";\n  code_stream_ << "#include <tvm/runtime/c_runtime_api.h>\\n";\n  code_stream_ << "#include <dlpack/dlpack.h>\\n";\n\n  // \u4E3A\u7B97\u5B50\u5B9A\u4E49\u6DFB\u52A0\u4E00\u4E9B\u516C\u5171\u5B8F\u3002\n  const char* operator_macro = R"op_macro(\n  #define CSOURCE_BINARY_OP_1D(p_ID_, p_OP_, p_DIM1_)       \\\n    extern "C" void p_ID_(float* a, float* b, float* out) { \\\n      for (int64_t i = 0; i < p_DIM1_; ++i) {               \\\n        out[i] = a[i] p_OP_ b[i];                           \\\n      }                                                     \\\n    }\n\n  #define CSOURCE_BINARY_OP_2D(p_ID_, p_OP_, p_DIM1_, p_DIM2_)  \\\n    extern "C" void p_ID_(float* a, float* b, float* out) {     \\\n      for (int64_t i = 0; i < p_DIM1_; ++i) {                   \\\n        for (int64_t j = 0; j < p_DIM2_; ++j) {                 \\\n          int64_t k = i * p_DIM2_ + j;                          \\\n          out[k] = a[k] p_OP_ b[k];                             \\\n        }                                                       \\\n      }                                                         \\\n    }\n  )op_macro";\n\n  code_stream_ << operator_macro << "\\n\\n";\n\n  // \u4E3A\u5B50\u56FE\u751F\u6210 C \u4EE3\u7801\u3002\n  if (ref->IsInstance<FunctionNode>()) {\n    GenCFunc(Downcast<Function>(ref));\n  } else if (ref->IsInstance<relay::ModuleNode>()) {\n    relay::Module mod = Downcast<relay::Module>(ref);\n    for (const auto& it : mod->functions) {\n      GenCFunc(Downcast<Function>(it.second));\n    }\n  } else {\n    LOG(FATAL) << "The input ref is expected to be a Relay function or module"\n               << "\\n";\n  }\n\n  // \u521B\u5EFA\u4E00\u4E2A CSourceModule\n  const auto* pf = runtime::Registry::Get("module.csource_module_create");\n  ICHECK(pf != nullptr) << "Cannot find csource module to create the external runtime module";\n  return (*pf)(code_stream_.str(), "cc");\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u6CE8\u518C-codegenc",children:"\u6CE8\u518C CodegenC"}),"\n",(0,i.jsx)(n.p,{children:"\u6700\u540E\u4E00\u6B65\u662F\u5C06 codegen \u6CE8\u518C\u5230 TVM \u540E\u7AEF\u3002\u9996\u5148\u5B9E\u73B0\u4E00\u4E2A\u7B80\u5355\u7684\u51FD\u6570\uFF0C\u8C03\u7528 codegen \u5E76\u751F\u6210\u4E00\u4E2A runtime \u6A21\u5757\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"runtime::Module CCompiler(const NodeRef& ref) {\n  CSourceCodegen csource;\n  return csource.CreateCSourceModule(ref);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u63A5\u4E0B\u6765\u5C06\u6B64\u51FD\u6570\u6CE8\u518C\u5230 TVM \u540E\u7AEF\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'TVM_REGISTER_GLOBAL("relay.ext.ccompiler").set_body_typed(CCompiler);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u5176\u4E2D ",(0,i.jsx)(n.code,{children:"ccompiler"})," \u662F\u4E00\u4E2A\u81EA\u5B9A\u4E49\u6807\u7B7E\uFF0C\u5B83\u544A\u77E5 TVM \u8FD9\u662F\u7528 ",(0,i.jsx)(n.code,{children:"ccompiler"})," \u6CE8\u91CA\u5B50\u56FE\u65F6\uFF0C\u5E94\u8BE5\u7528\u6765\u751F\u6210\u548C\u5378\u8F7D\u5B50\u56FE\u7684 codegen\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u6700\u540E\uFF0C\u8BBE\u7F6E\u4E00\u4E2A CMake \u914D\u7F6E\u6807\u5FD7\uFF0C\u53EA\u5305\u542B\u5BA2\u6237\u7684\u7F16\u8BD1\u5668\u3002\u9996\u5148\u521B\u5EFA\u4E00\u4E2A cmake \u6587\u4EF6\uFF1A",(0,i.jsx)(n.code,{children:"cmake/modules/contrib/CODEGENC.cmake"}),"\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"if(USE_CODEGENC)\n  file(GLOB CSOURCE_RELAY_CONTRIB_SRC src/relay/backend/contrib/codegen_c/codegen.cc)\n  list(APPEND COMPILER_SRCS ${CSOURCE_RELAY_CONTRIB_SRC})\nendif(USE_CODEGENC)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u7528\u6237\u5728\u4F7F\u7528 ",(0,i.jsx)(n.code,{children:"config.cmake"})," \u914D\u7F6E TVM \u65F6\uFF0C\u53EF\u4EE5\u81EA\u884C\u51B3\u5B9A\u662F\u5426\u914D\u7F6E\u7F16\u8BD1\u5668\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",children:"set(USE_CODEGENC ON)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u4E3A\u8868\u5F81representation\u5B9E\u73B0-codegen",children:"\u4E3A\u8868\u5F81\uFF08Representation\uFF09\u5B9E\u73B0 Codegen"}),"\n",(0,i.jsxs)(n.p,{children:["\u5C3D\u7BA1\u6211\u4EEC\u5DF2\u7ECF\u6F14\u793A\u4E86\u5982\u4F55\u5B9E\u73B0 C codegen\uFF0C\u4F46\u7528\u6237\u786C\u4EF6\u53EF\u80FD\u8FD8\u9700\u8981\u5176\u4ED6\u5F62\u5F0F\u7684\u8BA1\u7B97\u56FE\u8868\u5F81\uFF08Graph Representation\uFF09\uFF0C\u5982 JSON\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u7528\u6237\u53EF\u4EE5\u901A\u8FC7\u4FEE\u6539 ",(0,i.jsx)(n.code,{children:"CodegenC"})," \u7C7B\uFF0C\u751F\u6210\u81EA\u5DF1\u7684\u8BA1\u7B97\u56FE\u8868\u5F81\uFF0C\u5E76\u5B9E\u73B0\u4E00\u4E2A\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\uFF0C\u544A\u8BC9 TVM runtime \u5982\u4F55\u6267\u884C\u8FD9\u4E2A\u8BA1\u7B97\u56FE\u8868\u5F81\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:['\u7B80\u5355\u8D77\u89C1\uFF0C\u672C\u6307\u5357\u4E2D\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A "ExampleJSON" \u7684\u8BA1\u7B97\u56FE\u8868\u5F81\u3002 ExampleJSON \u5E76\u4E0D\u662F JSON\uFF0C\u800C\u662F\u6CA1\u6709\u63A7\u5236\u6D41\u7684\u8BA1\u7B97\u56FE\u7684\u7B80\u5355\u8868\u793A\u3002\u4F8B\u5982\uFF0C\u5047\u8BBE\u6709\u4EE5\u4E0B\u540D\u4E3A ',(0,i.jsx)(n.code,{children:"subgraph_0"})," \u7684\u5B50\u56FE\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"input0\n   |\n  add <-- input1\n   |\nsubtract <-- input2\n   |\nmultiply <-- input3\n   |\n  out\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u90A3\u4E48\u8FD9\u4E2A\u5B50\u56FE\u7684 ExampleJON \u770B\u8D77\u6765\u7C7B\u4F3C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"subgraph_0\n  input 0 10 10\n  input 1 10 10\n  input 2 10 10\n  input 3 10 10\n  add 4 inputs: 0 1 shape: 10 10\n  sub 5 inputs: 4 2 shape: 10 10\n  mul 6 inputs: 5 3 shape: 10 10\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"input"})," \u5173\u952E\u5B57\u58F0\u660E\u4E00\u4E2A\u8F93\u5165\u5F20\u91CF\u53CA\u5176 ID \u548C shape\uFF1B\u5176\u4ED6\u8BED\u53E5\u7528 ",(0,i.jsx)(n.code,{children:"<op> <output ID> inputs: [input ID] shape: [shape]"})," \u8BED\u6CD5\u63CF\u8FF0\u4E86\u5176\u8BA1\u7B97\u8FC7\u7A0B\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u672C\u8282\u4E2D\uFF0C\u6211\u4EEC\u8BD5\u56FE\u5B9E\u73B0\u4EE5\u4E0B\u81EA\u5B9A\u4E49 TVM runtime \u6A21\u5757\uFF0C\u6765\u6267\u884C ExampleJSON \u8BA1\u7B97\u56FE\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'runtime::Module ExampleJsonCompiler(const NodeRef& ref) {\n    ExampleJsonCodeGen codegen(ref);\n    std::string code = codegen.gen(); // \u6CE8 1\n    const auto* pf = runtime::Registry::Get("module.examplejson_module_create"); // \u6CE8 2\n    ICHECK(pf != nullptr) << "Cannot find ExampleJson module to create the external runtime module";\n    return (*pf)(code);\n}\nTVM_REGISTER_GLOBAL("relay.ext.examplejsoncompiler").set_body_typed(ExampleJsonCompiler);\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE81"}),"\uFF1A\u7A0D\u540E\u6211\u4EEC\u5C06\u5B9E\u73B0\u4E00\u4E2A\u81EA\u5B9A\u4E49 codegen\uFF0C\u901A\u8FC7\u53D6\u4E00\u4E2A\u5B50\u56FE\u6765\u751F\u6210\u4E00\u4E2A ExampleJSON \u4EE3\u7801\u5B57\u7B26\u4E32\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE82"}),"\uFF1A\u6B64\u884C\u83B7\u53D6\u4E86\u4E00\u4E2A\u7528\u4E8E\u521B\u5EFA\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\u7684\u51FD\u6570\u7684\u6307\u9488\u3002\u53EF\u4EE5\u770B\u5230\u5B83\u91C7\u7528\u521A\u521A\u751F\u6210\u7684 ExampleJSON \u683C\u5F0F\u7684\u5B50\u56FE\u4EE3\u7801\uFF0C\u5E76\u5BF9\u4E00\u4E2A runtime \u6A21\u5757\u8FDB\u884C\u4E86\u521D\u59CB\u5316\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u540E\u7EED\u7AE0\u8282\u4E2D\uFF0C\u6211\u4EEC\u5C06\u4ECB\u7ECD 1\uFF09\u5982\u4F55\u5B9E\u73B0 ",(0,i.jsx)(n.code,{children:"ExampleJsonCodeGen"})," \u548C 2\uFF09\u5982\u4F55\u5B9E\u73B0\u548C\u6CE8\u518C ",(0,i.jsx)(n.code,{children:"examplejson_module_create"}),"\u3002"]}),"\n",(0,i.jsx)(n.h3,{id:"\u5B9E\u73B0-examplejsoncodegen",children:"\u5B9E\u73B0 ExampleJsonCodeGen"}),"\n",(0,i.jsxs)(n.p,{children:["\u4E0E C codegen \u7C7B\u4F3C\uFF0C\u4ECE ",(0,i.jsx)(n.code,{children:"ExprVisitor"})," \u6D3E\u751F ",(0,i.jsx)(n.code,{children:"ExampleJsonCodeGen"})," \u4EE5\u8BBF\u95EE\u5668\u6A21\u5F0F\u8FDB\u884C\u5B50\u56FE\u904D\u5386\u3002\u53E6\u4E00\u65B9\u9762\uFF0C\u56E0\u4E3A\u4E0D\u4F1A\u7528\u5230 TVM C++ wrapper\uFF0C\u6240\u4EE5\u4E0D\u5FC5\u7EE7\u627F ",(0,i.jsx)(n.code,{children:"CodegenCBase"}),"\u3002 codegen \u7C7B\u5B9E\u73B0\u5982\u4E0B\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'#include <tvm/relay/expr_functor.h>\n#include <tvm/relay/transform.h>\n#include <tvm/relay/type.h>\n#include <tvm/runtime/module.h>\n#include <tvm/runtime/object.h>\n\n#include <fstream>\n#include <sstream>\n\nnamespace tvm {\nnamespace relay {\nnamespace contrib {\n\nclass ExampleJsonCodeGen : public ExprVisitor {\n  public:\n    explicit ExampleJsonCodeGen();\n\n    // \u6CE8 1\n    void VisitExpr_(const VarNode* node) { /* Skip in this example. */ }\n    void VisitExpr_(const CallNode* call) final { /* Skip in this example. */ }\n\n    // \u6CE8 2\n    std::string gen(NodeRef& ref) {\n        this->code = "";\n        if (ref->IsInstance<FunctionNode>()) {\n            this->visit(Downcast<Function>(ref));\n        } else if (ref->IsInstance<relay::ModuleNode>()) {\n            relay::Module mod = Downcast<relay::Module>(ref);\n            for (const auto& it : mod->functions) {\n                this->visit(Downcast<Function>(it.second));\n            }\n        } else {\n            LOG(FATAL) << "The input ref is expected to be a Relay function or module";\n        }\n        return this->code;\n    }\n\n  private:\n      /*! \\brief The function id that represents a C source function. */\n     std::string code;\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE81"}),"\uFF1A\u518D\u6B21\u5B9E\u73B0\u76F8\u5E94\u7684 visitor \u51FD\u6570\uFF0C\u4EE5\u751F\u6210 ExampleJSON \u4EE3\u7801\uFF0C\u5E76\u5C06\u5176\u5B58\u50A8\u5230\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"code"})," \u4E2D\uFF08\u7531\u4E8E\u4E0E C codegen \u57FA\u672C\u4E00\u81F4\uFF0C\u8FD9\u91CC\u8DF3\u8FC7\u4E86 visitor \u51FD\u6570\u7684\u5B9E\u73B0\uFF09\u3002\u5B8C\u6210\u8BA1\u7B97\u56FE\u8BBF\u95EE\u540E\uFF0C\u5728 ",(0,i.jsx)(n.code,{children:"code"})," \u4E2D\u4F1A\u751F\u6210\u4E00\u4E2A ExampleJSON \u8BA1\u7B97\u56FE\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE82"}),"\uFF1A\u5B9A\u4E49\u5185\u90E8 API ",(0,i.jsx)(n.code,{children:"gen"})," \u6765\u83B7\u53D6\u5B50\u56FE\uFF0C\u5E76\u751F\u6210 ExampleJSON \u4EE3\u7801\u3002\u7528\u6237\u53EF\u4EE5\u4F9D\u636E\u4E2A\u4EBA\u559C\u597D\uFF0C\u4E3A\u8FD9\u4E2A API \u547D\u540D\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u63A5\u4E0B\u6765\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u81EA\u5B9A\u4E49 runtime\uFF0C\u6765\u5229\u7528 ",(0,i.jsx)(n.code,{children:"ExampleJsonCodeGen"})," \u7684\u8F93\u51FA\u3002"]}),"\n",(0,i.jsx)(n.h3,{id:"\u5B9E\u73B0\u81EA\u5B9A\u4E49-runtime",children:"\u5B9E\u73B0\u81EA\u5B9A\u4E49 runtime"}),"\n",(0,i.jsxs)(n.p,{children:["\u672C\u8282\u5C06\u9010\u6B65\u6F14\u793A\u5982\u4F55\u81EA\u5B9A\u4E49 TVM runtime\uFF0C\u5E76\u5C06\u5176\u6CE8\u518C\u5230 TVM runtime \u6A21\u5757\u3002\u81EA\u5B9A\u4E49 runtime \u5E94\u4F4D\u4E8E ",(0,i.jsx)(n.code,{children:"src/runtime/contrib/<your-runtime-name>/"}),'\u3002\u672C\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u5C06 runtime \u547D\u540D\u4E3A "example_ext_runtime"\u3002']}),"\n",(0,i.jsxs)(n.p,{children:["\u9996\u5148\uFF0C\u5982\u4E0B\u6240\u793A\u5B9A\u4E49\u4E00\u4E2A\u81EA\u5B9A\u4E49 runtime \u7C7B\u3002\u6CE8\u610F\uFF1A\u8FD9\u4E2A\u7C7B\u5FC5\u987B\u7531 TVM ",(0,i.jsx)(n.code,{children:"ModuleNode"})," \u6D3E\u751F\uFF0C\u4EE5\u4FDD\u8BC1\u4E0E\u5176\u4ED6 TVM runtime \u6A21\u5757\u517C\u5BB9\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'#include <dmlc/logging.h>\n#include <tvm/runtime/c_runtime_api.h>\n#include <tvm/runtime/memory.h>\n#include <tvm/runtime/module.h>\n#include <tvm/runtime/ndarray.h>\n#include <tvm/runtime/object.h>\n#include <tvm/runtime/packed_func.h>\n#include <tvm/runtime/registry.h>\n\n#include <fstream>\n#include <cmath>\n#include <map>\n#include <sstream>\n#include <string>\n#include <vector>\n\nnamespace tvm {\nnamespace runtime {\nclass ExampleJsonModule : public ModuleNode {\n public:\n  explicit ExampleJsonModule(std::string graph_json);\n\n  PackedFunc GetFunction(const std::string& name,\n                         const ObjectPtr<Object>& sptr_to_self) final;\n\n  const char* type_key() const { return "examplejson"; }\n\n  void SaveToBinary(dmlc::Stream* stream) final;\n\n  static Module LoadFromBinary(void* strm);\n\n  static Module Create(const std::string& path);\n\n  std::string GetSource(const std::string& format = "");\n\n  void Run(int id, const std::vector<int>& inputs, int output);\n\n  void ParseJson(const std::string& json);\n\n private:\n  /* \\brief \u4EE3\u8868\u8BA1\u7B97\u56FE\u7684 json \u5B57\u7B26\u4E32\u3002 */\n  std::string graph_json_;\n  /* \\brief \u6B63\u5728\u88AB\u5904\u7406\u7684\u5B50\u56FE\u3002 */\n  std::string curr_subgraph_;\n  /*! \\brief \u7531\u5B50\u56FE id \u5230\u8282\u70B9\u6761\u76EE\u7684\u7B80\u5355\u56FE\u3002 */\n  std::map<std::string, std::vector<NodeEntry> > graph_;\n  /* \\brief \u5305\u542B\u56FE\u4E2D\u6BCF\u4E00\u4E2A\u8282\u70B9\u7684\u5F20\u91CF\u7684\u7B80\u5355\u6C60\u3002 */\n  std::vector<NDArray> data_entry_;\n  /* \\brief \u4ECE\u8282\u70B9 id \u5230\u7B97\u5B50\u540D\u5B57\u7684\u6620\u5C04\u3002 */\n  std::vector<std::string> op_id_;\n};\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u4EE5\u4E0B\u8FD9\u4E9B\u4ECE ",(0,i.jsx)(n.code,{children:"ModuleNode"})," \u6D3E\u751F\u7684\u51FD\u6570\uFF0C\u5FC5\u987B\u5728 ",(0,i.jsx)(n.code,{children:"ExampleJsonModule"})," \u4E2D\u5B9E\u73B0\uFF1A"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u6784\u9020\u51FD\u6570\uFF1A\u8FD9\u4E2A\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5E94\u8BE5\u63A5\u6536\u4E00\u4E2A\u8868\u5F81\u4E2D\u7684\u5B50\u56FE\uFF0C\u7528\u6237\u53EF\u4EE5\u81EA\u884C\u51B3\u5B9A\u5904\u7406\u548C\u5B58\u50A8\u7684\u683C\u5F0F\u3002\u4FDD\u5B58\u7684\u5B50\u56FE\u53EF\u4EE5\u88AB\u4EE5\u4E0B\u4E24\u4E2A\u51FD\u6570\u4F7F\u7528\u3002"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GetFunction"}),"\uFF1A\u8FD9\u662F\u8FD9\u4E2A\u7C7B\u4E2D\u6700\u91CD\u8981\u7684\u51FD\u6570\u3002\u5F53 TVM runtime \u8981\u4F7F\u7528\u7F16\u8BD1\u5668\u6807\u7B7E\uFF08compiler tag\uFF09\u6267\u884C\u5B50\u56FE\u65F6\uFF0C\u5B83\u4F1A\u4ECE\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\u4E2D\u8C03\u7528\u6B64\u51FD\u6570\u3002\u5B83\u63D0\u4F9B\u51FD\u6570\u540D\u53CA runtime \u53C2\u6570\uFF0C",(0,i.jsx)(n.code,{children:"GetFunction"})," \u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6253\u5305\u7684\u51FD\u6570\u5B9E\u73B0\uFF0C\u4EE5\u4F9B TVM runtime \u6267\u884C\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SaveToBinary"})," \u548C ",(0,i.jsx)(n.code,{children:"LoadFromBinary"}),"\uFF1A",(0,i.jsx)(n.code,{children:"SaveToBinary"})," \u5C06 runtime \u6A21\u5757\u5E8F\u5217\u5316\u4E3A\u4E8C\u8FDB\u5236\u683C\u5F0F\u4EE5\u4F9B\u540E\u7EED\u90E8\u7F72\u3002\u7528\u6237\u4F7F\u7528 ",(0,i.jsx)(n.code,{children:"export_library"})," API \u65F6\uFF0CTVM \u4F1A\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u3002\u53E6\u4E00\u65B9\u9762\uFF0C\u7531\u4E8E\u7528\u6237\u8FD9\u65F6\u4F7F\u7528\u7684\u662F\u81EA\u5DF1\u7684\u8BA1\u7B97\u56FE\u8868\u5F81\uFF0C\u56E0\u6B64\u5FC5\u987B\u786E\u4FDD ",(0,i.jsx)(n.code,{children:"LoadFromBinary"})," \u80FD\u591F\u91C7\u7528",(0,i.jsx)(n.code,{children:"SaveToBinary"})," \u751F\u6210\u7684\u5E8F\u5217\u5316\u4E8C\u8FDB\u5236\u6587\u4EF6\uFF0C\u6765\u6784\u9020\u76F8\u540C\u7684 runtime \u6A21\u5757\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GetSource"}),"\uFF08\u53EF\u9009\uFF09\uFF1A\u5982\u679C\u60F3\u67E5\u770B\u751F\u6210\u7684 ExampleJSON \u4EE3\u7801\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u8FD9\u4E2A\u51FD\u6570\u6765\u8F6C\u5B58\uFF1B\u5426\u5219\u5219\u53EF\u4EE5\u8DF3\u8FC7\u5B9E\u73B0\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"\u5B9E\u73B0\u6784\u9020\u51FD\u6570",children:"\u5B9E\u73B0\u6784\u9020\u51FD\u6570"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:"explicit ExampleJsonModule(std::string graph_json) {\n  this->graph_json_ = graph_json;\n  ParseJson(this->graph_json_);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u63A5\u4E0B\u6765\uFF0C\u5B9E\u73B0 ",(0,i.jsx)(n.code,{children:"ParseJson"})," \u6765\u89E3\u6790 ExampleJSON \u683C\u5F0F\u7684\u5B50\u56FE\uFF0C\u5E76\u5728\u5185\u5B58\u4E2D\u6784\u9020\u4E00\u4E2A\u8BA1\u7B97\u56FE\u4F9B\u540E\u7EED\u4F7F\u7528\u3002\u7531\u4E8E\u672C\u793A\u4F8B\u4E0D\u652F\u6301\u5E26\u6709\u5206\u652F\u7684\u5B50\u56FE\uFF0C\u56E0\u6B64\u53EA\u9700\u7528\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6309\u987A\u5E8F\u5B58\u50A8\u5B50\u56FE\u4E2D\u7684\u6BCF\u4E2A\u8282\u70B9\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'void ParseJson(const std::string& json) {\n  std::string line;\n  std::string curr_subgraph;\n  std::stringstream ss(json);\n\n  while (std::getline(ss, line, \'\\n\')) {\n    std::stringstream ss2(line);\n    std::string token;\n    int id = 0;\n\n    ss2 >> token;\n    if (token.find("subgraph_") != std::string::npos) {\n      curr_subgraph = token;\n      continue;\n    }\n\n    ss2 >> id;\n    if (op_id_.size() <= static_cast<size_t>(id)) {\n      op_id_.resize(id + 1);\n      data_entry_.resize(id + 1);\n    }\n\n    int64_t total_elements = 1;\n    std::vector<int64_t> shape;\n    if (token == "input") {\n      int64_t size = 0;\n      while (ss2 >> size) {\n        total_elements *= size;\n        shape.push_back(size);\n      }\n    } else {\n      op_id_[id] = token; // \u6CE8 1\n      bool shape_data = false;\n      NodeEntry entry;\n      while (ss2 >> token) {\n        if (token == "shape:") {\n          shape_data = true;\n        } else if (shape_data) {\n          total_elements *= std::stoll(token);\n          shape.push_back(std::stoll(token));\n        } else if (token != "inputs:") {\n          entry.inputs.push_back(std::stoi(token));\n        }\n      }\n      entry.id = id;\n      entry.output = id;\n      graph_[curr_subgraph].push_back(entry); // \u6CE8 2\n    }\n    DLDevice dev;\n    dev.device_type = static_cast<DLDeviceType>(1);\n    dev.device_id = 0;\n    data_entry_[id] = NDArray::Empty(shape, DLDataType{kDLFloat, 32, 1}, dev); // \u6CE8 3\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE81"}),"\uFF1A\u4F7F\u7528\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"op_id_"})," \u5C06\u5B50\u56FE\u8282\u70B9 ID \u6620\u5C04\u5230\u7B97\u5B50\u540D\u79F0\uFF08\u4F8B\u5982 ",(0,i.jsx)(n.code,{children:"add"}),"\uFF09\uFF0C\u4EE5\u4FBF\u5728 runtime \u4E2D\u8C03\u7528\u76F8\u5E94\u7684\u7B97\u5B50\u51FD\u6570\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE82"}),"\uFF1A\u4F7F\u7528\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.code,{children:"graph_"})," \u4ECE\u5B50\u56FE\u540D\u79F0\u6620\u5C04\u5230\u8282\u70B9\u6570\u7EC4\u3002",(0,i.jsx)(n.code,{children:"GetFunction"})," \u5C06\u5728 runtime \u901A\u8FC7\u5B50\u56FE ID \u67E5\u8BE2\u8BA1\u7B97\u56FE\u8282\u70B9\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6CE83"}),"\uFF1A\u4F7F\u7528\u7C7B\u53D8\u91CF ",(0,i.jsx)(n.em,{children:"data_entry_"})," \u5C06\u5B50\u56FE\u8282\u70B9 ID \u6620\u5C04\u5230\u5F20\u91CF\u6570\u636E\u5360\u4F4D\u7B26\u3002\u5C06\u8F93\u5165\u548C\u8F93\u51FA\u653E\u5165 runtime \u4E2D\u5BF9\u5E94\u7684\u6570\u636E\u6761\u76EE\u4E2D\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"\u5B9E\u73B0-getfunction",children:"\u5B9E\u73B0 GetFunction"}),"\n",(0,i.jsxs)(n.p,{children:["\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u540E\uFF0C\u4EE5\u4E0A\u7C7B\u53D8\u91CF\u51C6\u5907\u5C31\u7EEA\u3002\u63A5\u4E0B\u6765\u5B9E\u73B0 ",(0,i.jsx)(n.code,{children:"GetFunction"})," \u4E3A TVM runtime \u63D0\u4F9B\u53EF\u6267\u884C\u7684\u5B50\u56FE\u51FD\u6570\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'PackedFunc GetFunction(const std::string& name,\n                       const ObjectPtr<Object>& sptr_to_self) final {\n  if (this->graph_.find(name) != this->graph_.end()) {\n    this->curr_subgraph_ = name;\n    return PackedFunc([sptr_to_self, this](TVMArgs args, TVMRetValue* rv) {\n\n      // Copy input tensors to corresponding data entries.\n      for (auto i = 0; i < args.size(); ++i) {\n        ICHECK(args[i].type_code() == kNDArrayContainer || args[i].type_code() == kArrayHandle)\n            << "Expect NDArray or DLTensor as inputs\\n";\n        if (args[i].type_code() == kArrayHandle) {\n          DLTensor* arg = args[i];\n          this->data_entry_[i].CopyFrom(arg);\n        } else {\n          NDArray arg = args[i];\n          this->data_entry_[i].CopyFrom(arg);\n        }\n      }\n\n      // Execute the subgraph.\n      for (const auto& it : this->graph_[this->curr_subgraph_]) {\n        this->Run(it.id, it.inputs, it.output);\n      }\n      ICHECK_GT(graph_.count(this->curr_subgraph_), 0U);\n\n      // Copy the output from a data entry back to TVM runtime argument.\n      auto out_idx = graph_[this->curr_subgraph_].back().output;\n      if (args[args.size() - 1].type_code() == kArrayHandle) {\n        DLTensor* arg = args[args.size() - 1];\n        this->data_entry_[out_idx].CopyTo(arg);\n      } else {\n        NDArray arg = args[args.size() - 1];\n        this->data_entry_[out_idx].CopyTo(arg);\n      }\n      *rv = data_entry_.back();\n    });\n  } else {\n    LOG(FATAL) << "Unknown subgraph: " << name << "\\n";\n    return PackedFunc();\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u53EF\u4EE5\u770B\u51FA\uFF0C",(0,i.jsx)(n.code,{children:"GetFunction"})," \u7531\u4E09\u4E2A\u4E3B\u8981\u90E8\u5206\u7EC4\u6210\u3002\u7B2C\u4E00\u90E8\u5206\u5C06\u6570\u636E\u4ECE TVM runtime \u53C2\u6570\uFF0C\u590D\u5236\u5230\u6784\u9020\u51FD\u6570\u4E2D\u6307\u5B9A\u7684\u5BF9\u5E94\u6570\u636E\u6761\u76EE\u3002\u7B2C\u4E8C\u90E8\u5206\u4F7F\u7528 ",(0,i.jsx)(n.code,{children:"Run"})," \u51FD\u6570\u6267\u884C\u5B50\u56FE\uFF08\u5E76\u7A0D\u540E\u5B9E\u73B0\uFF09\uFF0C\u5E76\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u53E6\u4E00\u4E2A\u6570\u636E\u6761\u76EE\u3002\u7B2C\u4E09\u90E8\u5206\u5C06\u8F93\u51FA\u6570\u636E\u6761\u76EE\u4E2D\u7684\u7ED3\u679C\uFF0C\u590D\u5236\u56DE\u5BF9\u5E94\u7684 TVM runtime \u53C2\u6570\u8FDB\u884C\u8F93\u51FA\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"\u5B9E\u73B0-run",children:"\u5B9E\u73B0 Run"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Run"})," \u51FD\u6570\u63A5\u6536 1\uFF09\u5B50\u56FE ID\uFF0C2\uFF09\u8F93\u5165\u6570\u636E\u6761\u76EE\u7D22\u5F15\u5217\u8868\u548C 3\uFF09\u8F93\u51FA\u6570\u636E\u6761\u76EE\u7D22\u5F15\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'void Run(int id, const std::vector<int>& inputs, int output) {\n  // Make a list data entry indexs.\n  std::vector<int> args(inputs.begin(), inputs.end());\n  args.push_back(output);\n\n  // Initialize data holders.\n  std::vector<TVMValue> values(args.size());\n  std::vector<int> type_codes(args.size());\n\n  // Initialize a TVM arg setter with TVMValue and its type code.\n  TVMArgsSetter setter(values.data(), type_codes.data());\n\n  // Set each argument to its corresponding data entry.\n  if (op_id_[id] == "add" || op_id_[id] == "sub" || op_id_[id] == "mul") {\n    for (size_t i = 0; i < args.size(); i++) {\n      setter(i, data_entry_[args[i]]);\n    }\n  }\n\n  // Invoke the corresponding operator function.\n  if (op_id_[id] == "add") {\n    Add(values.data(), type_codes.data(), args.size());\n  } else if (op_id_[id] == "sub") {\n    Sub(values.data(), type_codes.data(), args.size());\n  } else if (op_id_[id] == "mul") {\n    Mul(values.data(), type_codes.data(), args.size());\n  } else {\n    LOG(FATAL) << "Unknown op: " << op_id_[id] << "\\n";\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Run"})," \u51FD\u6570\u4E3B\u8981\u5305\u62EC\u4E24\u90E8\u5206\u3002\u7B2C\u4E00\u90E8\u5206\u8D1F\u8D23\u5206\u914D ",(0,i.jsx)(n.code,{children:"TVMValue"})," \u5217\u8868\uFF0C\u5E76\u6620\u5C04\u76F8\u5E94\u7684\u6570\u636E\u8F93\u5165\u5757\u3002\u8FD9\u4E5F\u4F1A\u6210\u4E3A\u7B97\u5B50\u51FD\u6570\u7684\u53C2\u6570\u3002\u7B2C\u4E8C\u90E8\u5206\u8C03\u7528\u7B97\u5B50\u51FD\u6570\u3002\u5C3D\u7BA1\u4F7F\u7528\u7684 C \u51FD\u6570\u4E0E\u4E0A\u4E00\u4E2A\u793A\u4F8B\u76F8\u540C\uFF0C\u4F46\u7528\u6237\u53EF\u4EE5\u5C06 ",(0,i.jsx)(n.code,{children:"Add"}),"\u3001",(0,i.jsx)(n.code,{children:"Sub"})," \u548C ",(0,i.jsx)(n.code,{children:"Mul"})," \u66FF\u6362\u4E3A\u81EA\u5DF1\u7684\u5F15\u64CE\u3002\u6CE8\u610F\uFF0C\u8FD9\u91CC\u9700\u8981\u786E\u4FDD\u5F15\u64CE\u5C06\u7ED3\u679C\u5B58\u50A8\u5230\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF0C\u4ECE\u800C\u4F7F\u5F97\u5B83\u4EEC\u53EF\u4EE5\u4F20\u8F93\u56DE TVM runtime\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5B9E\u73B0\u4E0A\u8FF0\u529F\u80FD\u540E\uFF0C\u7528\u6237\u81EA\u5B9A\u4E49\u7684 codegen \u548C runtime \u5C31\u53EF\u4EE5\u6267\u884C\u5B50\u56FE\u4E86\u3002\u6700\u540E\u4E00\u6B65\u662F\u6CE8\u518C\u4E00\u4E2A API\uFF08",(0,i.jsx)(n.code,{children:"examplejson_module_create"}),"\uFF09\u6765\u521B\u5EFA\u8FD9\u4E2A\u6A21\u5757\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'TVM_REGISTER_GLOBAL("module.examplejson_module_create")\n.set_body_typed([](std::string code){\n    auto n = make_object<ExampleJsonModule>(code);\n    return runtime::Module(n);\n});\n'})}),"\n",(0,i.jsx)(n.h4,{id:"\u5B9E\u73B0-savetobinary-\u548C-loadfrombinary",children:"\u5B9E\u73B0 SaveToBinary \u548C LoadFromBinary"}),"\n",(0,i.jsxs)(n.p,{children:["\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u4E0E\u5176\u4ED6 TVM runtime \u7528\u6CD5\u4E00\u81F4\u7684\u81EA\u5B9A\u4E49 runtime \u7684\u4E3B\u8981\u529F\u80FD\u3002\u4F46\u662F\uFF0C\u5F53\u7528\u6237\u60F3\u8981\u5C06\u6784\u5EFA\u7684 runtime \u4FDD\u5B58\u5230\u78C1\u76D8\u4EE5\u8FDB\u884C\u90E8\u7F72\u65F6\uFF0CTVM \u4E0D\u77E5\u9053\u5982\u4F55\u4FDD\u5B58\u3002\u8FD9\u5C31\u662F\u5B9E\u73B0 ",(0,i.jsx)(n.code,{children:"SaveToBinary"})," \u548C ",(0,i.jsx)(n.code,{children:"LoadFromBinary"})," \u7684\u539F\u56E0\uFF0C\u5B83\u4EEC\u4F1A\u544A\u8BC9 TVM \u8FD9\u4E2A\u81EA\u5B9A\u4E49 runtime \u5982\u4F55\u6301\u4E45\u5316\u548C\u590D\u539F\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u9996\u5148\u5B9E\u73B0 ",(0,i.jsx)(n.code,{children:"SaveToBinary"})," \u51FD\u6570\uFF0C\u5141\u8BB8\u7528\u6237\u5C06\u6B64\u6A21\u5757\u4FDD\u5B58\u5728\u78C1\u76D8\u4E2D\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:"void SaveToBinary(dmlc::Stream* stream) final {\n    stream->Write(this->graph_json_);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u8FD9\u4E2A\u51FD\u6570\u975E\u5E38\u7B80\u5355\u3002\u5728\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u6211\u4EEC\u91C7\u53D6\u7684\u552F\u4E00\u53C2\u6570\u662F\u4E00\u4E2A\u5B50\u56FE\u8868\u5F81\uFF08subgraph representation\uFF09\u3002\u4E5F\u5C31\u662F\u8BF4\u53EA\u9700\u4E00\u4E2A\u5B50\u56FE\u8868\u5F81\u6765\u6784\u9020/\u6062\u590D\u8FD9\u4E2A\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\u3002",(0,i.jsx)(n.code,{children:"SaveToBinary"})," \u53EA\u662F\u5C06\u5B50\u56FE\u5199\u5230\u4E00\u4E2A\u8F93\u51FA\u7684 DMLC \u6D41\u4E2D\uFF0C\u5F53\u7528\u6237\u4F7F\u7528 ",(0,i.jsx)(n.code,{children:"export_library"})," API \u8F93\u51FA\u6A21\u5757\u65F6\uFF0C\u81EA\u5B9A\u4E49\u6A21\u5757\u5C06\u662F\u4E00\u4E2A\u5B50\u56FE\u7684 ExampleJSON \u6D41\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"LoadFromBinary"})," \u8BFB\u53D6\u5B50\u56FE\u6D41\u5E76\u91CD\u65B0\u6784\u5EFA\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\u7684\u6D41\u7A0B\u4E0E\u6B64\u7C7B\u4F3C\uFF1A"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:"static Module LoadFromBinary(void* strm) {\n  dmlc::Stream* stream = static_cast<dmlc::Stream*>(strm);\n  std::string graph_json;\n  stream->Read(&graph_json);\n  auto n = tvm::runtime::make_object<ExampleJsonModule>(graph_json);\n  return Module(n);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u6B64\u5916\uFF0C\u8FD8\u9700\u8981\u6CE8\u518C\u4EE5\u4E0B\u51FD\u6570\uFF0C\u542F\u7528\u76F8\u5E94\u7684 Python API\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'TVM_REGISTER_GLOBAL("module.loadbinary_examplejson")\n.set_body_typed(ExampleJsonModule::LoadFromBinary);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u4E0A\u8FF0\u6CE8\u518C\u610F\u5473\u7740\u5F53\u7528\u6237\u8C03\u7528 ",(0,i.jsx)(n.code,{children:"tvm.runtime.load_module(lib_path)"})," API\uFF0C\u5E76\u4E14\u5BFC\u51FA\u5E93\u6709\u4E00\u4E2A ExampleJSON \u6D41\u65F6\uFF0C",(0,i.jsx)(n.code,{children:"LoadFromBinary"})," \u5C06\u88AB\u8C03\u7528\u4EE5\u521B\u5EFA\u76F8\u540C\u7684\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u53E6\u5916\uFF0C\u5982\u679C\u60F3\u652F\u6301\u76F4\u63A5\u4ECE ExampleJSON \u6587\u4EF6\u521B\u5EFA\u6A21\u5757\uFF0C\u8FD8\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u975E\u5E38\u7B80\u5355\u7684\u51FD\u6570\uFF0C\u5E76\u6CE8\u518C\u4E00\u4E2A Python API\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c++",children:'static Module Create(const std::string& path) {\n    std::ifstream filep;\n    filep.open(path, std::ios::in);\n    std::string graph_json;\n    std::string line;\n    while (std::getline(filep, line)) {\n        graph_json += line;\n        graph_json += "\\n";\n    }\n    filep.close();\n    auto n = tvm::runtime::make_object<ExampleJsonModule>(graph_json);\n    return Module(n);\n}\n\nTVM_REGISTER_GLOBAL("module.loadfile_examplejson")\n.set_body([](TVMArgs args, TVMRetValue* rv) {\n    *rv = ExampleJsonModule::Create(args[0]);\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u8FD9\u610F\u5473\u7740\u7528\u6237\u53EF\u4EE5\u624B\u52A8\u7F16\u5199/\u4FEE\u6539 ExampleJSON \u6587\u4EF6\uFF0C\u5E76\u4F7F\u7528 Python API ",(0,i.jsx)(n.code,{children:'tvm.runtime.load_module("mysubgraph.examplejson", "examplejson")'})," \u6784\u5EFA\u81EA\u5B9A\u4E49\u6A21\u5757\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u603B\u7ED3",children:"\u603B\u7ED3"}),"\n",(0,i.jsx)(n.p,{children:"\u6C47\u603B\u524D\u6587\u91CD\u70B9\uFF1A"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u4ECE ",(0,i.jsx)(n.code,{children:"ExprVisitor"})," \u548C ",(0,i.jsx)(n.code,{children:"CodegenCBase"}),"\uFF08\u4EC5\u9002\u7528\u4E8E C codegen\uFF09\u6D3E\u751F\u7684 codegen \u7C7B\uFF0C\u5177\u6709\u4EE5\u4E0B\u529F\u80FD\uFF1A","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"VisitExpr_(const CallNode* call)"})," \u6536\u96C6\u8C03\u7528\u8282\u70B9\u4FE1\u606F\u3002"]}),"\n",(0,i.jsx)(n.li,{children:"\u6536\u96C6\u5B50\u56FE\u4FE1\u606F\u6240\u9700\u7684\u5176\u4ED6 visitor \u51FD\u6570\u3002"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"JIT"})," \u751F\u6210\u5B50\u56FE\u4EE3\u7801\u3002"]}),"\n",(0,i.jsx)(n.li,{children:"\u6CE8\u518C codegen\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\u521B\u5EFA ",(0,i.jsx)(n.code,{children:"CSourceModule"})," \u7684\u51FD\u6570\uFF08\u7528\u4E8E C codegen\uFF09\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:["\u4ECE ",(0,i.jsx)(n.code,{children:"ModuleNode"})," \u6D3E\u751F\u7684 runtime \u6A21\u5757\u7C7B\uFF0C\u5177\u6709\u4EE5\u4E0B\u529F\u80FD\uFF08\u7528\u4E8E\u8BA1\u7B97\u56FE\u8868\u5F81\uFF09\u3002","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u6784\u9020\u51FD\u6570\u3002"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GetFunction"})," \u751F\u6210\u4E0E TVM runtime \u517C\u5BB9\u7684 ",(0,i.jsx)(n.code,{children:"PackedFunc"}),"\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Run"})," \u6267\u884C\u5B50\u56FE\u3002"]}),"\n",(0,i.jsx)(n.li,{children:"\u6CE8\u518C runtime creation API\u3002"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SaveToBinary"})," \u548C ",(0,i.jsx)(n.code,{children:"LoadFromBinary"})," \u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:["\u6CE8\u518C ",(0,i.jsx)(n.code,{children:"LoadFromBinary"})," API \u4E3A",(0,i.jsx)(n.code,{children:"tvm.runtime.load_module(your_module_lib_path)"}),"\u63D0\u4F9B\u652F\u6301\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:["\uFF08\u53EF\u9009\uFF09",(0,i.jsx)(n.code,{children:"Create"})," \u652F\u6301\u4ECE\u8868\u5F81\u7684\u5B50\u56FE\u6587\u4EF6\uFF0C\u6784\u5EFA\u81EA\u5B9A\u4E49 runtime \u6A21\u5757\u3002"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"\u4E00\u4E2A\u6CE8\u91CA\u5668\uFF0C\u7528\u4E8E\u6CE8\u91CA\u7528\u6237 Relay \u7A0B\u5E8F\uFF0C\u5229\u7528\u7F16\u8BD1\u5668\u548C runtime\uFF08\u5F85\u5B9A\uFF09\u3002"}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},21494:function(e,n,r){r.d(n,{Z:function(){return d},a:function(){return s}});var c=r(39546);let i={},t=c.createContext(i);function s(e){let n=c.useContext(t);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),c.createElement(t.Provider,{value:n},e.children)}}}]);