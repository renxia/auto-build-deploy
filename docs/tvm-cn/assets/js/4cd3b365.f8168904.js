"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["29038"],{4464:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>s,metadata:()=>r,assets:()=>o,toc:()=>l,contentTitle:()=>a});var r=JSON.parse('{"id":"how_to/te_schedules/reduction","title":"\u89C4\u7EA6\uFF08reduce\uFF09","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/how_to/te_schedules/02-reduction.md","sourceDirName":"how_to/te_schedules","slug":"/how_to/te_schedules/reduction","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/te_schedules/reduction","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/how_to/te_schedules/02-reduction.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":2,"frontMatter":{"title":"\u89C4\u7EA6\uFF08reduce\uFF09"},"sidebar":"tutorialSidebar","previous":{"title":"TVM \u4E2D\u7684 Schedule \u539F\u8BED","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/te_schedules/primitive"},"next":{"title":"\u5185\u8054\u53CA\u6570\u5B66\u51FD\u6570","permalink":"/docs/tvm-cn/docs/0.12.0/how_to/te_schedules/math"}}'),i=t("74132"),d=t("21494");let s={title:"\u89C4\u7EA6\uFF08reduce\uFF09"},a="\u89C4\u7EA6\uFF08reduce\uFF09",o={},l=[{value:"\u63CF\u8FF0\u884C\u7684\u603B\u548C",id:"\u63CF\u8FF0\u884C\u7684\u603B\u548C",level:2},{value:"Schedule \u89C4\u7EA6",id:"schedule-\u89C4\u7EA6",level:2},{value:"\u89C4\u7EA6\u56E0\u5F0F\u5206\u89E3\u548C\u5E76\u884C\u5316",id:"\u89C4\u7EA6\u56E0\u5F0F\u5206\u89E3\u548C\u5E76\u884C\u5316",level:2},{value:"\u8DE8\u7EBF\u7A0B\u89C4\u7EA6",id:"\u8DE8\u7EBF\u7A0B\u89C4\u7EA6",level:2},{value:"\u7528\u4E8C\u7EF4\u89C4\u7EA6\u63CF\u8FF0\u5377\u79EF",id:"\u7528\u4E8C\u7EF4\u89C4\u7EA6\u63CF\u8FF0\u5377\u79EF",level:2},{value:"\u5B9A\u4E49\u4E00\u822C\u4EA4\u6362\u89C4\u7EA6\u8FD0\u7B97",id:"\u5B9A\u4E49\u4E00\u822C\u4EA4\u6362\u89C4\u7EA6\u8FD0\u7B97",level:2},{value:"\u603B\u7ED3",id:"\u603B\u7ED3",level:2}];function u(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\u89C4\u7EA6reduce",children:"\u89C4\u7EA6\uFF08reduce\uFF09"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["\u5355\u51FB ",(0,i.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/work_with_schedules/reduction.html#sphx-glr-download-how-to-work-with-schedules-reduction-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,i.jsx)(n.a,{href:"https://tqchen.github.io/",children:"Tianqi Chen"})]}),"\n",(0,i.jsx)(n.p,{children:"\u672C\u6587\u4ECB\u7ECD\u5982\u4F55\u5728 TVM \u4E2D\u89C4\u7EA6\uFF08reduce\uFF09\u3002\u5173\u8054\u89C4\u7EA6\u7B97\u5B50\uFF08\u5982 sum/max/min\uFF09\u662F\u7EBF\u6027\u4EE3\u6570\u8FD0\u7B97\u7684\u5178\u578B\u6784\u9020\u5757\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from __future__ import absolute_import, print_function\n\nimport tvm\nimport tvm.testing\nfrom tvm import te\nimport numpy as np\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u63CF\u8FF0\u884C\u7684\u603B\u548C",children:"\u63CF\u8FF0\u884C\u7684\u603B\u548C"}),"\n",(0,i.jsxs)(n.p,{children:["\u5728 NumPy \u8BED\u6CD5\u4E2D\uFF0C\u8BA1\u7B97\u884C\u7684\u603B\u548C\u53EF\u4EE5\u5199\u6210 ",(0,i.jsx)(n.code,{children:"B = numpy.sum(A, axis=1)"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u4E0B\u9762\u51E0\u884C\u63CF\u8FF0\u4E86\u884C\u6C42\u548C\u64CD\u4F5C\u3002\u4E3A\u521B\u5EFA\u4E00\u4E2A\u89C4\u7EA6\u516C\u5F0F\uFF0C\u7528 ",(0,i.jsx)(n.code,{children:"te.reduce_axis"})," \u58F0\u660E\u4E86\u4E00\u4E2A reduction \u8F74\uFF0C\u5B83\u63A5\u6536\u89C4\u7EA6\u7684\u8303\u56F4\u3002 ",(0,i.jsx)(n.code,{children:"te.sum"})," \u63A5\u6536\u8981\u89C4\u7EA6\u7684\u8868\u8FBE\u5F0F\u4EE5\u53CA reduction \u8F74\uFF0C\u5E76\u8BA1\u7B97\u58F0\u660E\u8303\u56F4\u5185\u6240\u6709 k \u503C\u7684\u603B\u548C\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u7B49\u6548\u7684 C \u4EE3\u7801\u5982\u4E0B\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"for (int i = 0; i < n; ++i) {\n  B[i] = 0;\n  for (int k = 0; k < m; ++k) {\n    B[i] = B[i] + A[i][k];\n  }\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'n = te.var("n")\nm = te.var("m")\nA = te.placeholder((n, m), name="A")\nk = te.reduce_axis((0, m), "k")\nB = te.compute((n,), lambda i: te.sum(A[i, k], axis=k), name="B")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"schedule-\u89C4\u7EA6",children:"Schedule \u89C4\u7EA6"}),"\n",(0,i.jsx)(n.p,{children:"\u6709\u51E0\u79CD\u65B9\u6CD5\u53EF\u4EE5 Schedule Reduce\uFF0C\u5148\u6253\u5370\u51FA\u9ED8\u8BA4 Schedule \u7684 IR \u4EE3\u7801\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"s = te.create_schedule(B.op)\nprint(tvm.lower(s, [A, B], simple_mode=True))\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'@main = primfn(A_1: handle, B_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [(stride: int32*n: int32)], [], type="auto"),\n             B: Buffer(B_2: Pointer(float32), float32, [(stride_1: int32*n)], [], type="auto")}\n  buffer_map = {A_1: A, B_1: B}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [n, m: int32], [stride, stride_2: int32], type="auto"), B_1: B_3: Buffer(B_2, float32, [n], [stride_1], type="auto")} {\n  for (i: int32, 0, n) {\n    B[(i*stride_1)] = 0f32\n    for (k: int32, 0, m) {\n      B[(i*stride_1)] = (B[(i*stride_1)] + A[((i*stride) + (k*stride_2))])\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"IR \u4EE3\u7801\u4E0E C \u4EE3\u7801\u975E\u5E38\u76F8\u4F3C\uFF0Creduction \u8F74\u7C7B\u4F3C\u4E8E\u666E\u901A\u8F74\uFF0C\u53EF\u4EE5\u62C6\u5206\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u4EE5\u4E0B\u4EE3\u7801\u6309\u4E0D\u540C\u7684\u56E0\u5B50\u5C06 B \u7684\u884C\u8F74\u548C\u8F74\u8FDB\u884C\u62C6\u5206\uFF0C\u5F97\u5230\u4E00\u4E2A\u5D4C\u5957 reduction\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"ko, ki = s[B].split(B.op.reduce_axis[0], factor=16)\nxo, xi = s[B].split(B.op.axis[0], factor=32)\nprint(tvm.lower(s, [A, B], simple_mode=True))\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'@main = primfn(A_1: handle, B_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [(stride: int32*n: int32)], [], type="auto"),\n             B: Buffer(B_2: Pointer(float32), float32, [(stride_1: int32*n)], [], type="auto")}\n  buffer_map = {A_1: A, B_1: B}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [n, m: int32], [stride, stride_2: int32], type="auto"), B_1: B_3: Buffer(B_2, float32, [n], [stride_1], type="auto")} {\n  for (i.outer: int32, 0, floordiv((n + 31), 32)) {\n    for (i.inner: int32, 0, 32) {\n      if @tir.likely((((i.outer*32) + i.inner) < n), dtype=bool) {\n        B[(((i.outer*32) + i.inner)*stride_1)] = 0f32\n      }\n      if @tir.likely((((i.outer*32) + i.inner) < n), dtype=bool) {\n        for (k.outer: int32, 0, floordiv((m + 15), 16)) {\n          for (k.inner: int32, 0, 16) {\n            if @tir.likely((((k.outer*16) + k.inner) < m), dtype=bool) {\n              let cse_var_1: int32 = ((i.outer*32) + i.inner)\n              B[(cse_var_1*stride_1)] = (B[(cse_var_1*stride_1)] + A[((cse_var_1*stride) + (((k.outer*16) + k.inner)*stride_2))])\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u628A B \u7684\u884C\u7ED1\u5B9A\u5230 GPU \u7EBF\u7A0B\uFF0C\u4ECE\u800C\u6784\u5EFA\u4E00\u4E2A GPU \u5185\u6838\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'s[B].bind(xo, te.thread_axis("blockIdx.x"))\ns[B].bind(xi, te.thread_axis("threadIdx.x"))\nprint(tvm.lower(s, [A, B], simple_mode=True))\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'@main = primfn(A_1: handle, B_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [(stride: int32*n: int32)], [], type="auto"),\n             B: Buffer(B_2: Pointer(float32), float32, [(stride_1: int32*n)], [], type="auto")}\n  buffer_map = {A_1: A, B_1: B}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [n, m: int32], [stride, stride_2: int32], type="auto"), B_1: B_3: Buffer(B_2, float32, [n], [stride_1], type="auto")} {\n  attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = floordiv((n + 31), 32);\n  attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32 {\n    if @tir.likely((((blockIdx.x*32) + threadIdx.x) < n), dtype=bool) {\n      B[(((blockIdx.x*32) + threadIdx.x)*stride_1)] = 0f32\n    }\n    for (k.outer: int32, 0, floordiv((m + 15), 16)) {\n      for (k.inner: int32, 0, 16) {\n        if @tir.likely((((blockIdx.x*32) + threadIdx.x) < n), dtype=bool) {\n          if @tir.likely((((k.outer*16) + k.inner) < m), dtype=bool) {\n            B[(((blockIdx.x*32) + threadIdx.x)*stride_1)] = (B[(((blockIdx.x*32) + threadIdx.x)*stride_1)] + A[((((blockIdx.x*32) + threadIdx.x)*stride) + (((k.outer*16) + k.inner)*stride_2))])\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u89C4\u7EA6\u56E0\u5F0F\u5206\u89E3\u548C\u5E76\u884C\u5316",children:"\u89C4\u7EA6\u56E0\u5F0F\u5206\u89E3\u548C\u5E76\u884C\u5316"}),"\n",(0,i.jsx)(n.p,{children:"\u6784\u5EFA\u89C4\u7EA6\u65F6\u4E0D\u80FD\u7B80\u5355\u5730\u5728 reduction \u8F74\u4E0A\u5E76\u884C\u5316\uFF0C\u9700\u8981\u5212\u5206\u89C4\u7EA6\uFF0C\u5C06\u5C40\u90E8\u89C4\u7EA6\u7ED3\u679C\u5B58\u50A8\u5728\u6570\u7EC4\u4E2D\uFF0C\u7136\u540E\u518D\u5BF9\u4E34\u65F6\u6570\u7EC4\u8FDB\u884C\u89C4\u7EA6\u3002"}),"\n",(0,i.jsx)(n.p,{children:"rfactor \u539F\u8BED\u5BF9\u8BA1\u7B97\u8FDB\u884C\u4E86\u4E0A\u8FF0\u91CD\u5199\uFF0C\u5728\u4E0B\u9762\u7684\u8C03\u5EA6\u4E2D\uFF0CB \u7684\u7ED3\u679C\u88AB\u5199\u5165\u4E00\u4E2A\u4E34\u65F6\u7ED3\u679C B.rf\uFF0C\u5206\u89E3\u540E\u7684\u7EF4\u5EA6\u6210\u4E3A B.rf \u7684\u7B2C\u4E00\u4E2A\u7EF4\u5EA6\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"s = te.create_schedule(B.op)\nko, ki = s[B].split(B.op.reduce_axis[0], factor=16)\nBF = s.rfactor(B, ki)\nprint(tvm.lower(s, [A, B], simple_mode=True))\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'@main = primfn(A_1: handle, B_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {A: Buffer(A_2: Pointer(float32), float32, [(stride: int32*n: int32)], [], type="auto"),\n             B: Buffer(B_2: Pointer(float32), float32, [(stride_1: int32*n)], [], type="auto")}\n  buffer_map = {A_1: A, B_1: B}\n  preflattened_buffer_map = {A_1: A_3: Buffer(A_2, float32, [n, m: int32], [stride, stride_2: int32], type="auto"), B_1: B_3: Buffer(B_2, float32, [n], [stride_1], type="auto")} {\n  allocate(B.rf: Pointer(global float32), float32, [(n*16)]), storage_scope = global {\n    for (k.inner: int32, 0, 16) {\n      for (i: int32, 0, n) {\n        B.rf_1: Buffer(B.rf, float32, [(16*n)], [])[((k.inner*n) + i)] = 0f32\n        for (k.outer: int32, 0, floordiv((m + 15), 16)) {\n          if @tir.likely((((k.outer*16) + k.inner) < m), dtype=bool) {\n            B.rf_1[((k.inner*n) + i)] = (B.rf_1[((k.inner*n) + i)] + A[((i*stride) + (((k.outer*16) + k.inner)*stride_2))])\n          }\n        }\n      }\n    }\n    for (ax0: int32, 0, n) {\n      B[(ax0*stride_1)] = 0f32\n      for (k.inner.v: int32, 0, 16) {\n        B[(ax0*stride_1)] = (B[(ax0*stride_1)] + B.rf_1[((k.inner.v*n) + ax0)])\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"B \u7684\u8C03\u5EA6\u7B97\u5B50\u88AB\u91CD\u5199\u4E3A B.f \u7684\u89C4\u7EA6\u7ED3\u679C\u5728\u7B2C\u4E00\u4E2A\u8F74\u4E0A\u7684\u548C\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"print(s[B].op.body)\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"[reduce(combiner=comm_reducer(result=[(x + y)], lhs=[x], rhs=[y], identity_element=[0f]), source=[B.rf[k.inner.v, ax0]], init=[], axis=[iter_var(k.inner.v, range(min=0, ext=16))], where=(bool)1, value_index=0)]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u8DE8\u7EBF\u7A0B\u89C4\u7EA6",children:"\u8DE8\u7EBF\u7A0B\u89C4\u7EA6"}),"\n",(0,i.jsx)(n.p,{children:"\u63A5\u4E0B\u6765\u53EF\u4EE5\u5728\u56E0\u5B50\u8F74\u4E0A\u8FDB\u884C\u5E76\u884C\u5316\uFF0C\u8FD9\u91CC B \u7684 reduction \u8F74\u88AB\u6807\u8BB0\u4E3A\u7EBF\u7A0B\uFF0C\u5982\u679C\u552F\u4E00\u7684 reduction \u8F74\u5728\u8BBE\u5907\u4E2D\u53EF\u4EE5\u8FDB\u884C\u8DE8\u7EBF\u7A0B\u89C4\u7EA6\uFF0C\u5219 TVM \u5141\u8BB8\u5C06 reduction \u8F74\u6807\u8BB0\u4E3A thread\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u4E5F\u53EF\u4EE5\u76F4\u63A5\u5728\u89C4\u7EA6\u8F74\u4E0A\u8BA1\u7B97 BF\u3002\u6700\u7EC8\u751F\u6210\u7684\u5185\u6838\u4F1A\u5C06\u884C\u9664\u4EE5 blockIdx.x\uFF0C\u5C06 threadIdx.y \u5217\u9664\u4EE5 threadIdx.x\uFF0C\u6700\u540E\u5BF9 threadIdx.x \u8FDB\u884C\u8DE8\u7EBF\u7A0B\u89C4\u7EA6\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'xo, xi = s[B].split(s[B].op.axis[0], factor=32)\ns[B].bind(xo, te.thread_axis("blockIdx.x"))\ns[B].bind(xi, te.thread_axis("threadIdx.y"))\ntx = te.thread_axis("threadIdx.x")\ns[B].bind(s[B].op.reduce_axis[0], tx)\ns[BF].compute_at(s[B], s[B].op.reduce_axis[0])\ns[B].set_store_predicate(tx.var.equal(0))\nfcuda = tvm.build(s, [A, B], "cuda")\nprint(fcuda.imported_modules[0].get_source())\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'#if defined(__CUDA_ARCH__) && (__CUDA_ARCH__ < 700)\n#define __shfl_sync(mask, var, lane, width) \\\n        __shfl((var), (lane), (width))\n\n#define __shfl_down_sync(mask, var, offset, width) \\\n        __shfl_down((var), (offset), (width))\n\n#define __shfl_up_sync(mask, var, offset, width) \\\n        __shfl_up((var), (offset), (width))\n#endif\n\n#ifdef _WIN32\n  using uint = unsigned int;\n  using uchar = unsigned char;\n  using ushort = unsigned short;\n  using int64_t = long long;\n  using uint64_t = unsigned long long;\n#else\n  #define uint unsigned int\n  #define uchar unsigned char\n  #define ushort unsigned short\n  #define int64_t long long\n  #define uint64_t unsigned long long\n#endif\nextern "C" __global__ void __launch_bounds__(512) default_function_kernel0(float* __restrict__ A, float* __restrict__ B, int m, int n, int stride, int stride1, int stride2) {\n  float B_rf[1];\n  float red_buf0[1];\n  B_rf[0] = 0.000000e+00f;\n  for (int k_outer = 0; k_outer < (m >> 4); ++k_outer) {\n    if (((((int)blockIdx.x) * 32) + ((int)threadIdx.y)) < n) {\n      B_rf[0] = (B_rf[0] + A[((((((int)blockIdx.x) * 32) + ((int)threadIdx.y)) * stride) + (((k_outer * 16) + ((int)threadIdx.x)) * stride1))]);\n    }\n  }\n  for (int k_outer1 = 0; k_outer1 < (((m & 15) + 15) >> 4); ++k_outer1) {\n    if (((((int)blockIdx.x) * 32) + ((int)threadIdx.y)) < n) {\n      if (((((m >> 4) * 16) + (k_outer1 * 16)) + ((int)threadIdx.x)) < m) {\n        B_rf[0] = (B_rf[0] + A[((((((int)blockIdx.x) * 32) + ((int)threadIdx.y)) * stride) + (((((m >> 4) * 16) + (k_outer1 * 16)) + ((int)threadIdx.x)) * stride1))]);\n      }\n    }\n  }\n  uint mask[1];\n  float t0[1];\n  red_buf0[0] = B_rf[0];\n  mask[0] = (__activemask() & ((uint)(65535 << (((int)threadIdx.y) * 16))));\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 8, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 4, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 2, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  t0[0] = __shfl_down_sync(mask[0], red_buf0[0], 1, 32);\n  red_buf0[0] = (red_buf0[0] + t0[0]);\n  red_buf0[0] = __shfl_sync(mask[0], red_buf0[0], (((int)threadIdx.y) * 16), 32);\n  if (((int)threadIdx.x) == 0) {\n    B[(((((int)blockIdx.x) * 32) + ((int)threadIdx.y)) * stride2)] = red_buf0[0];\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u7ED3\u679C\u5185\u6838\u4E0E NumPy \u8FDB\u884C\u6BD4\u8F83\u6765\u9A8C\u8BC1\u7ED3\u679C\u5185\u6838\u7684\u6B63\u786E\u6027\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"nn = 128\ndev = tvm.cuda(0)\na = tvm.nd.array(np.random.uniform(size=(nn, nn)).astype(A.dtype), dev)\nb = tvm.nd.array(np.zeros(nn, dtype=B.dtype), dev)\nfcuda(a, b)\ntvm.testing.assert_allclose(b.numpy(), np.sum(a.numpy(), axis=1), rtol=1e-4)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u7528\u4E8C\u7EF4\u89C4\u7EA6\u63CF\u8FF0\u5377\u79EF",children:"\u7528\u4E8C\u7EF4\u89C4\u7EA6\u63CF\u8FF0\u5377\u79EF"}),"\n",(0,i.jsx)(n.p,{children:"\u5728 TVM \u4E2D\uFF0C\u7528\u7B80\u5355\u7684\u4E8C\u7EF4\u89C4\u7EA6\u6765\u63CF\u8FF0\u5377\u79EF\uFF08\u8FC7\u6EE4\u5668\u5927\u5C0F = [3, 3]\uFF0C\u6B65\u957F = [1, 1]\uFF09\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'n = te.var("n")\nInput = te.placeholder((n, n), name="Input")\nFilter = te.placeholder((3, 3), name="Filter")\ndi = te.reduce_axis((0, 3), name="di")\ndj = te.reduce_axis((0, 3), name="dj")\nOutput = te.compute(\n    (n - 2, n - 2),\n    lambda i, j: te.sum(Input[i + di, j + dj] * Filter[di, dj], axis=[di, dj]),\n    name="Output",\n)\ns = te.create_schedule(Output.op)\nprint(tvm.lower(s, [Input, Filter, Output], simple_mode=True))\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'@main = primfn(Input_1: handle, Filter_1: handle, Output_1: handle) -> ()\n  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}\n  buffers = {Input: Buffer(Input_2: Pointer(float32), float32, [(stride: int32*n: int32)], [], type="auto"),\n             Filter: Buffer(Filter_2: Pointer(float32), float32, [9], []),\n             Output: Buffer(Output_2: Pointer(float32), float32, [((n - 2)*(n - 2))], [])}\n  buffer_map = {Input_1: Input, Filter_1: Filter, Output_1: Output}\n  preflattened_buffer_map = {Input_1: Input_3: Buffer(Input_2, float32, [n, n], [stride, stride_1: int32], type="auto"), Filter_1: Filter_3: Buffer(Filter_2, float32, [3, 3], []), Output_1: Output_3: Buffer(Output_2, float32, [(n - 2), (n - 2)], [])} {\n  for (i: int32, 0, (n - 2)) {\n    for (j: int32, 0, (n - 2)) {\n      Output[((i*(n - 2)) + j)] = 0f32\n      for (di: int32, 0, 3) {\n        for (dj: int32, 0, 3) {\n          Output[((i*(n - 2)) + j)] = (Output[((i*(n - 2)) + j)] + (Input[(((i + di)*stride) + ((j + dj)*stride_1))]*Filter[((di*3) + dj)]))\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u5B9A\u4E49\u4E00\u822C\u4EA4\u6362\u89C4\u7EA6\u8FD0\u7B97",children:"\u5B9A\u4E49\u4E00\u822C\u4EA4\u6362\u89C4\u7EA6\u8FD0\u7B97"}),"\n",(0,i.jsxs)(n.p,{children:["\u9664\u4E86 ",(0,i.jsx)(n.code,{children:"te.sum"}),", ",(0,i.jsx)(n.code,{children:"tvm.te.min"})," \u548C ",(0,i.jsx)(n.code,{children:"tvm.te.max"})," \u7B49\u5185\u7F6E\u89C4\u7EA6\u64CD\u4F5C\u5916\uFF0C\u8FD8\u53EF\u4EE5\u901A\u8FC7 ",(0,i.jsx)(n.code,{children:"te.comm_reducer"})," \u5B9A\u4E49\u4EA4\u6362\u89C4\u7EA6\u64CD\u4F5C\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'n = te.var("n")\nm = te.var("m")\nproduct = te.comm_reducer(lambda x, y: x * y, lambda t: tvm.tir.const(1, dtype=t), name="product")\nA = te.placeholder((n, m), name="A")\nk = te.reduce_axis((0, m), name="k")\nB = te.compute((n,), lambda i: product(A[i, k], axis=k), name="B")\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["\u6267\u884C\u6D89\u53CA\u591A\u4E2A\u503C\u7684\u89C4\u7EA6\uFF0C\u4F8B\u5982 ",(0,i.jsx)(n.code,{children:"argmax"}),"\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5143\u7EC4\u8F93\u5165\u6765\u5B8C\u6210\u3002\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605 ",(0,i.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/work_with_schedules/tuple_inputs.html#reduction-with-tuple-inputs",children:"\u4F7F\u7528\u534F\u4F5C\u8F93\u5165\u63CF\u8FF0\u89C4\u7EA6"}),"\u3002"]})}),"\n",(0,i.jsx)(n.h2,{id:"\u603B\u7ED3",children:"\u603B\u7ED3"}),"\n",(0,i.jsx)(n.p,{children:"\u672C\u6559\u7A0B\u6F14\u793A\u4E86\u5982\u4F55\u89C4\u7EA6 schedule\u3002"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u7528 reduce_axis \u63CF\u8FF0\u89C4\u7EA6\u3002"}),"\n",(0,i.jsx)(n.li,{children:"\u5982\u9700\u5E76\u884C\u6027\uFF08parallelism\uFF09\uFF0C\u7528 rfactor \u6765\u5206\u89E3\u8F74\u3002"}),"\n",(0,i.jsxs)(n.li,{children:["\u901A\u8FC7 ",(0,i.jsx)(n.code,{children:"te.comm_reducer"})," \u5B9A\u4E49\u65B0\u7684\u89C4\u7EA6\u64CD\u4F5C\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/2a0982f8ca0176cb17713d28286536e4/reduction.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Areduction.py"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/10d831d158490a9ee3abd1901806fc11/reduction.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Areduction.ipynb"})})]})}function c(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},21494:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var r=t(39546);let i={},d=r.createContext(i);function s(e){let n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);