"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["21043"],{88688:function(e,s,a){a.r(s),a.d(s,{default:()=>o,frontMatter:()=>r,metadata:()=>n,assets:()=>m,toc:()=>d,contentTitle:()=>i});var n=JSON.parse('{"id":"how_to/relay/build_network","title":"\u6784\u5EFA\u56FE\u5377\u79EF\u7F51\u7EDC","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.10.0/how_to/relay/01-build_network.md","sourceDirName":"how_to/relay","slug":"/how_to/relay/build_network","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/relay/build_network","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.10.0/how_to/relay/01-build_network.md","tags":[],"version":"0.10.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":1,"frontMatter":{"title":"\u6784\u5EFA\u56FE\u5377\u79EF\u7F51\u7EDC"},"sidebar":"tutorialSidebar","previous":{"title":"\u4F7F\u7528 Relay","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/relay/"},"next":{"title":"\u5728 Relay \u4E2D\u4F7F\u7528\u5916\u90E8\u5E93","permalink":"/docs/tvm-cn/docs/0.10.0/how_to/relay/extenal_lib"}}'),t=a("74132"),l=a("21494");let r={title:"\u6784\u5EFA\u56FE\u5377\u79EF\u7F51\u7EDC"},i="\u6784\u5EFA\u56FE\u5377\u79EF\u7F51\u7EDC",m={},d=[{value:"\u4F7F\u7528 PyTorch \u540E\u7AEF\u5728 DGL \u4E2D\u5B9A\u4E49 GCN",id:"\u4F7F\u7528-pytorch-\u540E\u7AEF\u5728-dgl-\u4E2D\u5B9A\u4E49-gcn",level:2},{value:"\u5B9A\u4E49\u52A0\u8F7D\u6570\u636E\u96C6\u548C\u8BC4\u4F30\u51C6\u786E\u6027\u7684\u51FD\u6570",id:"\u5B9A\u4E49\u52A0\u8F7D\u6570\u636E\u96C6\u548C\u8BC4\u4F30\u51C6\u786E\u6027\u7684\u51FD\u6570",level:2},{value:"\u52A0\u8F7D\u6570\u636E\u5E76\u8BBE\u7F6E\u6A21\u578B\u53C2\u6570",id:"\u52A0\u8F7D\u6570\u636E\u5E76\u8BBE\u7F6E\u6A21\u578B\u53C2\u6570",level:2},{value:"\u8BBE\u7F6E DGL-PyTorch \u6A21\u578B\u4EE5\u53D6\u5F97\u6700\u597D\u7684\u7ED3\u679C",id:"\u8BBE\u7F6E-dgl-pytorch-\u6A21\u578B\u4EE5\u53D6\u5F97\u6700\u597D\u7684\u7ED3\u679C",level:2},{value:"\u8FD0\u884C DGL \u6A21\u578B\u5E76\u6D4B\u8BD5\u51C6\u786E\u6027",id:"\u8FD0\u884C-dgl-\u6A21\u578B\u5E76\u6D4B\u8BD5\u51C6\u786E\u6027",level:2},{value:"\u5728 Relay \u4E2D\u5B9A\u4E49\u56FE\u5377\u79EF\u5C42",id:"\u5728-relay-\u4E2D\u5B9A\u4E49\u56FE\u5377\u79EF\u5C42",level:2},{value:"\u51C6\u5907 GraphConv \u5C42\u6240\u9700\u7684\u53C2\u6570",id:"\u51C6\u5907-graphconv-\u5C42\u6240\u9700\u7684\u53C2\u6570",level:2},{value:"\u9010\u5C42\u53E0\u52A0",id:"\u9010\u5C42\u53E0\u52A0",level:2},{value:"\u4F7F\u7528 TVM \u7F16\u8BD1\u548C\u8FD0\u884C",id:"\u4F7F\u7528-tvm-\u7F16\u8BD1\u548C\u8FD0\u884C",level:2},{value:"\u8FD0\u884C TVM \u6A21\u578B\uFF0C\u6D4B\u8BD5\u51C6\u786E\u6027\u5E76\u4F7F\u7528 DGL \u8FDB\u884C\u9A8C\u8BC1",id:"\u8FD0\u884C-tvm-\u6A21\u578B\u6D4B\u8BD5\u51C6\u786E\u6027\u5E76\u4F7F\u7528-dgl-\u8FDB\u884C\u9A8C\u8BC1",level:2}];function c(e){let s={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",header:"header",math:"math",mi:"mi",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"\u6784\u5EFA\u56FE\u5377\u79EF\u7F51\u7EDC",children:"\u6784\u5EFA\u56FE\u5377\u79EF\u7F51\u7EDC"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["\u5355\u51FB ",(0,t.jsx)(s.a,{href:"https://tvm.apache.org/docs/how_to/work_with_relay/build_gcn.html#sphx-glr-download-how-to-work-with-relay-build-gcn-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,t.jsx)(s.a,{href:"https://yulunyao.io/",children:"Yulun Yao"}),"\uFF0C",(0,t.jsx)(s.a,{href:"https://homes.cs.washington.edu/~cyulin/",children:"Chien-Yu Lin"})]}),"\n",(0,t.jsx)(s.p,{children:"\u672C\u6587\u4ECB\u7ECD\u5982\u4F55\u7528 Relay \u6784\u5EFA\u56FE\u5377\u79EF\u7F51\u7EDC\uFF08GCN\uFF09\u3002\u672C\u6559\u7A0B\u6F14\u793A\u5728 Cora \u6570\u636E\u96C6\u4E0A\u8FD0\u884C GCN\u3002Cora \u6570\u636E\u96C6\u662F\u56FE\u795E\u7ECF\u7F51\u7EDC\uFF08GNN\uFF09\u7684 benchmark\uFF0C\u540C\u65F6\u662F\u652F\u6301 GNN \u8BAD\u7EC3\u548C\u63A8\u7406\u7684\u6846\u67B6\u3002\u6211\u4EEC\u76F4\u63A5\u4ECE DGL \u5E93\u52A0\u8F7D\u6570\u636E\u96C6\u6765\u4E0E DGL \u8FDB\u884C\u540C\u7C7B\u6BD4\u8F83\u3002"}),"\n",(0,t.jsxs)(s.p,{children:["\u6709\u5173 DGL \u5B89\u88C5\uFF0C\u53C2\u9605 ",(0,t.jsx)(s.a,{href:"https://docs.dgl.ai/install/index.html",children:"DGL \u6587\u6863"}),"\u3002"]}),"\n",(0,t.jsxs)(s.p,{children:["\u6709\u5173 PyTorch \u5B89\u88C5\uFF0C\u53C2\u9605 ",(0,t.jsx)(s.a,{href:"https://pytorch.org/get-started/locally/",children:"PyTorch \u6307\u5357"}),"\u3002"]}),"\n",(0,t.jsx)(s.h2,{id:"\u4F7F\u7528-pytorch-\u540E\u7AEF\u5728-dgl-\u4E2D\u5B9A\u4E49-gcn",children:"\u4F7F\u7528 PyTorch \u540E\u7AEF\u5728 DGL \u4E2D\u5B9A\u4E49 GCN"}),"\n",(0,t.jsxs)(s.p,{children:["\u8FD9\u90E8\u5206\u91CD\u7528\u4E86 ",(0,t.jsx)(s.a,{href:"https://github.com/dmlc/dgl/tree/master/examples/pytorch/gcn",children:"DGL \u793A\u4F8B"})," \u7684\u4EE3\u7801\u3002"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport dgl\nimport networkx as nx\nfrom dgl.nn.pytorch import GraphConv\n\nclass GCN(nn.Module):\n    def __init__(self, g, n_infeat, n_hidden, n_classes, n_layers, activation):\n        super(GCN, self).__init__()\n        self.g = g\n        self.layers = nn.ModuleList()\n        self.layers.append(GraphConv(n_infeat, n_hidden, activation=activation))\n        for i in range(n_layers - 1):\n            self.layers.append(GraphConv(n_hidden, n_hidden, activation=activation))\n        self.layers.append(GraphConv(n_hidden, n_classes))\n\n    def forward(self, features):\n        h = features\n        for i, layer in enumerate(self.layers):\n            # handle api changes for differnt DGL version\n            # \u5904\u7406\u4E0D\u540C DGL \u7248\u672C\u7684\u4E0D\u540C\u51FD\u6570\n            if dgl.__version__ > "0.3":\n                h = layer(self.g, h)\n            else:\n                h = layer(h, self.g)\n        return h\n'})}),"\n",(0,t.jsx)(s.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"Using backend: pytorch\n"})}),"\n",(0,t.jsx)(s.h2,{id:"\u5B9A\u4E49\u52A0\u8F7D\u6570\u636E\u96C6\u548C\u8BC4\u4F30\u51C6\u786E\u6027\u7684\u51FD\u6570",children:"\u5B9A\u4E49\u52A0\u8F7D\u6570\u636E\u96C6\u548C\u8BC4\u4F30\u51C6\u786E\u6027\u7684\u51FD\u6570"}),"\n",(0,t.jsx)(s.p,{children:"\u53EF\u4EE5\u5C06\u8FD9\u90E8\u5206\u66FF\u6362\u4E3A\u4F60\u81EA\u5DF1\u7684\u6570\u636E\u96C6\uFF0C\u672C\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u9009\u62E9\u4ECE DGL \u52A0\u8F7D\u6570\u636E\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'from dgl.data import load_data\nfrom collections import namedtuple\n\ndef load_dataset(dataset="cora"):\n    args = namedtuple("args", ["dataset"])\n    data = load_data(args(dataset))\n\n    # \u5220\u9664\u81EA\u5FAA\u73AF\uFF0C\u907F\u514D\u91CD\u590D\u5C06\u8282\u70B9\u7684\u7279\u5F81\u4F20\u9012\u7ED9\u81EA\u8EAB\n    g = data.graph\n    g.remove_edges_from(nx.selfloop_edges(g))\n    g.add_edges_from(zip(g.nodes, g.nodes))\n\n    return g, data\n\ndef evaluate(data, logits):\n    test_mask = data.test_mask  # \u672A\u5305\u542B\u5728\u8BAD\u7EC3\u9636\u6BB5\u7684\u6D4B\u8BD5\u96C6\n\n    pred = logits.argmax(axis=1)\n    acc = ((pred == data.labels) * test_mask).sum() / test_mask.sum()\n\n    return acc\n'})}),"\n",(0,t.jsx)(s.h2,{id:"\u52A0\u8F7D\u6570\u636E\u5E76\u8BBE\u7F6E\u6A21\u578B\u53C2\u6570",children:"\u52A0\u8F7D\u6570\u636E\u5E76\u8BBE\u7F6E\u6A21\u578B\u53C2\u6570"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'"""\nParameters\n----------\ndataset: str\n    Name of dataset. You can choose from [\'cora\', \'citeseer\', \'pubmed\'].\n\nnum_layer: int\n    number of hidden layers\n\nnum_hidden: int\n    number of the hidden units in the hidden layer\n\ninfeat_dim: int\n    dimension of the input features\n\nnum_classes: int\n    dimension of model output (Number of classes)\n"""\n\ndataset = "cora"\ng, data = load_dataset(dataset)\n\nnum_layers = 1\nnum_hidden = 16\ninfeat_dim = data.features.shape[1]\nnum_classes = data.num_labels\n'})}),"\n",(0,t.jsx)(s.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"Downloading /workspace/.dgl/cora_v2.zip from https://data.dgl.ai/dataset/cora_v2.zip...\nExtracting file to /workspace/.dgl/cora_v2\nFinished data loading and preprocessing.\n  NumNodes: 2708\n  NumEdges: 10556\n  NumFeats: 1433\n  NumClasses: 7\n  NumTrainingSamples: 140\n  NumValidationSamples: 500\n  NumTestSamples: 1000\nDone saving data into cached files.\n/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.graph will be deprecated, please use dataset[0] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.feat will be deprecated, please use g.ndata['feat'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.num_labels will be deprecated, please use dataset.num_classes instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n"})}),"\n",(0,t.jsx)(s.h2,{id:"\u8BBE\u7F6E-dgl-pytorch-\u6A21\u578B\u4EE5\u53D6\u5F97\u6700\u597D\u7684\u7ED3\u679C",children:"\u8BBE\u7F6E DGL-PyTorch \u6A21\u578B\u4EE5\u53D6\u5F97\u6700\u597D\u7684\u7ED3\u679C"}),"\n",(0,t.jsxs)(s.p,{children:["\u7528 ",(0,t.jsx)(s.a,{href:"https://github.com/dmlc/dgl/blob/master/examples/pytorch/gcn/train.py",children:"https://github.com/dmlc/dgl/blob/master/examples/pytorch/gcn/train.py"})," \u8BAD\u7EC3\u6743\u91CD\u3002"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'from tvm.contrib.download import download_testdata\nfrom dgl import DGLGraph\n\nfeatures = torch.FloatTensor(data.features)\ndgl_g = DGLGraph(g)\n\ntorch_model = GCN(dgl_g, infeat_dim, num_hidden, num_classes, num_layers, F.relu)\n\n# \u4E0B\u8F7D\u9884\u8BAD\u7EC3\u7684\u6743\u91CD\nmodel_url = "https://homes.cs.washington.edu/~cyulin/media/gnn_model/gcn_%s.torch" % (dataset)\nmodel_path = download_testdata(model_url, "gcn_%s.pickle" % (dataset), module="gcn_model")\n\n# \u5C06 weights \u52A0\u8F7D\u5230\u6A21\u578B\u4E2D\ntorch_model.load_state_dict(torch.load(model_path))\n'})}),"\n",(0,t.jsx)(s.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.feat will be deprecated, please use g.ndata['feat'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n/usr/local/lib/python3.7/dist-packages/dgl/base.py:45: DGLWarning: Recommend creating graphs by `dgl.graph(data)` instead of `dgl.DGLGraph(data)`.\n  return warnings.warn(message, category=category, stacklevel=1)\n\n<All keys matched successfully>\n"})}),"\n",(0,t.jsx)(s.h2,{id:"\u8FD0\u884C-dgl-\u6A21\u578B\u5E76\u6D4B\u8BD5\u51C6\u786E\u6027",children:"\u8FD0\u884C DGL \u6A21\u578B\u5E76\u6D4B\u8BD5\u51C6\u786E\u6027"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'torch_model.eval()\nwith torch.no_grad():\n    logits_torch = torch_model(features)\nprint("Print the first five outputs from DGL-PyTorch execution\\n", logits_torch[:5])\n\nacc = evaluate(data, logits_torch.numpy())\nprint("Test accuracy of DGL results: {:.2%}".format(acc))\n'})}),"\n",(0,t.jsx)(s.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"Print the first five outputs from DGL-PyTorch execution\n tensor([[-0.2198, -0.7980,  0.0784,  0.9232, -0.9319, -0.7733,  0.9410],\n        [-0.4646, -0.6606, -0.1732,  1.1829, -0.3705, -0.5535,  0.0858],\n        [-0.0031, -0.4156,  0.0175,  0.4765, -0.5887, -0.3609,  0.2278],\n        [-0.8559, -0.8860,  1.4782,  0.9262, -1.3100, -1.0960, -0.0908],\n        [-0.0702, -1.1651,  1.1453, -0.3586, -0.4938, -0.2288,  0.1827]])\n/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.test_mask will be deprecated, please use g.ndata['test_mask'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.label will be deprecated, please use g.ndata['label'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\nTest accuracy of DGL results: 10.00%\n"})}),"\n",(0,t.jsx)(s.h2,{id:"\u5728-relay-\u4E2D\u5B9A\u4E49\u56FE\u5377\u79EF\u5C42",children:"\u5728 Relay \u4E2D\u5B9A\u4E49\u56FE\u5377\u79EF\u5C42"}),"\n",(0,t.jsxs)(s.p,{children:["\u5728 TVM \u4E0A\u8FD0\u884C GCN \u4E4B\u524D\uFF0C\u9996\u5148\u5B9E\u73B0 Graph Convolution Layer\u3002\u53C2\u8003 ",(0,t.jsx)(s.a,{href:"https://github.com/dmlc/dgl/blob/master/python/dgl/nn/mxnet/conv/graphconv.py",children:"https://github.com/dmlc/dgl/blob/master/python/dgl/nn/mxnet/conv/graphconv.py"})," \u4E86\u89E3\u5728 DGL \u4E2D\u4F7F\u7528 MXNet \u540E\u7AEF\u5B9E\u73B0\u7684 GraphConv \u5C42\u7684\u66F4\u591A\u4FE1\u606F\u3002"]}),"\n",(0,t.jsx)(s.p,{children:"\u8BE5\u5C42\u7531\u4EE5\u4E0B\u64CD\u4F5C\u5B9A\u4E49\u3002\u6CE8\u610F\uFF1A\u6211\u4EEC\u7528\u4E24\u4E2A\u8F6C\u7F6E\u6765\u4FDD\u6301 sparse_dense \u7B97\u5B50\u53F3\u4FA7\u7684\u90BB\u63A5\u77E9\u9635\uFF0C\u6B64\u65B9\u6CD5\u662F\u4E34\u65F6\u7684\uFF0C\u63A5\u4E0B\u6765\u51E0\u5468\u5185\u4F1A\u66F4\u65B0\u7A00\u758F\u77E9\u9635\u8F6C\u7F6E\uFF0C\u4F7F\u5F97\u652F\u6301\u5DE6\u7A00\u758F\u7B97\u5B50\u3002"}),"\n",(0,t.jsx)(s.span,{className:"katex-display",children:(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mi,{children:"G"}),(0,t.jsx)(s.mi,{children:"r"}),(0,t.jsx)(s.mi,{children:"a"}),(0,t.jsx)(s.mi,{children:"p"}),(0,t.jsx)(s.mi,{children:"h"}),(0,t.jsx)(s.mi,{children:"C"}),(0,t.jsx)(s.mi,{children:"o"}),(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mi,{children:"v"}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mi,{children:"A"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"H"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"W"}),(0,t.jsx)(s.mo,{stretchy:"false",children:")"}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mi,{children:"A"}),(0,t.jsx)(s.mo,{children:"\u2217"}),(0,t.jsx)(s.mi,{children:"H"}),(0,t.jsx)(s.mo,{children:"\u2217"}),(0,t.jsx)(s.mi,{children:"W"}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mi,{children:"H"}),(0,t.jsx)(s.mo,{children:"\u2217"}),(0,t.jsx)(s.mi,{children:"W"}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mo,{stretchy:"false",children:")"}),(0,t.jsx)(s.mi,{children:"t"})]}),(0,t.jsx)(s.mo,{children:"\u2217"}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mi,{children:"A"}),(0,t.jsx)(s.mi,{children:"t"})]}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mo,{stretchy:"false",children:")"}),(0,t.jsx)(s.mi,{children:"t"})]}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mi,{children:"W"}),(0,t.jsx)(s.mi,{children:"t"})]}),(0,t.jsx)(s.mo,{children:"\u2217"}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mi,{children:"H"}),(0,t.jsx)(s.mi,{children:"t"})]}),(0,t.jsx)(s.mo,{stretchy:"false",children:")"}),(0,t.jsx)(s.mo,{children:"\u2217"}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mi,{children:"A"}),(0,t.jsx)(s.mi,{children:"t"})]}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mo,{stretchy:"false",children:")"}),(0,t.jsx)(s.mi,{children:"t"})]})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"GraphConv(A,H,W)=A\u2217H\u2217W= ((H\u2217W)^{t}\u2217A^{t})^{t} = (( W^{t} \u2217 H^{t})\u2217 A^{t} )^{t}"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"G"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"C"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"o"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,t.jsx)(s.span,{className:"mopen",children:"("}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"A"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.08125em"},children:"H"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"W"}),(0,t.jsx)(s.span,{className:"mclose",children:")"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"A"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.08125em"},children:"H"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"W"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(s.span,{className:"mopen",children:"(("}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.08125em"},children:"H"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1.0936em",verticalAlign:"-0.25em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"W"}),(0,t.jsxs)(s.span,{className:"mclose",children:[(0,t.jsx)(s.span,{className:"mclose",children:")"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8436em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"t"})})})]})})})})})]}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1.0936em",verticalAlign:"-0.25em"}}),(0,t.jsxs)(s.span,{className:"mord",children:[(0,t.jsx)(s.span,{className:"mord mathnormal",children:"A"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8436em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"t"})})})]})})})})})]}),(0,t.jsxs)(s.span,{className:"mclose",children:[(0,t.jsx)(s.span,{className:"mclose",children:")"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8436em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"t"})})})]})})})})})]}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1.0936em",verticalAlign:"-0.25em"}}),(0,t.jsx)(s.span,{className:"mopen",children:"(("}),(0,t.jsxs)(s.span,{className:"mord",children:[(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"W"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8436em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"t"})})})]})})})})})]}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1.0936em",verticalAlign:"-0.25em"}}),(0,t.jsxs)(s.span,{className:"mord",children:[(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.08125em"},children:"H"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8436em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"t"})})})]})})})})})]}),(0,t.jsx)(s.span,{className:"mclose",children:")"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1.0936em",verticalAlign:"-0.25em"}}),(0,t.jsxs)(s.span,{className:"mord",children:[(0,t.jsx)(s.span,{className:"mord mathnormal",children:"A"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8436em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"t"})})})]})})})})})]}),(0,t.jsxs)(s.span,{className:"mclose",children:[(0,t.jsx)(s.span,{className:"mclose",children:")"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8436em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"t"})})})]})})})})})]})]})]})]})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'from tvm import relay\nfrom tvm.contrib import graph_executor\nimport tvm\nfrom tvm import te\n\ndef GraphConv(layer_name, input_dim, output_dim, adj, input, norm=None, bias=True, activation=None):\n    """\n    \u53C2\u6570\n    ----------\n    layer_name: str\n    \u56FE\u5C42\u540D\u79F0\n\n    input_dim: int\n    \u6BCF\u4E2A\u8282\u70B9\u7279\u5F81\u7684\u8F93\u5165\u7EF4\u5EA6\n\n    output_dim: int,\n    \u6BCF\u4E2A\u8282\u70B9\u7279\u5F81\u7684\u8F93\u51FA\u7EF4\u5EA6\n\n    adj: namedtuple,\n    \u7A00\u758F\u683C\u5F0F\u7684\u56FE\u5F62\u8868\u793A\uFF08\u90BB\u63A5\u77E9\u9635\uFF09(`data`\uFF0C`indices`\uFF0C`indptr`)\uFF0C\u5176\u4E2D`data`\u7684 shape \u4E3A[num_nonzeros]\uFF0Cindices`\u7684 shape \u4E3A[num_nonzeros]\uFF0C`indptr`\u7684 shape \u4E3A[num_nodes + 1]\n\n    input: relay.Expr,\n    shape \u4E3A [num_nodes, input_dim] \u7684\u5F53\u524D\u5C42\u7684\u8F93\u5165\u7279\u5F81\n\n    norm: relay.Expr,\n    \u8303\u6570\u4F20\u7ED9\u8BE5\u5C42\uFF0C\u5BF9\u5377\u79EF\u524D\u540E\u7684\u7279\u5F81\u8FDB\u884C\u5F52\u4E00\u5316\u3002\n\n    bias: bool\n    \u5C06 bias \u8BBE\u7F6E\u4E3A True\uFF0C\u5728\u5904\u7406 GCN \u5C42\u65F6\u6DFB\u52A0\u504F\u5DEE\n\n    activation: <function relay.op.nn>,\n    \u6FC0\u6D3B\u51FD\u6570\u9002\u7528\u4E8E\u8F93\u51FA\uFF0C\u4F8B\u5982 relay.nn.{relu\uFF0Csigmoid\uFF0Clog_softmax\uFF0Csoftmax\uFF0Cleaky_relu}\n\n    \u8FD4\u56DE\n    ----------\n    \u8F93\u51FA\uFF1Atvm.relay.Expr\n    \u8BE5\u5C42\u7684\u8F93\u51FA\u5F20\u91CF [num_nodes, output_dim]\n    """\n    if norm is not None:\n        input = relay.multiply(input, norm)\n\n    weight = relay.var(layer_name + ".weight", shape=(input_dim, output_dim))\n    weight_t = relay.transpose(weight)\n    dense = relay.nn.dense(weight_t, input)\n    output = relay.nn.sparse_dense(dense, adj)\n    output_t = relay.transpose(output)\n    if norm is not None:\n        output_t = relay.multiply(output_t, norm)\n    if bias is True:\n        _bias = relay.var(layer_name + ".bias", shape=(output_dim, 1))\n        output_t = relay.nn.bias_add(output_t, _bias, axis=-1)\n    if activation is not None:\n        output_t = activation(output_t)\n    return output_t\n'})}),"\n",(0,t.jsx)(s.h2,{id:"\u51C6\u5907-graphconv-\u5C42\u6240\u9700\u7684\u53C2\u6570",children:"\u51C6\u5907 GraphConv \u5C42\u6240\u9700\u7684\u53C2\u6570"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'import numpy as np\nimport networkx as nx\n\ndef prepare_params(g, data):\n    params = {}\n    params["infeats"] = data.features.numpy().astype(\n        "float32"\n    )  # \u76EE\u524D\u4EC5\u652F\u6301 float32 \u683C\u5F0F\n\n    # \u751F\u6210\u90BB\u63A5\u77E9\u9635\n    adjacency = nx.to_scipy_sparse_matrix(g)\n    params["g_data"] = adjacency.data.astype("float32")\n    params["indices"] = adjacency.indices.astype("int32")\n    params["indptr"] = adjacency.indptr.astype("int32")\n\n    # \u6807\u51C6\u5316 w.r.t.\u8282\u70B9\u7684\u5EA6\n    degs = [g.in_degree[i] for i in range(g.number_of_nodes())]\n    params["norm"] = np.power(degs, -0.5).astype("float32")\n    params["norm"] = params["norm"].reshape((params["norm"].shape[0], 1))\n\n    return params\n\nparams = prepare_params(g, data)\n\n# \u68C0\u67E5\u7279\u5F81\u7684 shape \u548C\u90BB\u63A5\u77E9\u9635\u7684\u6709\u6548\u6027\nassert len(params["infeats"].shape) == 2\nassert (\n    params["g_data"] is not None and params["indices"] is not None and params["indptr"] is not None\n)\nassert params["infeats"].shape[0] == params["indptr"].shape[0] - 1\n'})}),"\n",(0,t.jsx)(s.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.feat will be deprecated, please use g.ndata['feat'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n"})}),"\n",(0,t.jsx)(s.h2,{id:"\u9010\u5C42\u53E0\u52A0",children:"\u9010\u5C42\u53E0\u52A0"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'# \u5728 Relay \u4E2D\u5B9A\u4E49\u8F93\u5165\u7279\u5F81\u3001\u8303\u6570\u3001\u90BB\u63A5\u77E9\u9635\ninfeats = relay.var("infeats", shape=data.features.shape)\nnorm = relay.Constant(tvm.nd.array(params["norm"]))\ng_data = relay.Constant(tvm.nd.array(params["g_data"]))\nindices = relay.Constant(tvm.nd.array(params["indices"]))\nindptr = relay.Constant(tvm.nd.array(params["indptr"]))\n\nAdjacency = namedtuple("Adjacency", ["data", "indices", "indptr"])\nadj = Adjacency(g_data, indices, indptr)\n\n# \u6784\u5EFA 2 \u5C42 GCN\nlayers = []\nlayers.append(\n    GraphConv(\n        layer_name="layers.0",\n        input_dim=infeat_dim,\n        output_dim=num_hidden,\n        adj=adj,\n        input=infeats,\n        norm=norm,\n        activation=relay.nn.relu,\n    )\n)\nlayers.append(\n    GraphConv(\n        layer_name="layers.1",\n        input_dim=num_hidden,\n        output_dim=num_classes,\n        adj=adj,\n        input=layers[-1],\n        norm=norm,\n        activation=None,\n    )\n)\n\n# \u5206\u6790\u81EA\u7531\u53D8\u91CF\u5E76\u751F\u6210 Relay \u51FD\u6570\noutput = layers[-1]\n'})}),"\n",(0,t.jsx)(s.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.feat will be deprecated, please use g.ndata['feat'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n"})}),"\n",(0,t.jsx)(s.h2,{id:"\u4F7F\u7528-tvm-\u7F16\u8BD1\u548C\u8FD0\u884C",children:"\u4F7F\u7528 TVM \u7F16\u8BD1\u548C\u8FD0\u884C"}),"\n",(0,t.jsx)(s.p,{children:"\u5C06\u6743\u91CD\u4ECE PyTorch \u6A21\u578B\u5BFC\u51FA\u5230 Python \u5B57\u5178\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'model_params = {}\nfor param_tensor in torch_model.state_dict():\n    model_params[param_tensor] = torch_model.state_dict()[param_tensor].numpy()\n\nfor i in range(num_layers + 1):\n    params["layers.%d.weight" % (i)] = model_params["layers.%d.weight" % (i)]\n    params["layers.%d.bias" % (i)] = model_params["layers.%d.bias" % (i)]\n\n# \u8BBE\u7F6E TVM \u6784\u5EFA target\ntarget = "llvm"  # \u76EE\u524D\u53EA\u652F\u6301 `llvm` \u4F5C\u4E3A\u76EE\u6807\n\nfunc = relay.Function(relay.analysis.free_vars(output), output)\nfunc = relay.build_module.bind_params_by_name(func, params)\nmod = tvm.IRModule()\nmod["main"] = func\n# \u4F7F\u7528 Relay \u6784\u5EFA\nwith tvm.transform.PassContext(opt_level=0):  # \u76EE\u524D\u53EA\u652F\u6301 opt_level=0\n    lib = relay.build(mod, target, params=params)\n\n# \u751F\u6210\u56FE\u6267\u884C\u5668\ndev = tvm.device(target, 0)\nm = graph_executor.GraphModule(lib["default"](dev))\n'})}),"\n",(0,t.jsx)(s.h2,{id:"\u8FD0\u884C-tvm-\u6A21\u578B\u6D4B\u8BD5\u51C6\u786E\u6027\u5E76\u4F7F\u7528-dgl-\u8FDB\u884C\u9A8C\u8BC1",children:"\u8FD0\u884C TVM \u6A21\u578B\uFF0C\u6D4B\u8BD5\u51C6\u786E\u6027\u5E76\u4F7F\u7528 DGL \u8FDB\u884C\u9A8C\u8BC1"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'m.run()\nlogits_tvm = m.get_output(0).numpy()\nprint("Print the first five outputs from TVM execution\\n", logits_tvm[:5])\n\nlabels = data.labels\ntest_mask = data.test_mask\n\nacc = evaluate(data, logits_tvm)\nprint("Test accuracy of TVM results: {:.2%}".format(acc))\n\nimport tvm.testing\n\n# \u4F7F\u7528 DGL \u6A21\u578B\u9A8C\u8BC1\u7ED3\u679C\ntvm.testing.assert_allclose(logits_torch, logits_tvm, atol=1e-3)\n'})}),"\n",(0,t.jsx)(s.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-plain",children:"Print the first five outputs from TVM execution\n [[-0.21976954 -0.7979525   0.07836491  0.9232204  -0.93188703 -0.7732947\n   0.9410008 ]\n [-0.4645713  -0.66060466 -0.17316166  1.1828876  -0.37051404 -0.5534965\n   0.08579484]\n [-0.00308266 -0.41562504  0.0175378   0.47649348 -0.5886737  -0.3609016\n   0.22782072]\n [-0.8559376  -0.8860172   1.4782399   0.9262254  -1.3099641  -1.0960144\n  -0.09084877]\n [-0.07015878 -1.1651071   1.1452857  -0.35857323 -0.49377596 -0.22878847\n   0.18269953]]\n/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.label will be deprecated, please use g.ndata['label'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\n/usr/local/lib/python3.7/dist-packages/dgl/data/utils.py:286: UserWarning: Property dataset.test_mask will be deprecated, please use g.ndata['test_mask'] instead.\n  warnings.warn('Property {} will be deprecated, please use {} instead.'.format(old, new))\nTest accuracy of TVM results: 10.00%\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://tvm.apache.org/docs/_downloads/dabb6b43ea9ef9d7bd1a3912001deace/build_gcn.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Abuild_gcn.py"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://tvm.apache.org/docs/_downloads/825671e45a9bdc4733400384984cd9dd/build_gcn.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Abuild_gcn.ipynb"})})]})}function o(e={}){let{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},21494:function(e,s,a){a.d(s,{Z:function(){return i},a:function(){return r}});var n=a(39546);let t={},l=n.createContext(t);function r(e){let s=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);