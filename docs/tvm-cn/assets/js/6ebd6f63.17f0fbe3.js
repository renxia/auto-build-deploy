"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["16725"],{83016:function(e,n,a){a.r(n),a.d(n,{default:()=>m,frontMatter:()=>r,metadata:()=>t,assets:()=>s,toc:()=>i,contentTitle:()=>l});var t=JSON.parse('{"id":"how_to/deploy/deploy_models/deploy_quan","title":"\u5728 CUDA \u4E0A\u90E8\u7F72\u91CF\u5316\u6A21\u578B","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/docs/how_to/deploy/deploy_models/07-deploy_quan.md","sourceDirName":"how_to/deploy/deploy_models","slug":"/how_to/deploy/deploy_models/deploy_quan","permalink":"/docs/tvm-cn/docs/how_to/deploy/deploy_models/deploy_quan","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/docs/how_to/deploy/deploy_models/07-deploy_quan.md","tags":[],"version":"current","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":7,"frontMatter":{"title":"\u5728 CUDA \u4E0A\u90E8\u7F72\u91CF\u5316\u6A21\u578B"},"sidebar":"tutorialSidebar","previous":{"title":"\u4F7F\u7528 TVM \u90E8\u7F72\u6846\u67B6\u9884\u91CF\u5316\u6A21\u578B - \u7B2C 3 \u90E8\u5206\uFF08TFLite\uFF09","permalink":"/docs/tvm-cn/docs/how_to/deploy/deploy_models/deploy_prequan_3"},"next":{"title":"\u5728 CPU \u4E0A\u90E8\u7F72 Hugging Face \u526A\u679D\u6A21\u578B","permalink":"/docs/tvm-cn/docs/how_to/deploy/deploy_models/hugging_face"}}'),o=a("74132"),d=a("21494");let r={title:"\u5728 CUDA \u4E0A\u90E8\u7F72\u91CF\u5316\u6A21\u578B"},l="\u5728 CUDA \u4E0A\u90E8\u7F72\u91CF\u5316\u6A21\u578B",s={},i=[{value:"\u51C6\u5907\u6570\u636E\u96C6",id:"\u51C6\u5907\u6570\u636E\u96C6",level:2},{value:"\u5BFC\u5165\u6A21\u578B",id:"\u5BFC\u5165\u6A21\u578B",level:2},{value:"\u91CF\u5316\u6A21\u578B",id:"\u91CF\u5316\u6A21\u578B",level:2},{value:"\u8FD0\u884C\u63A8\u7406",id:"\u8FD0\u884C\u63A8\u7406",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"\u5728-cuda-\u4E0A\u90E8\u7F72\u91CF\u5316\u6A21\u578B",children:"\u5728 CUDA \u4E0A\u90E8\u7F72\u91CF\u5316\u6A21\u578B"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["\u5355\u51FB ",(0,o.jsx)(n.a,{href:"https://tvm.apache.org/docs/how_to/deploy_models/deploy_quantized.html#sphx-glr-download-how-to-deploy-models-deploy-quantized-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,o.jsx)(n.a,{href:"https://github.com/vinx13",children:"Wuwei Lin"})]}),"\n",(0,o.jsxs)(n.p,{children:["\u672C\u6587\u4ECB\u7ECD\u5982\u4F55\u7528 TVM \u81EA\u52A8\u91CF\u5316\uFF08TVM \u7684\u4E00\u79CD\u91CF\u5316\u65B9\u5F0F\uFF09\u3002\u6709\u5173 TVM \u4E2D\u91CF\u5316\u7684\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u53C2\u9605 ",(0,o.jsx)(n.a,{href:"https://discuss.tvm.apache.org/t/quantization-story/3920",children:"\u6B64\u5904"}),"\u3002\u672C\u6559\u7A0B\u5C06\u5728 ImageNet \u4E0A\u5BFC\u5165\u4E00\u4E2A GluonCV \u9884\u8BAD\u7EC3\u6A21\u578B\u5230 Relay\uFF0C\u91CF\u5316 Relay \u6A21\u578B\uFF0C\u7136\u540E\u6267\u884C\u63A8\u7406\u3002"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import tvm\nfrom tvm import te\nfrom tvm import relay\nimport mxnet as mx\nfrom tvm.contrib.download import download_testdata\nfrom mxnet import gluon\nimport logging\nimport os\n\nbatch_size = 1\nmodel_name = "resnet18_v1"\ntarget = "cuda"\ndev = tvm.device(target)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u51C6\u5907\u6570\u636E\u96C6",children:"\u51C6\u5907\u6570\u636E\u96C6"}),"\n",(0,o.jsx)(n.p,{children:"\u4EE5\u4E0B\u6F14\u793A\u5982\u4F55\u4E3A\u91CF\u5316\u51C6\u5907\u6821\u51C6\u6570\u636E\u96C6\uFF0C\u9996\u5148\u4E0B\u8F7D ImageNet \u7684\u9A8C\u8BC1\u96C6\uFF0C\u5E76\u5BF9\u6570\u636E\u96C6\u8FDB\u884C\u9884\u5904\u7406\u3002"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'calibration_rec = download_testdata(\n    "http://data.mxnet.io.s3-website-us-west-1.amazonaws.com/data/val_256_q90.rec",\n    "val_256_q90.rec",\n)\n\ndef get_val_data(num_workers=4):\n    mean_rgb = [123.68, 116.779, 103.939]\n    std_rgb = [58.393, 57.12, 57.375]\n\n    def batch_fn(batch):\n        return batch.data[0].asnumpy(), batch.label[0].asnumpy()\n\n    img_size = 299 if model_name == "inceptionv3" else 224\n    val_data = mx.io.ImageRecordIter(\n        path_imgrec=calibration_rec,\n        preprocess_threads=num_workers,\n        shuffle=False,\n        batch_size=batch_size,\n        resize=256,\n        data_shape=(3, img_size, img_size),\n        mean_r=mean_rgb[0],\n        mean_g=mean_rgb[1],\n        mean_b=mean_rgb[2],\n        std_r=std_rgb[0],\n        std_g=std_rgb[1],\n        std_b=std_rgb[2],\n    )\n    return val_data, batch_fn\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u628A\u6821\u51C6\u6570\u636E\u96C6\uFF08\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF09\u5B9A\u4E49\u4E3A Python \u4E2D\u7684\u751F\u6210\u5668\u5BF9\u8C61\uFF0C\u672C\u6559\u7A0B\u4EC5\u7528\u51E0\u4E2A\u6837\u672C\u8FDB\u884C\u6821\u51C6\u3002"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'calibration_samples = 10\n\ndef calibrate_dataset():\n    val_data, batch_fn = get_val_data()\n    val_data.reset()\n    for i, batch in enumerate(val_data):\n        if i * batch_size >= calibration_samples:\n            break\n        data, _ = batch_fn(batch)\n        yield {"data": data}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u5BFC\u5165\u6A21\u578B",children:"\u5BFC\u5165\u6A21\u578B"}),"\n",(0,o.jsx)(n.p,{children:"\u7528 Relay MxNet \u524D\u7AEF\u4ECE Gluon \u6A21\u578B\u96C6\u5408\uFF08model zoo\uFF09\u4E2D\u5BFC\u5165\u6A21\u578B\u3002"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def get_model():\n    gluon_model = gluon.model_zoo.vision.get_model(model_name, pretrained=True)\n    img_size = 299 if model_name == "inceptionv3" else 224\n    data_shape = (batch_size, 3, img_size, img_size)\n    mod, params = relay.frontend.from_mxnet(gluon_model, {"data": data_shape})\n    return mod, params\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u91CF\u5316\u6A21\u578B",children:"\u91CF\u5316\u6A21\u578B"}),"\n",(0,o.jsx)(n.p,{children:"\u91CF\u5316\u8FC7\u7A0B\u8981\u627E\u5230\u6BCF\u4E00\u5C42\u7684\u6BCF\u4E2A\u6743\u91CD\u548C\u4E2D\u95F4\u7279\u5F81\u56FE\uFF08feature map\uFF09\u5F20\u91CF\u7684 scale\u3002"}),"\n",(0,o.jsx)(n.p,{children:"\u5BF9\u4E8E\u6743\u91CD\u800C\u8A00\uFF0Cscales \u662F\u6839\u636E\u6743\u91CD\u7684\u503C\u76F4\u63A5\u8BA1\u7B97\u51FA\u6765\u7684\u3002\u652F\u6301\u4E24\u79CD\u6A21\u5F0F\uFF1Apower2 \u548C max\u3002\u8FD9\u4E24\u79CD\u6A21\u5F0F\u90FD\u662F\u5148\u627E\u5230\u6743\u91CD\u5F20\u91CF\u5185\u7684\u6700\u5927\u503C\u3002\u5728 power2 \u6A21\u5F0F\u4E0B\uFF0C\u6700\u5927\u503C\u5411\u4E0B\u820D\u5165\u4E3A 2 \u7684\u5E42\u3002\u5982\u679C\u6743\u91CD\u548C\u4E2D\u95F4\u7279\u5F81\u56FE\u7684 scale \u90FD\u662F 2 \u7684\u5E42\uFF0C\u5219\u53EF\u4EE5\u5229\u7528\u79FB\u4F4D\uFF08bit shifting\uFF09\u8FDB\u884C\u4E58\u6CD5\u8FD0\u7B97\uFF0C\u8FD9\u4F7F\u5F97\u8BA1\u7B97\u6548\u7387\u66F4\u9AD8\u3002\u5728 max \u6A21\u5F0F\u4E0B\uFF0C\u6700\u5927\u503C\u7528\u4F5C scale\u3002\u5982\u679C\u4E0D\u8FDB\u884C\u56DB\u820D\u4E94\u5165\uFF0C\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B max \u6A21\u5F0F\u53EF\u80FD\u5177\u6709\u66F4\u597D\u7684\u7CBE\u5EA6\u3002\u5F53 scale \u4E0D\u662F 2 \u7684\u5E42\u65F6\uFF0C\u5C06\u4F7F\u7528\u5B9A\u70B9\u4E58\u6CD5\u3002"}),"\n",(0,o.jsx)(n.p,{children:"\u4E2D\u95F4\u7279\u5F81\u56FE\u53EF\u4EE5\u901A\u8FC7\u6570\u636E\u611F\u77E5\u91CF\u5316\u6765\u627E\u5230 scale\u3002\u6570\u636E\u611F\u77E5\u91CF\u5316\u5C06\u6821\u51C6\u6570\u636E\u96C6\u4F5C\u4E3A\u8F93\u5165\u53C2\u6570\uFF0C\u901A\u8FC7\u6700\u5C0F\u5316\u91CF\u5316\u524D\u540E\u6FC0\u6D3B\u5206\u5E03\u4E4B\u95F4\u7684 KL \u6563\u5EA6\u6765\u8BA1\u7B97 scales\u3002\u6216\u8005\u4E5F\u53EF\u4EE5\u7528\u9884\u5B9A\u4E49\u7684\u5168\u5C40 scales\uFF0C\u8FD9\u6837\u53EF\u4EE5\u8282\u7701\u6821\u51C6\u65F6\u95F4\uFF0C\u4F46\u4F1A\u5F71\u54CD\u51C6\u786E\u6027\u3002"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def quantize(mod, params, data_aware):\n    if data_aware:\n        with relay.quantize.qconfig(calibrate_mode="kl_divergence", weight_scale="max"):\n            mod = relay.quantize.quantize(mod, params, dataset=calibrate_dataset())\n    else:\n        with relay.quantize.qconfig(calibrate_mode="global_scale", global_scale=8.0):\n            mod = relay.quantize.quantize(mod, params)\n    return mod\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u8FD0\u884C\u63A8\u7406",children:"\u8FD0\u884C\u63A8\u7406"}),"\n",(0,o.jsx)(n.p,{children:"\u521B\u5EFA\u4E00\u4E2A Relay VM \u6765\u6784\u5EFA\u548C\u6267\u884C\u6A21\u578B\u3002"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def run_inference(mod):\n    model = relay.create_executor("vm", mod, dev, target).evaluate()\n    val_data, batch_fn = get_val_data()\n    for i, batch in enumerate(val_data):\n        data, label = batch_fn(batch)\n        prediction = model(data)\n        if i > 10:  # \u672C\u6559\u7A0B\u53EA\u5BF9\u51E0\u4E2A\u6837\u672C\u8FDB\u884C\u63A8\u7406\n            break\n\ndef main():\n    mod, params = get_model()\n    mod = quantize(mod, params, data_aware=True)\n    run_inference(mod)\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:268: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n/workspace/python/tvm/relay/build_module.py:411: DeprecationWarning: Please use input parameter mod (tvm.IRModule) instead of deprecated parameter mod (tvm.relay.function.Function)\n  DeprecationWarning,\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\u811A\u672C\u603B\u8FD0\u884C\u65F6\u957F\uFF1A"}),"\uFF081 \u5206 22.338 \u79D2\uFF09"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/7810ecf51bfc05f7d5e8a400ac3e815d/deploy_quantized.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Adeploy_quantized.py"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://tvm.apache.org/docs/_downloads/a269cb38341b190be980a0bd3ea8a625/deploy_quantized.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Adeploy_quantized.ipynb"})})]})}function m(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},21494:function(e,n,a){a.d(n,{Z:function(){return l},a:function(){return r}});var t=a(39546);let o={},d=t.createContext(o);function r(e){let n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);