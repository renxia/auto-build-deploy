"use strict";(self.webpackChunktvm_cn=self.webpackChunktvm_cn||[]).push([["95082"],{60083:function(t,e,n){n.r(e),n.d(e,{default:()=>c,frontMatter:()=>i,metadata:()=>a,assets:()=>l,toc:()=>d,contentTitle:()=>s});var a=JSON.parse('{"id":"topic/vta/tutorials/deploy_darknet","title":"\u5728 VTA \u4E0A\u90E8\u7F72\u6765\u81EA Darknet \u7684\u9884\u8BAD\u7EC3\u89C6\u89C9\u68C0\u6D4B\u6A21\u578B","description":"\u5355\u51FB \u6B64\u5904 \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801","source":"@site/versioned_docs/version-0.12.0/topic/vta/tutorials/04-deploy_darknet.md","sourceDirName":"topic/vta/tutorials","slug":"/topic/vta/tutorials/deploy_darknet","permalink":"/docs/tvm-cn/docs/0.12.0/topic/vta/tutorials/deploy_darknet","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperai/tvm-cn/edit/master/versioned_docs/version-0.12.0/topic/vta/tutorials/04-deploy_darknet.md","tags":[],"version":"0.12.0","lastUpdatedBy":"sparanoid","lastUpdatedAt":1744717810000,"sidebarPosition":4,"frontMatter":{"title":"\u5728 VTA \u4E0A\u90E8\u7F72\u6765\u81EA Darknet \u7684\u9884\u8BAD\u7EC3\u89C6\u89C9\u68C0\u6D4B\u6A21\u578B"},"sidebar":"tutorialSidebar","previous":{"title":"\u5728 VTA \u4E0A\u90E8\u7F72\u6765\u81EA MxNet \u7684\u9884\u8BAD\u7EC3\u89C6\u89C9\u6A21\u578B","permalink":"/docs/tvm-cn/docs/0.12.0/topic/vta/tutorials/deploy_mxnet"},"next":{"title":"2D \u5377\u79EF\u4F18\u5316","permalink":"/docs/tvm-cn/docs/0.12.0/topic/vta/tutorials/conv_opt"}}'),r=n("74132"),o=n("21494");let i={title:"\u5728 VTA \u4E0A\u90E8\u7F72\u6765\u81EA Darknet \u7684\u9884\u8BAD\u7EC3\u89C6\u89C9\u68C0\u6D4B\u6A21\u578B"},s="\u5728 VTA \u4E0A\u90E8\u7F72\u6765\u81EA Darknet \u7684\u9884\u8BAD\u7EC3\u89C6\u89C9\u68C0\u6D4B\u6A21\u578B",l={},d=[{value:"\u5B89\u88C5\u4F9D\u8D56",id:"\u5B89\u88C5\u4F9D\u8D56",level:2},{value:"\u4E0B\u8F7D YOLO \u6807\u7B7E\u540D\u79F0\u548C\u5BF9\u5E94\u63D2\u56FE",id:"\u4E0B\u8F7D-yolo-\u6807\u7B7E\u540D\u79F0\u548C\u5BF9\u5E94\u63D2\u56FE",level:2},{value:"\u5B9A\u4E49\u5E73\u53F0\u548C\u6A21\u578B target",id:"\u5B9A\u4E49\u5E73\u53F0\u548C\u6A21\u578B-target",level:2},{value:"\u83B7\u53D6\u8FDC\u7A0B\u6267\u884C",id:"\u83B7\u53D6\u8FDC\u7A0B\u6267\u884C",level:2},{value:"\u6784\u5EFA\u63A8\u7406\u56FE\u6267\u884C\u5668",id:"\u6784\u5EFA\u63A8\u7406\u56FE\u6267\u884C\u5668",level:2},{value:"\u6267\u884C\u56FE\u50CF\u68C0\u6D4B\u63A8\u7406",id:"\u6267\u884C\u56FE\u50CF\u68C0\u6D4B\u63A8\u7406",level:2}];function p(t){let e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"\u5728-vta-\u4E0A\u90E8\u7F72\u6765\u81EA-darknet-\u7684\u9884\u8BAD\u7EC3\u89C6\u89C9\u68C0\u6D4B\u6A21\u578B",children:"\u5728 VTA \u4E0A\u90E8\u7F72\u6765\u81EA Darknet \u7684\u9884\u8BAD\u7EC3\u89C6\u89C9\u68C0\u6D4B\u6A21\u578B"})}),"\n",(0,r.jsx)(e.admonition,{type:"note",children:(0,r.jsxs)(e.p,{children:["\u5355\u51FB ",(0,r.jsx)(e.a,{href:"https://tvm.apache.org/docs/topic/vta/tutorials/frontend/deploy_detection.html#sphx-glr-download-topic-vta-tutorials-frontend-deploy-detection-py",children:"\u6B64\u5904"})," \u4E0B\u8F7D\u5B8C\u6574\u7684\u793A\u4F8B\u4EE3\u7801"]})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"\u4F5C\u8005"}),"\uFF1A",(0,r.jsx)(e.a,{href:"https://github.com/huajsj",children:"Hua Jiang"})]}),"\n",(0,r.jsx)(e.p,{children:"\u672C\u6559\u7A0B\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7AEF\u5230\u7AEF demo\uFF0C\u4ECB\u7ECD\u4E86\u5982\u4F55\u5728 VTA \u52A0\u901F\u5668\u8BBE\u8BA1\u4E0A\u8FD0\u884C Darknet YoloV3-tiny \u63A8\u7406\uFF0C\u6267\u884C\u56FE\u50CF\u68C0\u6D4B\u4EFB\u52A1\u3002\u5B83\u5C55\u793A\u4E86 Relay \u4F5C\u4E3A\u4E00\u4E2A\u524D\u7AEF\u7F16\u8BD1\u5668\uFF0C\u53EF\u4EE5\u6267\u884C\u91CF\u5316\uFF08VTA \u4EC5\u652F\u6301 int8/32 \u63A8\u7406\uFF09\u4EE5\u53CA\u8BA1\u7B97\u56FE\u6253\u5305\uFF08\u4E3A\u4E86\u5728 core \u4E2D\u542F\u7528\u5F20\u91CF\uFF09\uFF0C\u4ECE\u800C\u4E3A\u786C\u4EF6 target \u4FEE\u6539\u8BA1\u7B97\u56FE\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"\u5B89\u88C5\u4F9D\u8D56",children:"\u5B89\u88C5\u4F9D\u8D56"}),"\n",(0,r.jsx)(e.p,{children:"\u8981\u5728 TVM \u4E2D\u4F7F\u7528 autotvm \u5305\uFF0C\u9700\u8981\u5B89\u88C5\u989D\u5916\u7684\u4F9D\u8D56\uFF08\u5982\u679C\u7528\u7684\u662F Python2\uFF0C\u8BF7\u5C06\u300C3\u300D\u66F4\u6539\u4E3A\u300C2\u300D\uFF09\uFF1A"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'pip3 install "Pillow<7"\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u652F\u6301 Darknet \u89E3\u6790\u7684 YOLO-V3-tiny \u6A21\u578B\u4F9D\u8D56\u4E8E CFFI \u548C CV2 \u5E93\uFF0C\u56E0\u6B64\u8981\u5728\u6267\u884C\u6B64\u811A\u672C\u4E4B\u524D\u5B89\u88C5 CFFI \u548C CV2\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"pip3 install cffi\npip3 install opencv-python\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5728 Python \u4EE3\u7801\u4E2D\u5BFC\u5165\u5305\uFF1A"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'from __future__ import absolute_import, print_function\n\nimport sys\nimport os\nimport time\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport tvm\nimport vta\nfrom tvm import rpc, autotvm, relay\nfrom tvm.relay.testing import yolo_detection, darknet\nfrom tvm.relay.testing.darknet import __darknetffi__\nfrom tvm.contrib import graph_executor, utils\nfrom tvm.contrib.download import download_testdata\nfrom vta.testing import simulator\nfrom vta.top import graph_pack\n\n# \u786E\u4FDD TVM \u662F\u4F7F\u7528 RPC=1 \u7F16\u8BD1\u7684\nassert tvm.runtime.enabled("rpc")\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u6839\u636E Model Name \u4E0B\u8F7D yolo net \u914D\u7F6E\u6587\u4EF6\u3001\u6743\u91CD\u6587\u4EF6\u3001Darknet \u5E93\u6587\u4EF6\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'MODEL_NAME = "yolov3-tiny"\nREPO_URL = "https://github.com/dmlc/web-data/blob/main/darknet/"\n\ncfg_path = download_testdata(\n    "https://github.com/pjreddie/darknet/blob/master/cfg/" + MODEL_NAME + ".cfg" + "?raw=true",\n    MODEL_NAME + ".cfg",\n    module="darknet",\n)\nweights_path = download_testdata(\n    "https://pjreddie.com/media/files/" + MODEL_NAME + ".weights" + "?raw=true",\n    MODEL_NAME + ".weights",\n    module="darknet",\n)\n\nif sys.platform in ["linux", "linux2"]:\n    darknet_lib_path = download_testdata(\n        REPO_URL + "lib/" + "libdarknet2.0.so" + "?raw=true", "libdarknet2.0.so", module="darknet"\n    )\nelif sys.platform == "darwin":\n    darknet_lib_path = download_testdata(\n        REPO_URL + "lib_osx/" + "libdarknet_mac2.0.so" + "?raw=true",\n        "libdarknet_mac2.0.so",\n        module="darknet",\n    )\nelse:\n    raise NotImplementedError("Darknet lib is not supported on {} platform".format(sys.platform))\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u4E0B\u8F7D-yolo-\u6807\u7B7E\u540D\u79F0\u548C\u5BF9\u5E94\u63D2\u56FE",children:"\u4E0B\u8F7D YOLO \u6807\u7B7E\u540D\u79F0\u548C\u5BF9\u5E94\u63D2\u56FE"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'coco_path = download_testdata(\n    REPO_URL + "data/" + "coco.names" + "?raw=true", "coco.names", module="data"\n)\nfont_path = download_testdata(\n    REPO_URL + "data/" + "arial.ttf" + "?raw=true", "arial.ttf", module="data"\n)\nwith open(coco_path) as f:\n    content = f.readlines()\nnames = [x.strip() for x in content]\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u5B9A\u4E49\u5E73\u53F0\u548C\u6A21\u578B-target",children:"\u5B9A\u4E49\u5E73\u53F0\u548C\u6A21\u578B target"}),"\n",(0,r.jsx)(e.p,{children:"\u5BF9\u6BD4\u5728 CPU \u4E0E VTA \u4E0A\u6267\u884C\uFF0C\u5E76\u5B9A\u4E49\u6A21\u578B\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'# \u4ECE 3rdparty/vta-hw/config/vta_config.json \u6587\u4EF6\u52A0\u8F7D VTA \u53C2\u6570\nenv = vta.get_env()\n# \u8BBE\u7F6E ``device=arm_cpu``\uFF0C\u5728 CPU \u4E0A\u8FD0\u884C\u63A8\u7406\n# \u8BBE\u7F6E ``device=vta`` \u5728 FPGA \u4E0A\u8FD0\u884C\u63A8\u7406\ndevice = "vta"\ntarget = env.target if device == "vta" else env.target_vta_cpu\n\npack_dict = {\n    "yolov3-tiny": ["nn.max_pool2d", "cast", 4, 186],\n}\n\n# \u8981\u7F16\u8BD1\u7684 Darknet \u6A21\u578B\u7684\u540D\u79F0\n# ``start_pack`` \u548C ``stop_pack`` \u6807\u7B7E\u6307\u793A\u5728\u54EA\u91CC\u5F00\u59CB\u548C\u7ED3\u675F\u8BA1\u7B97\u56FE\u6253\u5305 Relay pass\uFF1A\u6362\u53E5\u8BDD\u8BF4\uFF0C\u4ECE\u54EA\u91CC\u5F00\u59CB\u548C\u7ED3\u675F\u8F6C\u79FB\u5230 VTA\u3002\n# \u6570\u5B57 4 \u8868\u793A ``start_pack`` \u7D22\u5F15\u662F 4\uFF0C\u6570\u5B57 186 \u8868\u793A ``stop_pack \u7D22\u5F15`` \u662F 186\uFF0C\u901A\u8FC7\u4F7F\u7528\u540D\u79F0\u548C\u7D22\u5F15\u53F7\uFF0C\u53EF\u4EE5\u5728\u8FD9\u91CC\u627E\u5230\u6B63\u786E\u7684\u5F00\u59CB/\u7ED3\u675F\u7684\u4F4D\u7F6E\u662F\u591A\u4E2A ``nn.max_pool2d`` \u6216 ``cast``\uFF0C print(mod.astext(show_meta_data=False)) \u53EF\u4EE5\u5E2E\u52A9\u67E5\u627E\u7B97\u5B50\u540D\u79F0\u548C\u7D22\u5F15\u4FE1\u606F\u3002\nassert MODEL_NAME in pack_dict\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u83B7\u53D6\u8FDC\u7A0B\u6267\u884C",children:"\u83B7\u53D6\u8FDC\u7A0B\u6267\u884C"}),"\n",(0,r.jsx)(e.p,{children:"\u5F53 target \u662F\u300Cpynq\u300D\u6216\u5176\u4ED6 FPGA \u540E\u7AEF\u65F6\uFF0C\u91CD\u65B0\u914D\u7F6E FPGA \u548C runtime\u3002\u82E5 target \u662F\u300Csim\u300D\uFF0C\u5219\u5728\u672C\u5730\u6267\u884C\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'if env.TARGET not in ["sim", "tsim"]:\n    # \u82E5\u8BBE\u7F6E\u4E86\u73AF\u5883\u53D8\u91CF\uFF0C\u5219\u4ECE\u8DDF\u8E2A\u5668\u8282\u70B9\u83B7\u53D6\u8FDC\u7A0B\u3002\n    # \u8981\u8BBE\u7F6E\u8DDF\u8E2A\u5668\uFF0C\u4F60\u9700\u8981\u9075\u5FAA\u300C\u4E3A VTA \u81EA\u52A8\u8C03\u4F18\u5377\u79EF\u7F51\u7EDC\u300D\u6559\u7A0B\u3002\n    tracker_host = os.environ.get("TVM_TRACKER_HOST", None)\n    tracker_port = os.environ.get("TVM_TRACKER_PORT", None)\n    # \u5426\u5219\uFF0C\u82E5\u6709\u4E00\u4E2A\u60F3\u8981\u76F4\u63A5\u4ECE\u4E3B\u673A\u7F16\u7A0B\u7684\u8BBE\u5907\uFF0C\u8BF7\u786E\u4FDD\u5DF2\u5C06\u4EE5\u4E0B\u53D8\u91CF\u8BBE\u7F6E\u4E3A\u4F60\u7684\u677F\u5B50\u7684 IP\u3002\n    device_host = os.environ.get("VTA_RPC_HOST", "192.168.2.99")\n    device_port = os.environ.get("VTA_RPC_PORT", "9091")\n    if not tracker_host or not tracker_port:\n        remote = rpc.connect(device_host, int(device_port))\n    else:\n        remote = autotvm.measure.request_remote(\n            env.TARGET, tracker_host, int(tracker_port), timeout=10000\n        )\n    # \u91CD\u65B0\u914D\u7F6E JIT runtime \u548C FPGA\n    # \u53EF\u4EE5\u901A\u8FC7\u5C06\u8DEF\u5F84\u4F20\u9012\u7ED9\u6BD4\u7279\u6D41\u6587\u4EF6\uFF0C\u800C\u975E None\uFF0C\u4F7F\u7528\u81EA\u5B9A\u4E49\u6BD4\u7279\u6D41\u5BF9 FPGA \u8FDB\u884C\u7F16\u7A0B\u3002\n    reconfig_start = time.time()\n    vta.reconfig_runtime(remote)\n    vta.program_fpga(remote, bitstream=None)\n    reconfig_time = time.time() - reconfig_start\n    print("Reconfigured FPGA and RPC runtime in {0:.2f}s!".format(reconfig_time))\n\n# \u5728\u6A21\u62DF\u6A21\u5F0F\u4E0B\uFF0C\u672C\u5730\u6258\u7BA1 RPC \u670D\u52A1\u5668\u3002\nelse:\n    remote = rpc.LocalSession()\n\n# \u4ECE\u8FDC\u7A0B\u83B7\u53D6\u6267\u884C\u4E0A\u4E0B\u6587\nctx = remote.ext_dev(0) if device == "vta" else remote.cpu(0)\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u6784\u5EFA\u63A8\u7406\u56FE\u6267\u884C\u5668",children:"\u6784\u5EFA\u63A8\u7406\u56FE\u6267\u884C\u5668"}),"\n",(0,r.jsx)(e.p,{children:"\u7528 Darknet \u5E93\u52A0\u8F7D\u4E0B\u8F7D\u7684\u89C6\u89C9\u6A21\u578B\uFF0C\u5E76\u7528 Relay \u7F16\u8BD1\u3002\u7F16\u8BD1\u6B65\u9AA4\u5982\u4E0B\uFF1A"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"\u4ECE Darknet \u5230 Relay \u6A21\u5757\u7684\u524D\u7AEF\u8F6C\u6362\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u5E94\u7528 8 \u4F4D\u91CF\u5316\uFF1A\u8FD9\u91CC\u8DF3\u8FC7\u7B2C\u4E00\u4E2A conv \u5C42\u548C dense \u5C42\uFF0C\u5B83\u4EEC\u90FD\u5C06\u5728 CPU \u4E0A\u4EE5 fp32 \u6267\u884C\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884C\u8BA1\u7B97\u56FE\u6253\u5305\uFF0C\u66F4\u6539\u5F20\u91CF\u5316\u7684\u6570\u636E\u5E03\u5C40\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884C\u5E38\u91CF\u6298\u53E0\uFF0C\u51CF\u5C11\u7B97\u5B50\u7684\u6570\u91CF\uFF08\u4F8B\u5982\uFF0C\u6D88\u9664 batch norm multiply\uFF09\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u5BF9\u76EE\u6807\u6587\u4EF6\u6267\u884C Relay \u6784\u5EFA\u3002"}),"\n",(0,r.jsx)(e.li,{children:"\u5C06\u76EE\u6807\u6587\u4EF6\u52A0\u8F7D\u5230\u8FDC\u7A0B\uFF08FPGA \u8BBE\u5907\uFF09\u3002"}),"\n",(0,r.jsxs)(e.li,{children:["\u751F\u6210\u56FE\u6267\u884C\u5668 ",(0,r.jsx)(e.em,{children:"m"}),"\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'# \u52A0\u8F7D\u9884\u5148\u914D\u7F6E\u7684 AutoTVM schedule\nwith autotvm.tophub.context(target):\n    net = __darknetffi__.dlopen(darknet_lib_path).load_network(\n        cfg_path.encode("utf-8"), weights_path.encode("utf-8"), 0\n    )\n    dshape = (env.BATCH, net.c, net.h, net.w)\n    dtype = "float32"\n\n    # \u6D4B\u8BD5\u6784\u5EFA\u5F00\u59CB\u65F6\u95F4\n    build_start = time.time()\n\n    # \u5F00\u59CB\u524D\u7AEF\u7F16\u8BD1\n    mod, params = relay.frontend.from_darknet(net, dtype=dtype, shape=dshape)\n\n    if target.device_name == "vta":\n        # \u5728 Relay \u4E2D\u6267\u884C\u91CF\u5316\n        # \u6CE8\u610F\uFF1A\u5C06 opt_level \u8BBE\u7F6E\u4E3A 3\uFF0C\u6298\u53E0 batch norm\n        with tvm.transform.PassContext(opt_level=3):\n            with relay.quantize.qconfig(\n                global_scale=23.0,\n                skip_conv_layers=[0],\n                store_lowbit_output=True,\n                round_for_shift=True,\n            ):\n                mod = relay.quantize.quantize(mod, params=params)\n            # \u5BF9 VTA target \u8FDB\u884C\u8BA1\u7B97\u56FE\u6253\u5305\u548C\u5E38\u91CF\u6298\u53E0\n            mod = graph_pack(\n                mod["main"],\n                env.BATCH,\n                env.BLOCK_OUT,\n                env.WGT_WIDTH,\n                start_name=pack_dict[MODEL_NAME][0],\n                stop_name=pack_dict[MODEL_NAME][1],\n                start_name_idx=pack_dict[MODEL_NAME][2],\n                stop_name_idx=pack_dict[MODEL_NAME][3],\n            )\n    else:\n        mod = mod["main"]\n\n    # \u5728\u7981\u7528 AlterOpLayout \u7684\u60C5\u51B5\u4E0B\uFF0C\u7F16\u8BD1 Relay \u7A0B\u5E8F\n    with vta.build_config(disabled_pass={"AlterOpLayout", "tir.CommonSubexprElimTIR"}):\n        lib = relay.build(\n            mod, target=tvm.target.Target(target, host=env.target_host), params=params\n        )\n\n    # \u6D4B\u8BD5 Relay \u6784\u5EFA\u65F6\u95F4\n    build_time = time.time() - build_start\n    print(MODEL_NAME + " inference graph built in {0:.2f}s!".format(build_time))\n\n    # \u5C06\u63A8\u7406\u5E93\u53D1\u9001\u5230\u8FDC\u7A0B RPC \u670D\u52A1\u5668\n    temp = utils.tempdir()\n    lib.export_library(temp.relpath("graphlib.tar"))\n    remote.upload(temp.relpath("graphlib.tar"))\n    lib = remote.load_module("graphlib.tar")\n\n    # \u56FE\u6267\u884C\u5668\n    m = graph_executor.GraphModule(lib["default"](ctx))\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u8F93\u51FA\u7ED3\u679C\uFF1A"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'/workspace/python/tvm/driver/build_module.py:267: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.\n  "target_host parameter is going to be deprecated. "\n/workspace/python/tvm/relay/build_module.py:411: DeprecationWarning: Please use input parameter mod (tvm.IRModule) instead of deprecated parameter mod (tvm.relay.function.Function)\n  DeprecationWarning,\nyolov3-tiny inference graph built in 16.12s!\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u6267\u884C\u56FE\u50CF\u68C0\u6D4B\u63A8\u7406",children:"\u6267\u884C\u56FE\u50CF\u68C0\u6D4B\u63A8\u7406"}),"\n",(0,r.jsx)(e.p,{children:"\u5728\u4E0B\u8F7D\u7684\u6D4B\u8BD5\u56FE\u50CF\u4E0A\u8FD0\u884C\u68C0\u6D4B"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'[neth, netw] = dshape[2:]\ntest_image = "person.jpg"\nimg_url = REPO_URL + "data/" + test_image + "?raw=true"\nimg_path = download_testdata(img_url, test_image, "data")\ndata = darknet.load_image(img_path, neth, netw).transpose(1, 2, 0)\n\n# \u4E3A\u63A8\u7406\u51C6\u5907\u6D4B\u8BD5\u56FE\u50CF\nplt.imshow(data)\nplt.show()\ndata = data.transpose((2, 0, 1))\ndata = data[np.newaxis, :]\ndata = np.repeat(data, env.BATCH, axis=0)\n\n# \u8BBE\u7F6E\u7F51\u7EDC\u53C2\u6570\u548C\u8F93\u5165\nm.set_input("data", data)\n\n# \u6267\u884C\u63A8\u7406\uFF0C\u5E76\u6536\u96C6\u6267\u884C\u7EDF\u8BA1\u4FE1\u606F\n# \u66F4\u591A\u4FE1\u606F\uFF1A:py:method:`tvm.runtime.Module.time_evaluator`\nnum = 4  # \u5355\u6B21\u6D4B\u8BD5\u8FD0\u884C\u6A21\u5757\u7684\u6B21\u6570\nrep = 3  # \u6D4B\u8BD5\u6B21\u6570\uFF08\u6211\u4EEC\u4ECE\u4E2D\u5F97\u51FA\u6807\u51C6\u5DEE\uFF09\ntimer = m.module.time_evaluator("run", ctx, number=num, repeat=rep)\n\nif env.TARGET in ["sim", "tsim"]:\n    simulator.clear_stats()\n    timer()\n    sim_stats = simulator.stats()\n    print("\\nExecution statistics:")\n    for k, v in sim_stats.items():\n        # \u7531\u4E8E\u6211\u4EEC\u591A\u6B21\u6267\u884C\u5DE5\u4F5C\u8D1F\u8F7D\uFF0C\u6211\u4EEC\u9700\u8981\u6807\u51C6\u5316\u7EDF\u8BA1\u4FE1\u606F\n        # \u6CE8\u610F\uFF0C\u603B\u662F\u6709\u4E00\u4E2A\u9884\u70ED\n        # \u56E0\u6B64\u5C06\u6574\u4F53\u7EDF\u8BA1\u6570\u636E\u9664\u4EE5 (num * rep + 1)\n        print("\\t{:<16}: {:>16}".format(k, v // (num * rep + 1)))\nelse:\n    tcost = timer()\n    std = np.std(tcost.results) * 1000\n    mean = tcost.mean * 1000\n    print("\\nPerformed inference in %.2fms (std = %.2f) for %d samples" % (mean, std, env.BATCH))\n    print("Average per sample inference time: %.2fms" % (mean / env.BATCH))\n\n# \u4ECE out \u83B7\u53D6\u68C0\u6D4B\u7ED3\u679C\nthresh = 0.5\nnms_thresh = 0.45\ntvm_out = []\nfor i in range(2):\n    layer_out = {}\n    layer_out["type"] = "Yolo"\n    # \u83B7\u53D6 yolo \u5C42\u7684\u5C5E\u6027 (n\u3001out_c\u3001out_h\u3001out_w\u3001classes\u3001total)\n    layer_attr = m.get_output(i * 4 + 3).numpy()\n    layer_out["biases"] = m.get_output(i * 4 + 2).numpy()\n    layer_out["mask"] = m.get_output(i * 4 + 1).numpy()\n    out_shape = (layer_attr[0], layer_attr[1] // layer_attr[0], layer_attr[2], layer_attr[3])\n    layer_out["output"] = m.get_output(i * 4).numpy().reshape(out_shape)\n    layer_out["classes"] = layer_attr[4]\n    tvm_out.append(layer_out)\n    thresh = 0.560\n\n# \u663E\u793A\u68C0\u6D4B\u7ED3\u679C\nimg = darknet.load_image_color(img_path)\n_, im_h, im_w = img.shape\ndets = yolo_detection.fill_network_boxes((netw, neth), (im_w, im_h), thresh, 1, tvm_out)\nlast_layer = net.layers[net.n - 1]\nyolo_detection.do_nms_sort(dets, last_layer.classes, nms_thresh)\nyolo_detection.draw_detections(font_path, img, dets, thresh, names, last_layer.classes)\nplt.imshow(img.transpose(1, 2, 0))\nplt.show()\n'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://tvm.apache.org/docs/_images/sphx_glr_deploy_detection_001.png",alt:"deploy detection"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"Execution statistics:\n        inp_load_nbytes :         25462784\n        wgt_load_nbytes :         17558016\n        acc_load_nbytes :            96128\n        uop_load_nbytes :             5024\n        out_store_nbytes:          3396224\n        gemm_counter    :         10578048\n        alu_counter     :           849056\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/65b9451c8de050d7cd9da2fe5a49acc6/deploy_detection.py",children:"\u4E0B\u8F7D Python \u6E90\u4EE3\u7801\uFF1Adeploy_detection.py"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://tvm.apache.org/docs/_downloads/66e1a42229aae7ed49ac268f520e6727/deploy_detection.ipynb",children:"\u4E0B\u8F7D Jupyter Notebook\uFF1Adeploy_detection.ipynb"})})]})}function c(t={}){let{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(p,{...t})}):p(t)}},21494:function(t,e,n){n.d(e,{Z:function(){return s},a:function(){return i}});var a=n(39546);let r={},o=a.createContext(r);function i(t){let e=a.useContext(o);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:i(t.components),a.createElement(o.Provider,{value:e},t.children)}}}]);