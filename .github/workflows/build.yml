name: 'build'
on:
  workflow_dispatch:
  # schedule:
  #   - cron: '10 0 * * *'
  push:
    tags:
      - "*"
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.com

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile --ignore-scripts

      - name: Build
        run: npm run build
        env:
          CI_BUILD: 1
          GITHUB_CI: 1

      # - name: GitHub Pages action
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./docs

      # - name: Github Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     draft: false
      #     prerelease: false
          # tag_name: ${{ github.ref }}
          # name: Release ${{ github.ref }}
          # body: TODO New Release.
          # files: |
          #   ${{ secrets.ReleaseZipName }}.zip
          #   LICENSE
